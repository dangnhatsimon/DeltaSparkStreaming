{"Event":"SparkListenerLogStart","Spark Version":"3.5.5"}
{"Event":"SparkListenerResourceProfileAdded","Resource Profile Id":0,"Executor Resource Requests":{"cores":{"Resource Name":"cores","Amount":4,"Discovery Script":"","Vendor":""},"memory":{"Resource Name":"memory","Amount":2048,"Discovery Script":"","Vendor":""},"offHeap":{"Resource Name":"offHeap","Amount":0,"Discovery Script":"","Vendor":""}},"Task Resource Requests":{"cpus":{"Resource Name":"cpus","Amount":1.0}}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"driver","Host":"163d156376d2","Port":36329},"Maximum Memory":455501414,"Timestamp":1747554840278,"Maximum Onheap Memory":455501414,"Maximum Offheap Memory":0}
{"Event":"SparkListenerEnvironmentUpdate","JVM Information":{"Java Home":"/usr/lib/jvm/java-17-openjdk-amd64","Java Version":"17.0.14 (Debian)","Scala Version":"version 2.12.18"},"Spark Properties":{"spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.warehouse.dir":"/opt/spark/warehouse","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.driver.host":"163d156376d2","spark.serializer.objectStreamReset":"100","spark.history.fs.logDirectory":"/opt/spark/spark-events","spark.log.level":"INFO","spark.eventLog.enabled":"true","spark.driver.port":"42423","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.app.name":"InvoicesStreamMedallion","spark.scheduler.mode":"FIFO","spark.submit.pyFiles":"","spark.ui.showConsoleProgress":"true","spark.app.submitTime":"1747554753184","spark.app.startTime":"1747554840211","spark.executor.id":"driver","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.submit.deployMode":"client","spark.driver.memoryOverheadFactor":"0.1","spark.master":"spark://delta-streaming-spark-master:7077","spark.executor.memory":"2g","spark.eventLog.dir":"/opt/spark/spark-events","spark.sql.catalogImplementation":"hive","spark.executor.cores":"4","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.app.id":"app-20250518075400-0005"},"Hadoop Properties":{"hadoop.service.shutdown.timeout":"30s","yarn.resourcemanager.amlauncher.thread-count":"50","yarn.sharedcache.enabled":"false","fs.s3a.connection.maximum":"96","yarn.nodemanager.numa-awareness.numactl.cmd":"/usr/bin/numactl","fs.viewfs.overload.scheme.target.o3fs.impl":"org.apache.hadoop.fs.ozone.OzoneFileSystem","fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms":"1000","yarn.timeline-service.timeline-client.number-of-async-entities-to-merge":"10","hadoop.security.kms.client.timeout":"60","hadoop.http.authentication.kerberos.principal":"HTTP/_HOST@LOCALHOST","mapreduce.jobhistory.loadedjob.tasks.max":"-1","yarn.resourcemanager.application-tag-based-placement.enable":"false","mapreduce.framework.name":"local","yarn.sharedcache.uploader.server.thread-count":"50","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds.min":"3600","yarn.nodemanager.linux-container-executor.nonsecure-mode.user-pattern":"^[_.A-Za-z0-9][-@_.A-Za-z0-9]{0,255}?[$]?$","tfile.fs.output.buffer.size":"262144","yarn.app.mapreduce.am.job.task.listener.thread-count":"30","yarn.nodemanager.node-attributes.resync-interval-ms":"120000","yarn.nodemanager.container-log-monitor.interval-ms":"60000","hadoop.security.groups.cache.background.reload.threads":"3","yarn.resourcemanager.webapp.cross-origin.enabled":"false","fs.AbstractFileSystem.ftp.impl":"org.apache.hadoop.fs.ftp.FtpFs","fs.viewfs.overload.scheme.target.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","hadoop.registry.secure":"false","hadoop.shell.safely.delete.limit.num.files":"100","mapreduce.job.acl-view-job":" ","fs.s3a.s3guard.ddb.background.sleep":"25ms","fs.s3a.retry.limit":"7","mapreduce.jobhistory.loadedjobs.cache.size":"5","fs.s3a.s3guard.ddb.table.create":"false","fs.viewfs.overload.scheme.target.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.nodemanager.amrmproxy.enabled":"false","yarn.timeline-service.entity-group-fs-store.with-user-dir":"false","mapreduce.shuffle.pathcache.expire-after-access-minutes":"5","mapreduce.input.fileinputformat.split.minsize":"0","yarn.resourcemanager.container.liveness-monitor.interval-ms":"600000","yarn.resourcemanager.client.thread-count":"50","io.seqfile.compress.blocksize":"1000000","yarn.nodemanager.runtime.linux.docker.allowed-container-runtimes":"runc","fs.viewfs.overload.scheme.target.http.impl":"org.apache.hadoop.fs.http.HttpFileSystem","yarn.resourcemanager.nodemanagers.heartbeat-interval-slowdown-factor":"1.0","yarn.sharedcache.checksum.algo.impl":"org.apache.hadoop.yarn.sharedcache.ChecksumSHA256Impl","yarn.nodemanager.amrmproxy.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor","yarn.timeline-service.entity-group-fs-store.leveldb-cache-read-cache-size":"10485760","mapreduce.reduce.shuffle.fetch.retry.interval-ms":"1000","mapreduce.task.profile.maps":"0-2","yarn.scheduler.include-port-in-node-name":"false","yarn.nodemanager.admin-env":"MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX","yarn.resourcemanager.node-removal-untracked.timeout-ms":"60000","mapreduce.am.max-attempts":"2","hadoop.security.kms.client.failover.sleep.base.millis":"100","mapreduce.jobhistory.webapp.https.address":"0.0.0.0:19890","yarn.node-labels.fs-store.impl.class":"org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore","yarn.nodemanager.collector-service.address":"${yarn.nodemanager.hostname}:8048","fs.trash.checkpoint.interval":"0","mapreduce.job.map.output.collector.class":"org.apache.hadoop.mapred.MapTask$MapOutputBuffer","yarn.resourcemanager.node-ip-cache.expiry-interval-secs":"-1","hadoop.http.authentication.signature.secret.file":"*********(redacted)","hadoop.jetty.logs.serve.aliases":"true","yarn.resourcemanager.placement-constraints.handler":"disabled","yarn.timeline-service.handler-thread-count":"10","yarn.resourcemanager.max-completed-applications":"1000","yarn.nodemanager.aux-services.manifest.enabled":"false","yarn.resourcemanager.system-metrics-publisher.enabled":"false","yarn.resourcemanager.placement-constraints.algorithm.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.constraint.algorithm.DefaultPlacementAlgorithm","yarn.sharedcache.webapp.address":"0.0.0.0:8788","fs.s3a.select.input.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.renew-interval":"*********(redacted)","yarn.sharedcache.nm.uploader.replication.factor":"10","hadoop.security.groups.negative-cache.secs":"30","yarn.app.mapreduce.task.container.log.backups":"0","mapreduce.reduce.skip.proc-count.auto-incr":"true","fs.viewfs.overload.scheme.target.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","hadoop.security.group.mapping.ldap.posix.attr.gid.name":"gidNumber","ipc.client.fallback-to-simple-auth-allowed":"false","yarn.nodemanager.resource.memory.enforced":"true","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.enable-batch":"false","yarn.client.failover-proxy-provider":"org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider","yarn.timeline-service.http-authentication.simple.anonymous.allowed":"true","ha.health-monitor.check-interval.ms":"1000","yarn.nodemanager.runtime.linux.runc.host-pid-namespace.allowed":"false","hadoop.metrics.jvm.use-thread-mxbean":"false","ipc.[port_number].faircallqueue.multiplexer.weights":"8,4,2,1","yarn.acl.reservation-enable":"false","yarn.resourcemanager.store.class":"org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore","yarn.app.mapreduce.am.hard-kill-timeout-ms":"10000","fs.s3a.etag.checksum.enabled":"false","yarn.nodemanager.container-metrics.enable":"true","ha.health-monitor.rpc.connect.max.retries":"1","yarn.timeline-service.client.fd-clean-interval-secs":"60","yarn.resourcemanager.nodemanagers.heartbeat-interval-scaling-enable":"false","yarn.resourcemanager.nodemanagers.heartbeat-interval-ms":"1000","hadoop.common.configuration.version":"3.0.0","fs.s3a.s3guard.ddb.table.capacity.read":"0","yarn.nodemanager.remote-app-log-dir-suffix":"logs","yarn.nodemanager.container-log-monitor.dir-size-limit-bytes":"1000000000","yarn.nodemanager.windows-container.cpu-limit.enabled":"false","yarn.nodemanager.runtime.linux.docker.privileged-containers.allowed":"false","file.blocksize":"67108864","hadoop.http.idle_timeout.ms":"60000","hadoop.registry.zk.retry.ceiling.ms":"60000","yarn.scheduler.configuration.leveldb-store.path":"${hadoop.tmp.dir}/yarn/system/confstore","yarn.sharedcache.store.in-memory.initial-delay-mins":"10","mapreduce.jobhistory.principal":"jhs/_HOST@REALM.TLD","mapreduce.map.skip.proc-count.auto-incr":"true","fs.s3a.committer.name":"file","mapreduce.task.profile.reduces":"0-2","hadoop.zk.num-retries":"1000","yarn.webapp.xfs-filter.enabled":"true","fs.viewfs.overload.scheme.target.hdfs.impl":"org.apache.hadoop.hdfs.DistributedFileSystem","seq.io.sort.mb":"100","yarn.scheduler.configuration.max.version":"100","yarn.timeline-service.webapp.https.address":"${yarn.timeline-service.hostname}:8190","yarn.resourcemanager.scheduler.address":"${yarn.resourcemanager.hostname}:8030","yarn.node-labels.enabled":"false","yarn.resourcemanager.webapp.ui-actions.enabled":"true","mapreduce.task.timeout":"600000","yarn.sharedcache.client-server.thread-count":"50","hadoop.security.groups.shell.command.timeout":"0s","hadoop.security.crypto.cipher.suite":"AES/CTR/NoPadding","yarn.nodemanager.elastic-memory-control.oom-handler":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.DefaultOOMHandler","yarn.resourcemanager.connect.max-wait.ms":"900000","fs.defaultFS":"file:///","yarn.minicluster.use-rpc":"false","ipc.[port_number].decay-scheduler.decay-factor":"0.5","fs.har.impl.disable.cache":"true","yarn.webapp.ui2.enable":"false","io.compression.codec.bzip2.library":"system-native","yarn.webapp.filter-invalid-xml-chars":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-interval-secs":"600","fs.s3a.select.input.csv.record.delimiter":"\\n","fs.s3a.change.detection.source":"etag","ipc.[port_number].backoff.enable":"false","yarn.nodemanager.distributed-scheduling.enabled":"false","mapreduce.shuffle.connection-keep-alive.timeout":"5","yarn.resourcemanager.webapp.https.address":"${yarn.resourcemanager.hostname}:8090","yarn.webapp.enable-rest-app-submissions":"true","mapreduce.jobhistory.address":"0.0.0.0:10020","yarn.resourcemanager.nm-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.is.minicluster":"false","yarn.nodemanager.address":"${yarn.nodemanager.hostname}:0","fs.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","fs.AbstractFileSystem.s3a.impl":"org.apache.hadoop.fs.s3a.S3A","mapreduce.task.combine.progress.records":"10000","yarn.resourcemanager.epoch.range":"0","yarn.resourcemanager.am.max-attempts":"2","yarn.nodemanager.runtime.linux.runc.image-toplevel-dir":"/runc-root","yarn.nodemanager.linux-container-executor.cgroups.hierarchy":"/hadoop-yarn","fs.AbstractFileSystem.wasbs.impl":"org.apache.hadoop.fs.azure.Wasbs","yarn.timeline-service.entity-group-fs-store.cache-store-class":"org.apache.hadoop.yarn.server.timeline.MemoryTimelineStore","yarn.nodemanager.runtime.linux.runc.allowed-container-networks":"host,none,bridge","fs.ftp.transfer.mode":"BLOCK_TRANSFER_MODE","ipc.server.log.slow.rpc":"false","ipc.server.reuseaddr":"true","fs.ftp.timeout":"0","yarn.resourcemanager.node-labels.provider.fetch-interval-ms":"1800000","yarn.router.webapp.https.address":"0.0.0.0:8091","yarn.nodemanager.webapp.cross-origin.enabled":"false","fs.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","yarn.resourcemanager.auto-update.containers":"false","yarn.app.mapreduce.am.job.committer.cancel-timeout":"60000","yarn.scheduler.configuration.zk-store.parent-path":"/confstore","yarn.nodemanager.default-container-executor.log-dirs.permissions":"710","yarn.app.attempt.diagnostics.limit.kc":"64","fs.viewfs.overload.scheme.target.swebhdfs.impl":"org.apache.hadoop.hdfs.web.SWebHdfsFileSystem","yarn.client.failover-no-ha-proxy-provider":"org.apache.hadoop.yarn.client.DefaultNoHARMFailoverProxyProvider","fs.s3a.change.detection.mode":"server","ftp.bytes-per-checksum":"512","yarn.nodemanager.resource.memory-mb":"-1","fs.AbstractFileSystem.abfs.impl":"org.apache.hadoop.fs.azurebfs.Abfs","yarn.timeline-service.writer.flush-interval-seconds":"60","fs.s3a.fast.upload.active.blocks":"4","yarn.resourcemanager.submission-preprocessor.enabled":"false","hadoop.security.credential.clear-text-fallback":"true","yarn.nodemanager.collector-service.thread-count":"5","ipc.[port_number].scheduler.impl":"org.apache.hadoop.ipc.DefaultRpcScheduler","fs.azure.secure.mode":"false","mapreduce.jobhistory.joblist.cache.size":"20000","fs.ftp.host":"0.0.0.0","yarn.timeline-service.writer.async.queue.capacity":"100","yarn.resourcemanager.fs.state-store.num-retries":"0","yarn.resourcemanager.nodemanager-connect-retries":"10","yarn.nodemanager.log-aggregation.num-log-files-per-app":"30","hadoop.security.kms.client.encrypted.key.cache.low-watermark":"0.3f","fs.s3a.committer.magic.enabled":"true","yarn.timeline-service.client.max-retries":"30","dfs.ha.fencing.ssh.connect-timeout":"30000","yarn.log-aggregation-enable":"false","yarn.system-metrics-publisher.enabled":"false","mapreduce.reduce.markreset.buffer.percent":"0.0","fs.AbstractFileSystem.viewfs.impl":"org.apache.hadoop.fs.viewfs.ViewFs","yarn.resourcemanager.nodemanagers.heartbeat-interval-speedup-factor":"1.0","mapreduce.task.io.sort.factor":"10","yarn.nodemanager.amrmproxy.client.thread-count":"25","ha.failover-controller.new-active.rpc-timeout.ms":"60000","yarn.nodemanager.container-localizer.java.opts":"-Xmx256m","mapreduce.jobhistory.datestring.cache.size":"200000","mapreduce.job.acl-modify-job":" ","yarn.nodemanager.windows-container.memory-limit.enabled":"false","yarn.timeline-service.webapp.address":"${yarn.timeline-service.hostname}:8188","yarn.app.mapreduce.am.job.committer.commit-window":"10000","yarn.nodemanager.container-manager.thread-count":"20","yarn.minicluster.fixed.ports":"false","hadoop.tags.system":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.cluster.max-application-priority":"0","yarn.timeline-service.ttl-enable":"true","mapreduce.jobhistory.recovery.store.fs.uri":"${hadoop.tmp.dir}/mapred/history/recoverystore","hadoop.caller.context.signature.max.size":"40","ipc.[port_number].decay-scheduler.backoff.responsetime.enable":"false","yarn.client.load.resource-types.from-server":"false","ha.zookeeper.session-timeout.ms":"10000","ipc.[port_number].decay-scheduler.metrics.top.user.count":"10","tfile.io.chunk.size":"1048576","fs.s3a.s3guard.ddb.table.capacity.write":"0","yarn.dispatcher.print-events-info.threshold":"5000","mapreduce.job.speculative.slowtaskthreshold":"1.0","io.serializations":"org.apache.hadoop.io.serializer.WritableSerialization, org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization, org.apache.hadoop.io.serializer.avro.AvroReflectSerialization","hadoop.security.kms.client.failover.sleep.max.millis":"2000","hadoop.security.group.mapping.ldap.directory.search.timeout":"10000","yarn.scheduler.configuration.store.max-logs":"1000","yarn.nodemanager.node-attributes.provider.fetch-interval-ms":"600000","fs.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","yarn.nodemanager.local-cache.max-files-per-directory":"8192","hadoop.http.cross-origin.enabled":"false","hadoop.zk.acl":"world:anyone:rwcda","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.num-manifests-to-cache":"10","mapreduce.map.sort.spill.percent":"0.80","yarn.timeline-service.entity-group-fs-store.scan-interval-seconds":"60","yarn.node-attribute.fs-store.impl.class":"org.apache.hadoop.yarn.server.resourcemanager.nodelabels.FileSystemNodeAttributeStore","fs.s3a.retry.interval":"500ms","yarn.timeline-service.client.best-effort":"false","yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled":"*********(redacted)","hadoop.security.group.mapping.ldap.posix.attr.uid.name":"uidNumber","fs.AbstractFileSystem.swebhdfs.impl":"org.apache.hadoop.fs.SWebHdfs","yarn.nodemanager.elastic-memory-control.timeout-sec":"5","fs.s3a.select.enabled":"true","mapreduce.ifile.readahead":"true","yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms":"300000","yarn.timeline-service.reader.webapp.address":"${yarn.timeline-service.webapp.address}","yarn.resourcemanager.placement-constraints.algorithm.pool-size":"1","yarn.timeline-service.hbase.coprocessor.jar.hdfs.location":"/hbase/coprocessor/hadoop-yarn-server-timelineservice.jar","hadoop.security.kms.client.encrypted.key.cache.num.refill.threads":"2","yarn.resourcemanager.scheduler.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler","yarn.app.mapreduce.am.command-opts":"-Xmx1024m","fs.s3a.metadatastore.fail.on.write.error":"true","hadoop.http.sni.host.check.enabled":"false","mapreduce.cluster.local.dir":"${hadoop.tmp.dir}/mapred/local","io.mapfile.bloom.error.rate":"0.005","fs.client.resolve.topology.enabled":"false","yarn.nodemanager.runtime.linux.allowed-runtimes":"default","yarn.sharedcache.store.class":"org.apache.hadoop.yarn.server.sharedcachemanager.store.InMemorySCMStore","ha.failover-controller.graceful-fence.rpc-timeout.ms":"5000","ftp.replication":"3","fs.getspaceused.jitterMillis":"60000","hadoop.security.uid.cache.secs":"14400","mapreduce.job.maxtaskfailures.per.tracker":"3","fs.s3a.metadatastore.impl":"org.apache.hadoop.fs.s3a.s3guard.NullMetadataStore","io.skip.checksum.errors":"false","yarn.app.mapreduce.client-am.ipc.max-retries-on-timeouts":"3","yarn.timeline-service.webapp.xfs-filter.xframe-options":"SAMEORIGIN","fs.s3a.connection.timeout":"200000","yarn.app.mapreduce.am.webapp.https.enabled":"false","mapreduce.job.max.split.locations":"15","yarn.resourcemanager.nm-container-queuing.max-queue-length":"15","yarn.resourcemanager.delegation-token.always-cancel":"*********(redacted)","hadoop.registry.zk.session.timeout.ms":"60000","yarn.federation.cache-ttl.secs":"300","mapreduce.jvm.system-properties-to-log":"os.name,os.version,java.home,java.runtime.version,java.vendor,java.version,java.vm.name,java.class.path,java.io.tmpdir,user.dir,user.name","yarn.resourcemanager.opportunistic-container-allocation.nodes-used":"10","yarn.timeline-service.entity-group-fs-store.active-dir":"/tmp/entity-file-history/active","mapreduce.shuffle.transfer.buffer.size":"131072","yarn.timeline-service.client.retry-interval-ms":"1000","yarn.timeline-service.flowname.max-size":"0","yarn.http.policy":"HTTP_ONLY","fs.s3a.socket.send.buffer":"8192","fs.AbstractFileSystem.abfss.impl":"org.apache.hadoop.fs.azurebfs.Abfss","yarn.sharedcache.uploader.server.address":"0.0.0.0:8046","yarn.resourcemanager.delegation-token.max-conf-size-bytes":"*********(redacted)","hadoop.http.authentication.token.validity":"*********(redacted)","mapreduce.shuffle.max.connections":"0","yarn.minicluster.yarn.nodemanager.resource.memory-mb":"4096","mapreduce.job.emit-timeline-data":"false","yarn.nodemanager.resource.system-reserved-memory-mb":"-1","hadoop.kerberos.min.seconds.before.relogin":"60","mapreduce.jobhistory.move.thread-count":"3","yarn.resourcemanager.admin.client.thread-count":"1","yarn.dispatcher.drain-events.timeout":"300000","ipc.[port_number].decay-scheduler.backoff.responsetime.thresholds":"10s,20s,30s,40s","fs.s3a.buffer.dir":"${hadoop.tmp.dir}/s3a","hadoop.ssl.enabled.protocols":"TLSv1.2","mapreduce.jobhistory.admin.address":"0.0.0.0:10033","yarn.log-aggregation-status.time-out.ms":"600000","fs.s3a.accesspoint.required":"false","mapreduce.shuffle.port":"13562","yarn.resourcemanager.max-log-aggregation-diagnostics-in-memory":"10","yarn.nodemanager.health-checker.interval-ms":"600000","yarn.resourcemanager.proxy.connection.timeout":"60000","yarn.router.clientrm.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.clientrm.DefaultClientRequestInterceptor","yarn.resourcemanager.zk-appid-node.split-index":"0","ftp.blocksize":"67108864","yarn.nodemanager.runtime.linux.sandbox-mode.local-dirs.permissions":"read","yarn.router.rmadmin.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.rmadmin.DefaultRMAdminRequestInterceptor","yarn.nodemanager.log-container-debug-info.enabled":"true","yarn.resourcemanager.activities-manager.app-activities.max-queue-length":"100","yarn.resourcemanager.application-https.policy":"NONE","yarn.client.max-cached-nodemanagers-proxies":"0","yarn.nodemanager.linux-container-executor.cgroups.delete-delay-ms":"20","yarn.nodemanager.delete.debug-delay-sec":"0","yarn.nodemanager.pmem-check-enabled":"true","yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage":"90.0","mapreduce.app-submission.cross-platform":"false","yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms":"10000","yarn.nodemanager.container-retry-minimum-interval-ms":"1000","hadoop.security.groups.cache.secs":"300","yarn.federation.enabled":"false","yarn.workflow-id.tag-prefix":"workflowid:","fs.azure.local.sas.key.mode":"false","ipc.maximum.data.length":"134217728","fs.s3a.endpoint":"s3.amazonaws.com","mapreduce.shuffle.max.threads":"0","yarn.router.pipeline.cache-max-size":"25","yarn.resourcemanager.nm-container-queuing.load-comparator":"QUEUE_LENGTH","yarn.resourcemanager.resource-tracker.nm.ip-hostname-check":"false","hadoop.security.authorization":"false","mapreduce.job.complete.cancel.delegation.tokens":"*********(redacted)","fs.s3a.paging.maximum":"5000","nfs.exports.allowed.hosts":"* rw","yarn.nodemanager.amrmproxy.ha.enable":"false","fs.AbstractFileSystem.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","mapreduce.jobhistory.http.policy":"HTTP_ONLY","yarn.sharedcache.store.in-memory.check-period-mins":"720","hadoop.security.group.mapping.ldap.ssl":"false","fs.s3a.downgrade.syncable.exceptions":"true","yarn.client.application-client-protocol.poll-interval-ms":"200","yarn.scheduler.configuration.leveldb-store.compaction-interval-secs":"86400","yarn.timeline-service.writer.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineWriterImpl","ha.zookeeper.parent-znode":"/hadoop-ha","yarn.resourcemanager.submission-preprocessor.file-refresh-interval-ms":"60000","yarn.nodemanager.log-aggregation.policy.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AllContainerLogAggregationPolicy","mapreduce.reduce.shuffle.merge.percent":"0.66","hadoop.security.group.mapping.ldap.search.filter.group":"(objectClass=group)","yarn.resourcemanager.placement-constraints.scheduler.pool-size":"1","yarn.resourcemanager.activities-manager.cleanup-interval-ms":"5000","yarn.nodemanager.resourcemanager.minimum.version":"NONE","mapreduce.job.speculative.speculative-cap-running-tasks":"0.1","yarn.admin.acl":"*","ipc.[port_number].identity-provider.impl":"org.apache.hadoop.ipc.UserIdentityProvider","yarn.nodemanager.recovery.supervised":"false","yarn.sharedcache.admin.thread-count":"1","yarn.resourcemanager.ha.automatic-failover.enabled":"true","yarn.nodemanager.container-log-monitor.total-size-limit-bytes":"10000000000","mapreduce.reduce.skip.maxgroups":"0","mapreduce.reduce.shuffle.connect.timeout":"180000","yarn.nodemanager.health-checker.scripts":"script","yarn.resourcemanager.address":"${yarn.resourcemanager.hostname}:8032","ipc.client.ping":"true","mapreduce.task.local-fs.write-limit.bytes":"-1","fs.adl.oauth2.access.token.provider.type":"*********(redacted)","mapreduce.shuffle.ssl.file.buffer.size":"65536","yarn.resourcemanager.ha.automatic-failover.embedded":"true","yarn.nodemanager.resource-plugins.gpu.docker-plugin":"nvidia-docker-v1","fs.s3a.s3guard.consistency.retry.interval":"2s","fs.s3a.multipart.purge":"false","yarn.scheduler.configuration.store.class":"file","yarn.resourcemanager.nm-container-queuing.queue-limit-stdev":"1.0f","mapreduce.job.end-notification.max.attempts":"5","mapreduce.output.fileoutputformat.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","yarn.nodemanager.container-monitor.procfs-tree.smaps-based-rss.enabled":"false","ipc.client.bind.wildcard.addr":"false","yarn.resourcemanager.webapp.rest-csrf.enabled":"false","ha.health-monitor.connect-retry-interval.ms":"1000","yarn.nodemanager.keytab":"/etc/krb5.keytab","mapreduce.jobhistory.keytab":"/etc/security/keytab/jhs.service.keytab","fs.s3a.threads.max":"64","yarn.nodemanager.runtime.linux.docker.image-update":"false","mapreduce.reduce.shuffle.input.buffer.percent":"0.70","fs.viewfs.overload.scheme.target.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","yarn.dispatcher.cpu-monitor.samples-per-min":"60","hadoop.security.token.service.use_ip":"*********(redacted)","yarn.nodemanager.runtime.linux.docker.allowed-container-networks":"host,none,bridge","yarn.nodemanager.node-labels.resync-interval-ms":"120000","hadoop.tmp.dir":"/tmp/hadoop-${user.name}","mapreduce.job.maps":"2","mapreduce.jobhistory.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.job.end-notification.max.retry.interval":"5000","yarn.log-aggregation.retain-check-interval-seconds":"-1","yarn.resourcemanager.resource-tracker.client.thread-count":"50","yarn.nodemanager.containers-launcher.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainersLauncher","yarn.rm.system-metrics-publisher.emit-container-events":"false","yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size":"10000","yarn.resourcemanager.ha.automatic-failover.zk-base-path":"/yarn-leader-election","io.seqfile.local.dir":"${hadoop.tmp.dir}/io/local","fs.s3a.s3guard.ddb.throttle.retry.interval":"100ms","fs.AbstractFileSystem.wasb.impl":"org.apache.hadoop.fs.azure.Wasb","mapreduce.client.submit.file.replication":"10","mapreduce.jobhistory.minicluster.fixed.ports":"false","fs.s3a.multipart.threshold":"128M","yarn.resourcemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","mapreduce.jobhistory.done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done","ipc.server.purge.interval":"15","ipc.client.idlethreshold":"4000","yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage":"false","mapreduce.reduce.input.buffer.percent":"0.0","yarn.nodemanager.runtime.linux.docker.userremapping-gid-threshold":"1","yarn.nodemanager.webapp.rest-csrf.enabled":"false","fs.ftp.host.port":"21","ipc.ping.interval":"60000","yarn.resourcemanager.history-writer.multi-threaded-dispatcher.pool-size":"10","yarn.resourcemanager.admin.address":"${yarn.resourcemanager.hostname}:8033","file.client-write-packet-size":"65536","ipc.client.kill.max":"10","mapreduce.reduce.speculative":"true","hadoop.security.key.default.bitlength":"128","mapreduce.job.reducer.unconditional-preempt.delay.sec":"300","yarn.nodemanager.disk-health-checker.interval-ms":"120000","yarn.nodemanager.log.deletion-threads-count":"4","fs.s3a.committer.abort.pending.uploads":"true","yarn.webapp.filter-entity-list-by-user":"false","yarn.resourcemanager.activities-manager.app-activities.ttl-ms":"600000","ipc.client.connection.maxidletime":"10000","mapreduce.task.io.sort.mb":"100","yarn.nodemanager.localizer.client.thread-count":"5","io.erasurecode.codec.rs.rawcoders":"rs_native,rs_java","io.erasurecode.codec.rs-legacy.rawcoders":"rs-legacy_java","yarn.sharedcache.admin.address":"0.0.0.0:8047","yarn.resourcemanager.placement-constraints.algorithm.iterator":"SERIAL","yarn.nodemanager.localizer.cache.cleanup.interval-ms":"600000","hadoop.security.crypto.codec.classes.aes.ctr.nopadding":"org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec, org.apache.hadoop.crypto.JceAesCtrCryptoCodec","mapreduce.job.cache.limit.max-resources-mb":"0","fs.s3a.connection.ssl.enabled":"true","yarn.nodemanager.process-kill-wait.ms":"5000","mapreduce.job.hdfs-servers":"${fs.defaultFS}","yarn.app.mapreduce.am.webapp.https.client.auth":"false","hadoop.workaround.non.threadsafe.getpwuid":"true","fs.df.interval":"60000","ipc.[port_number].decay-scheduler.thresholds":"13,25,50","fs.s3a.multiobjectdelete.enable":"true","yarn.sharedcache.cleaner.resource-sleep-ms":"0","yarn.nodemanager.disk-health-checker.min-healthy-disks":"0.25","hadoop.shell.missing.defaultFs.warning":"false","io.file.buffer.size":"65536","fs.viewfs.overload.scheme.target.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","hadoop.security.group.mapping.ldap.search.attr.member":"member","hadoop.security.random.device.file.path":"/dev/urandom","hadoop.security.sensitive-config-keys":"*********(redacted)","fs.s3a.s3guard.ddb.max.retries":"9","fs.viewfs.overload.scheme.target.file.impl":"org.apache.hadoop.fs.LocalFileSystem","hadoop.rpc.socket.factory.class.default":"org.apache.hadoop.net.StandardSocketFactory","yarn.intermediate-data-encryption.enable":"false","yarn.resourcemanager.connect.retry-interval.ms":"30000","yarn.nodemanager.container.stderr.pattern":"{*stderr*,*STDERR*}","yarn.scheduler.minimum-allocation-mb":"1024","yarn.app.mapreduce.am.staging-dir":"/tmp/hadoop-yarn/staging","mapreduce.reduce.shuffle.read.timeout":"180000","hadoop.http.cross-origin.max-age":"1800","io.erasurecode.codec.xor.rawcoders":"xor_native,xor_java","fs.s3a.s3guard.consistency.retry.limit":"7","fs.s3a.connection.establish.timeout":"5000","mapreduce.job.running.map.limit":"0","yarn.minicluster.control-resource-monitoring":"false","hadoop.ssl.require.client.cert":"false","hadoop.kerberos.kinit.command":"kinit","yarn.federation.state-store.class":"org.apache.hadoop.yarn.server.federation.store.impl.MemoryFederationStateStore","mapreduce.reduce.log.level":"INFO","hadoop.security.dns.log-slow-lookups.threshold.ms":"1000","mapreduce.job.ubertask.enable":"false","adl.http.timeout":"-1","yarn.resourcemanager.placement-constraints.retry-attempts":"3","hadoop.caller.context.enabled":"false","hadoop.security.group.mapping.ldap.num.attempts":"3","yarn.nodemanager.vmem-pmem-ratio":"2.1","hadoop.rpc.protection":"authentication","ha.health-monitor.rpc-timeout.ms":"45000","yarn.nodemanager.remote-app-log-dir":"/tmp/logs","hadoop.zk.timeout-ms":"10000","fs.s3a.s3guard.cli.prune.age":"86400000","yarn.nodemanager.resource.pcores-vcores-multiplier":"1.0","yarn.nodemanager.runtime.linux.sandbox-mode":"disabled","yarn.app.mapreduce.am.containerlauncher.threadpool-initial-size":"10","fs.viewfs.overload.scheme.target.webhdfs.impl":"org.apache.hadoop.hdfs.web.WebHdfsFileSystem","fs.s3a.committer.threads":"8","hadoop.zk.retry-interval-ms":"1000","hadoop.security.crypto.buffer.size":"8192","yarn.nodemanager.node-labels.provider.fetch-interval-ms":"600000","mapreduce.jobhistory.recovery.store.leveldb.path":"${hadoop.tmp.dir}/mapred/history/recoverystore","yarn.client.failover-retries-on-socket-timeouts":"0","fs.s3a.ssl.channel.mode":"default_jsse","yarn.nodemanager.resource.memory.enabled":"false","fs.azure.authorization.caching.enable":"true","hadoop.security.instrumentation.requires.admin":"false","yarn.nodemanager.delete.thread-count":"4","mapreduce.job.finish-when-all-reducers-done":"true","hadoop.registry.jaas.context":"Client","yarn.timeline-service.leveldb-timeline-store.path":"${hadoop.tmp.dir}/yarn/timeline","io.map.index.interval":"128","yarn.resourcemanager.nm-container-queuing.max-queue-wait-time-ms":"100","fs.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","mapreduce.job.counters.max":"120","mapreduce.jobhistory.webapp.rest-csrf.enabled":"false","yarn.timeline-service.store-class":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.jobhistory.move.interval-ms":"180000","fs.s3a.change.detection.version.required":"true","yarn.nodemanager.localizer.fetch.thread-count":"4","yarn.resourcemanager.scheduler.client.thread-count":"50","hadoop.ssl.hostname.verifier":"DEFAULT","yarn.timeline-service.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/timeline","mapreduce.job.classloader":"false","mapreduce.task.profile.map.params":"${mapreduce.task.profile.params}","ipc.client.connect.timeout":"20000","hadoop.security.auth_to_local.mechanism":"hadoop","yarn.timeline-service.app-collector.linger-period.ms":"60000","yarn.nm.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.reservation-system.planfollower.time-step":"1000","yarn.resourcemanager.proxy.timeout.enabled":"true","yarn.resourcemanager.activities-manager.scheduler-activities.ttl-ms":"600000","yarn.nodemanager.runtime.linux.docker.enable-userremapping.allowed":"true","yarn.webapp.api-service.enable":"false","yarn.nodemanager.recovery.enabled":"false","mapreduce.job.end-notification.retry.interval":"1000","fs.du.interval":"600000","fs.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","yarn.nodemanager.container.stderr.tail.bytes":"4096","yarn.nodemanager.disk-health-checker.disk-free-space-threshold.enabled":"true","hadoop.security.group.mapping.ldap.read.timeout.ms":"60000","hadoop.security.groups.cache.warn.after.ms":"5000","file.bytes-per-checksum":"512","mapreduce.outputcommitter.factory.scheme.s3a":"org.apache.hadoop.fs.s3a.commit.S3ACommitterFactory","hadoop.security.groups.cache.background.reload":"false","yarn.nodemanager.container-monitor.enabled":"true","yarn.nodemanager.elastic-memory-control.enabled":"false","net.topology.script.number.args":"100","mapreduce.task.merge.progress.records":"10000","yarn.nodemanager.localizer.address":"${yarn.nodemanager.hostname}:8040","yarn.timeline-service.keytab":"/etc/krb5.keytab","mapreduce.reduce.shuffle.fetch.retry.timeout-ms":"30000","yarn.resourcemanager.rm.container-allocation.expiry-interval-ms":"600000","yarn.nodemanager.container-executor.exit-code-file.timeout-ms":"2000","mapreduce.fileoutputcommitter.algorithm.version":"1","yarn.resourcemanager.work-preserving-recovery.enabled":"true","mapreduce.map.skip.maxrecords":"0","yarn.sharedcache.root-dir":"/sharedcache","fs.s3a.retry.throttle.limit":"20","hadoop.http.authentication.type":"simple","fs.viewfs.overload.scheme.target.oss.impl":"org.apache.hadoop.fs.aliyun.oss.AliyunOSSFileSystem","mapreduce.job.cache.limit.max-resources":"0","mapreduce.task.userlog.limit.kb":"0","ipc.[port_number].weighted-cost.handler":"1","yarn.resourcemanager.scheduler.monitor.enable":"false","ipc.client.connect.max.retries":"10","hadoop.registry.zk.retry.times":"5","yarn.nodemanager.resource-monitor.interval-ms":"3000","yarn.nodemanager.resource-plugins.gpu.allowed-gpu-devices":"auto","mapreduce.job.sharedcache.mode":"disabled","yarn.nodemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.shuffle.listen.queue.size":"128","yarn.scheduler.configuration.mutation.acl-policy.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.DefaultConfigurationMutationACLPolicy","mapreduce.map.cpu.vcores":"1","yarn.log-aggregation.file-formats":"TFile","yarn.timeline-service.client.fd-retain-secs":"300","fs.s3a.select.output.csv.field.delimiter":",","yarn.nodemanager.health-checker.timeout-ms":"1200000","hadoop.user.group.static.mapping.overrides":"dr.who=;","fs.azure.sas.expiry.period":"90d","fs.s3a.select.output.csv.record.delimiter":"\\n","mapreduce.jobhistory.recovery.store.class":"org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService","fs.viewfs.overload.scheme.target.https.impl":"org.apache.hadoop.fs.http.HttpsFileSystem","fs.s3a.s3guard.ddb.table.sse.enabled":"false","yarn.resourcemanager.fail-fast":"${yarn.fail-fast}","yarn.resourcemanager.proxy-user-privileges.enabled":"false","yarn.router.webapp.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.webapp.DefaultRequestInterceptorREST","yarn.nodemanager.resource.memory.cgroups.soft-limit-percentage":"90.0","mapreduce.job.reducer.preempt.delay.sec":"0","hadoop.util.hash.type":"murmur","yarn.nodemanager.disk-validator":"basic","yarn.app.mapreduce.client.job.max-retries":"3","fs.viewfs.overload.scheme.target.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","mapreduce.reduce.shuffle.retry-delay.max.ms":"60000","hadoop.security.group.mapping.ldap.connection.timeout.ms":"60000","mapreduce.task.profile.params":"-agentlib:hprof=cpu=samples,heap=sites,force=n,thread=y,verbose=n,file=%s","yarn.app.mapreduce.shuffle.log.backups":"0","yarn.nodemanager.container-diagnostics-maximum-size":"10000","hadoop.registry.zk.retry.interval.ms":"1000","yarn.nodemanager.linux-container-executor.cgroups.delete-timeout-ms":"1000","fs.AbstractFileSystem.file.impl":"org.apache.hadoop.fs.local.LocalFs","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds":"-1","mapreduce.jobhistory.cleaner.interval-ms":"86400000","hadoop.registry.zk.quorum":"localhost:2181","yarn.nodemanager.runtime.linux.runc.allowed-container-runtimes":"runc","mapreduce.output.fileoutputformat.compress":"false","yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs":"*********(redacted)","fs.s3a.assumed.role.session.duration":"30m","hadoop.security.group.mapping.ldap.conversion.rule":"none","hadoop.ssl.server.conf":"ssl-server.xml","fs.s3a.retry.throttle.interval":"100ms","seq.io.sort.factor":"100","fs.viewfs.overload.scheme.target.ofs.impl":"org.apache.hadoop.fs.ozone.RootedOzoneFileSystem","yarn.sharedcache.cleaner.initial-delay-mins":"10","mapreduce.client.completion.pollinterval":"5000","hadoop.ssl.keystores.factory.class":"org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory","yarn.app.mapreduce.am.resource.cpu-vcores":"1","yarn.timeline-service.enabled":"false","yarn.nodemanager.runtime.linux.docker.capabilities":"CHOWN,DAC_OVERRIDE,FSETID,FOWNER,MKNOD,NET_RAW,SETGID,SETUID,SETFCAP,SETPCAP,NET_BIND_SERVICE,SYS_CHROOT,KILL,AUDIT_WRITE","yarn.acl.enable":"false","yarn.timeline-service.entity-group-fs-store.done-dir":"/tmp/entity-file-history/done/","hadoop.security.group.mapping.ldap.num.attempts.before.failover":"3","mapreduce.task.profile":"false","hadoop.prometheus.endpoint.enabled":"false","yarn.resourcemanager.fs.state-store.uri":"${hadoop.tmp.dir}/yarn/system/rmstore","mapreduce.jobhistory.always-scan-user-dir":"false","fs.s3a.metadatastore.metadata.ttl":"15m","yarn.nodemanager.opportunistic-containers-use-pause-for-preemption":"false","yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user":"nobody","yarn.timeline-service.reader.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineReaderImpl","yarn.resourcemanager.configuration.provider-class":"org.apache.hadoop.yarn.LocalConfigurationProvider","yarn.nodemanager.runtime.linux.docker.userremapping-uid-threshold":"1","yarn.resourcemanager.configuration.file-system-based-store":"/yarn/conf","mapreduce.job.cache.limit.max-single-resource-mb":"0","yarn.nodemanager.runtime.linux.docker.stop.grace-period":"10","yarn.resourcemanager.resource-profiles.source-file":"resource-profiles.json","mapreduce.job.dfs.storage.capacity.kill-limit-exceed":"false","yarn.nodemanager.resource.percentage-physical-cpu-limit":"100","mapreduce.jobhistory.client.thread-count":"10","tfile.fs.input.buffer.size":"262144","mapreduce.client.progressmonitor.pollinterval":"1000","yarn.nodemanager.log-dirs":"${yarn.log.dir}/userlogs","yarn.resourcemanager.opportunistic.max.container-allocation.per.am.heartbeat":"-1","fs.automatic.close":"true","yarn.resourcemanager.delegation-token-renewer.thread-retry-interval":"*********(redacted)","fs.s3a.select.input.csv.quote.character":"\"","yarn.nodemanager.hostname":"0.0.0.0","ipc.[port_number].cost-provider.impl":"org.apache.hadoop.ipc.DefaultCostProvider","yarn.nodemanager.runtime.linux.runc.manifest-to-resources-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.HdfsManifestToResourcesPlugin","yarn.nodemanager.remote-app-log-dir-include-older":"true","yarn.nodemanager.resource.memory.cgroups.swappiness":"0","ftp.stream-buffer-size":"4096","yarn.fail-fast":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-to-keep":"100","yarn.timeline-service.app-aggregation-interval-secs":"15","hadoop.security.group.mapping.ldap.search.filter.user":"(&(objectClass=user)(sAMAccountName={0}))","ipc.[port_number].weighted-cost.lockshared":"10","yarn.nodemanager.container-localizer.log.level":"INFO","yarn.timeline-service.address":"${yarn.timeline-service.hostname}:10200","mapreduce.job.ubertask.maxmaps":"9","fs.s3a.threads.keepalivetime":"60","mapreduce.jobhistory.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.task.files.preserve.failedtasks":"false","yarn.app.mapreduce.client.job.retry-interval":"2000","ha.failover-controller.graceful-fence.connection.retries":"1","fs.s3a.select.output.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.max-lifetime":"*********(redacted)","hadoop.kerberos.keytab.login.autorenewal.enabled":"false","yarn.timeline-service.client.drain-entities.timeout.ms":"2000","yarn.nodemanager.resource-plugins.fpga.vendor-plugin.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin","yarn.resourcemanager.nodemanagers.heartbeat-interval-min-ms":"1000","yarn.timeline-service.entity-group-fs-store.summary-store":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.reduce.cpu.vcores":"1","mapreduce.job.encrypted-intermediate-data.buffer.kb":"128","fs.client.resolve.remote.symlinks":"true","yarn.nodemanager.webapp.https.address":"0.0.0.0:8044","hadoop.http.cross-origin.allowed-origins":"*","mapreduce.job.encrypted-intermediate-data":"false","yarn.nodemanager.disk-health-checker.disk-utilization-threshold.enabled":"true","fs.s3a.executor.capacity":"16","yarn.timeline-service.entity-group-fs-store.retain-seconds":"604800","yarn.resourcemanager.metrics.runtime.buckets":"60,300,1440","yarn.timeline-service.generic-application-history.max-applications":"10000","yarn.nodemanager.local-dirs":"${hadoop.tmp.dir}/nm-local-dir","mapreduce.shuffle.connection-keep-alive.enable":"false","yarn.node-labels.configuration-type":"centralized","fs.s3a.path.style.access":"false","yarn.nodemanager.aux-services.mapreduce_shuffle.class":"org.apache.hadoop.mapred.ShuffleHandler","yarn.sharedcache.store.in-memory.staleness-period-mins":"10080","fs.adl.impl":"org.apache.hadoop.fs.adl.AdlFileSystem","yarn.resourcemanager.application.max-tags":"10","hadoop.domainname.resolver.impl":"org.apache.hadoop.net.DNSDomainNameResolver","yarn.resourcemanager.nodemanager.minimum.version":"NONE","mapreduce.jobhistory.webapp.xfs-filter.xframe-options":"SAMEORIGIN","yarn.app.mapreduce.am.staging-dir.erasurecoding.enabled":"false","net.topology.impl":"org.apache.hadoop.net.NetworkTopology","io.map.index.skip":"0","yarn.timeline-service.reader.webapp.https.address":"${yarn.timeline-service.webapp.https.address}","fs.ftp.data.connection.mode":"ACTIVE_LOCAL_DATA_CONNECTION_MODE","mapreduce.job.local-fs.single-disk-limit.check.kill-limit-exceed":"true","fs.azure.buffer.dir":"${hadoop.tmp.dir}/abfs","yarn.scheduler.maximum-allocation-vcores":"4","hadoop.http.cross-origin.allowed-headers":"X-Requested-With,Content-Type,Accept,Origin","yarn.nodemanager.log-aggregation.compression-type":"none","yarn.timeline-service.version":"1.0f","yarn.ipc.rpc.class":"org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC","mapreduce.reduce.maxattempts":"4","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.batch-size":"1000","hadoop.security.dns.log-slow-lookups.enabled":"false","mapreduce.job.committer.setup.cleanup.needed":"true","hadoop.security.secure.random.impl":"org.apache.hadoop.crypto.random.OpensslSecureRandom","mapreduce.job.running.reduce.limit":"0","fs.s3a.select.errors.include.sql":"false","fs.s3a.connection.request.timeout":"0","ipc.maximum.response.length":"134217728","yarn.resourcemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.job.token.tracking.ids.enabled":"*********(redacted)","hadoop.caller.context.max.size":"128","yarn.nodemanager.runtime.linux.docker.host-pid-namespace.allowed":"false","yarn.nodemanager.runtime.linux.docker.delayed-removal.allowed":"false","hadoop.registry.system.acls":"sasl:yarn@, sasl:mapred@, sasl:hdfs@","yarn.nodemanager.recovery.dir":"${hadoop.tmp.dir}/yarn-nm-recovery","fs.s3a.fast.upload.buffer":"disk","mapreduce.jobhistory.intermediate-done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done_intermediate","yarn.app.mapreduce.shuffle.log.separate":"true","yarn.log-aggregation.debug.filesize":"104857600","fs.s3a.max.total.tasks":"32","fs.s3a.readahead.range":"64K","hadoop.http.authentication.simple.anonymous.allowed":"true","fs.s3a.attempts.maximum":"20","hadoop.registry.zk.connection.timeout.ms":"15000","yarn.resourcemanager.delegation-token-renewer.thread-count":"*********(redacted)","yarn.resourcemanager.delegation-token-renewer.thread-timeout":"*********(redacted)","yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size":"10000","yarn.nodemanager.aux-services.manifest.reload-ms":"0","yarn.nodemanager.emit-container-events":"true","yarn.resourcemanager.resource-profiles.enabled":"false","yarn.timeline-service.hbase-schema.prefix":"prod.","fs.azure.authorization":"false","mapreduce.map.log.level":"INFO","ha.failover-controller.active-standby-elector.zk.op.retries":"3","yarn.resourcemanager.decommissioning-nodes-watcher.poll-interval-secs":"20","mapreduce.output.fileoutputformat.compress.type":"RECORD","yarn.resourcemanager.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/system/rmstore","yarn.timeline-service.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.ifile.readahead.bytes":"4194304","yarn.sharedcache.app-checker.class":"org.apache.hadoop.yarn.server.sharedcachemanager.RemoteAppChecker","yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users":"true","yarn.nodemanager.resource.detect-hardware-capabilities":"false","mapreduce.cluster.acls.enabled":"false","mapreduce.job.speculative.retry-after-no-speculate":"1000","fs.viewfs.overload.scheme.target.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","hadoop.security.group.mapping.ldap.search.group.hierarchy.levels":"0","yarn.resourcemanager.fs.state-store.retry-interval-ms":"1000","file.stream-buffer-size":"4096","yarn.resourcemanager.application-timeouts.monitor.interval-ms":"3000","mapreduce.map.output.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","mapreduce.map.speculative":"true","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.hdfs-hash-file":"/runc-root/image-tag-to-hash","mapreduce.job.speculative.retry-after-speculate":"15000","yarn.nodemanager.linux-container-executor.cgroups.mount":"false","yarn.app.mapreduce.am.container.log.backups":"0","yarn.app.mapreduce.am.log.level":"INFO","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.ImageTagToManifestPlugin","io.bytes.per.checksum":"512","mapreduce.job.reduce.slowstart.completedmaps":"0.05","yarn.timeline-service.http-authentication.type":"simple","hadoop.security.group.mapping.ldap.search.attr.group.name":"cn","yarn.nodemanager.resource-plugins.fpga.allowed-fpga-devices":"auto","yarn.timeline-service.client.internal-timers-ttl-secs":"420","fs.s3a.select.output.csv.quote.character":"\"","hadoop.http.logs.enabled":"true","fs.s3a.block.size":"32M","yarn.sharedcache.client-server.address":"0.0.0.0:8045","yarn.nodemanager.logaggregation.threadpool-size-max":"100","yarn.resourcemanager.hostname":"0.0.0.0","yarn.resourcemanager.delegation.key.update-interval":"86400000","mapreduce.reduce.shuffle.fetch.retry.enabled":"${yarn.nodemanager.recovery.enabled}","mapreduce.map.memory.mb":"-1","mapreduce.task.skip.start.attempts":"2","fs.AbstractFileSystem.hdfs.impl":"org.apache.hadoop.fs.Hdfs","yarn.nodemanager.disk-health-checker.enable":"true","fs.s3a.select.output.csv.quote.fields":"always","ipc.client.tcpnodelay":"true","ipc.client.rpc-timeout.ms":"0","yarn.nodemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","yarn.resourcemanager.delegation-token-renewer.thread-retry-max-attempts":"*********(redacted)","ipc.client.low-latency":"false","mapreduce.input.lineinputformat.linespermap":"1","yarn.router.interceptor.user.threadpool-size":"5","ipc.client.connect.max.retries.on.timeouts":"45","yarn.timeline-service.leveldb-timeline-store.read-cache-size":"104857600","fs.AbstractFileSystem.har.impl":"org.apache.hadoop.fs.HarFs","mapreduce.job.split.metainfo.maxsize":"10000000","yarn.am.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.timeline-service.entity-group-fs-store.app-cache-size":"10","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-timeout-interval-secs":"360","fs.s3a.socket.recv.buffer":"8192","rpc.metrics.timeunit":"MILLISECONDS","yarn.resourcemanager.resource-tracker.address":"${yarn.resourcemanager.hostname}:8031","yarn.nodemanager.node-labels.provider.fetch-timeout-ms":"1200000","mapreduce.job.heap.memory-mb.ratio":"0.8","yarn.resourcemanager.leveldb-state-store.compaction-interval-secs":"3600","yarn.resourcemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","yarn.nodemanager.pluggable-device-framework.enabled":"false","yarn.scheduler.configuration.fs.path":"file://${hadoop.tmp.dir}/yarn/system/schedconf","mapreduce.client.output.filter":"FAILED","hadoop.http.filter.initializers":"org.apache.hadoop.http.lib.StaticUserWebFilter","mapreduce.reduce.memory.mb":"-1","yarn.timeline-service.hostname":"0.0.0.0","file.replication":"1","yarn.nodemanager.container-metrics.unregister-delay-ms":"10000","yarn.nodemanager.container-metrics.period-ms":"-1","mapreduce.fileoutputcommitter.task.cleanup.enabled":"false","yarn.nodemanager.log.retain-seconds":"10800","yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds":"3600","ipc.[port_number].callqueue.impl":"java.util.concurrent.LinkedBlockingQueue","yarn.resourcemanager.keytab":"/etc/krb5.keytab","hadoop.security.group.mapping.providers.combined":"true","mapreduce.reduce.merge.inmem.threshold":"1000","yarn.timeline-service.recovery.enabled":"false","fs.azure.saskey.usecontainersaskeyforallaccess":"true","yarn.sharedcache.nm.uploader.thread-count":"20","yarn.resourcemanager.nodemanager-graceful-decommission-timeout-secs":"3600","ipc.[port_number].weighted-cost.lockfree":"1","mapreduce.shuffle.ssl.enabled":"false","yarn.timeline-service.hbase.coprocessor.app-final-value-retention-milliseconds":"259200000","yarn.nodemanager.opportunistic-containers-max-queue-length":"0","yarn.resourcemanager.state-store.max-completed-applications":"${yarn.resourcemanager.max-completed-applications}","mapreduce.job.speculative.minimum-allowed-tasks":"10","fs.s3a.aws.credentials.provider":"\n    org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider,\n    org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider,\n    com.amazonaws.auth.EnvironmentVariableCredentialsProvider,\n    org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider\n  ","yarn.log-aggregation.retain-seconds":"-1","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb":"0","mapreduce.jobhistory.max-age-ms":"604800000","hadoop.http.cross-origin.allowed-methods":"GET,POST,HEAD","yarn.resourcemanager.opportunistic-container-allocation.enabled":"false","mapreduce.jobhistory.webapp.address":"0.0.0.0:19888","hadoop.system.tags":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.log-aggregation.file-controller.TFile.class":"org.apache.hadoop.yarn.logaggregation.filecontroller.tfile.LogAggregationTFileController","yarn.client.nodemanager-connect.max-wait-ms":"180000","yarn.resourcemanager.webapp.address":"${yarn.resourcemanager.hostname}:8088","mapreduce.jobhistory.recovery.enable":"false","mapreduce.reduce.shuffle.parallelcopies":"5","fs.AbstractFileSystem.webhdfs.impl":"org.apache.hadoop.fs.WebHdfs","fs.trash.interval":"0","yarn.app.mapreduce.client.max-retries":"3","hadoop.security.authentication":"simple","mapreduce.task.profile.reduce.params":"${mapreduce.task.profile.params}","yarn.app.mapreduce.am.resource.mb":"1536","mapreduce.input.fileinputformat.list-status.num-threads":"1","yarn.nodemanager.container-executor.class":"org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor","io.mapfile.bloom.size":"1048576","yarn.timeline-service.ttl-ms":"604800000","yarn.resourcemanager.nm-container-queuing.min-queue-length":"5","yarn.nodemanager.resource.cpu-vcores":"-1","mapreduce.job.reduces":"1","fs.s3a.multipart.size":"64M","fs.s3a.select.input.csv.comment.marker":"#","yarn.scheduler.minimum-allocation-vcores":"1","mapreduce.job.speculative.speculative-cap-total-tasks":"0.01","hadoop.ssl.client.conf":"ssl-client.xml","mapreduce.job.queuename":"default","mapreduce.job.encrypted-intermediate-data-key-size-bits":"128","fs.s3a.metadatastore.authoritative":"false","ipc.[port_number].weighted-cost.response":"1","yarn.nodemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","ha.health-monitor.sleep-after-disconnect.ms":"1000","yarn.app.mapreduce.shuffle.log.limit.kb":"0","hadoop.security.group.mapping":"org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback","yarn.client.application-client-protocol.poll-timeout-ms":"-1","mapreduce.jobhistory.jhist.format":"binary","mapreduce.task.stuck.timeout-ms":"600000","yarn.resourcemanager.application.max-tag.length":"100","yarn.resourcemanager.ha.enabled":"false","dfs.client.ignore.namenode.default.kms.uri":"false","hadoop.http.staticuser.user":"dr.who","mapreduce.task.exit.timeout.check-interval-ms":"20000","mapreduce.jobhistory.intermediate-user-done-dir.permissions":"770","mapreduce.task.exit.timeout":"60000","yarn.nodemanager.linux-container-executor.resources-handler.class":"org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler","mapreduce.reduce.shuffle.memory.limit.percent":"0.25","yarn.resourcemanager.reservation-system.enable":"false","mapreduce.map.output.compress":"false","ha.zookeeper.acl":"world:anyone:rwcda","ipc.server.max.connections":"0","yarn.nodemanager.runtime.linux.docker.default-container-network":"host","yarn.router.webapp.address":"0.0.0.0:8089","yarn.scheduler.maximum-allocation-mb":"8192","yarn.resourcemanager.scheduler.monitor.policies":"org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy","yarn.sharedcache.cleaner.period-mins":"1440","yarn.nodemanager.resource-plugins.gpu.docker-plugin.nvidia-docker-v1.endpoint":"http://localhost:3476/v1.0/docker/cli","yarn.app.mapreduce.am.container.log.limit.kb":"0","ipc.client.connect.retry.interval":"1000","yarn.timeline-service.http-cross-origin.enabled":"false","fs.wasbs.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem$Secure","yarn.resourcemanager.nodemanagers.heartbeat-interval-max-ms":"1000","yarn.federation.subcluster-resolver.class":"org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl","yarn.resourcemanager.zk-state-store.parent-path":"/rmstore","fs.s3a.select.input.csv.field.delimiter":",","mapreduce.jobhistory.cleaner.enable":"true","yarn.timeline-service.client.fd-flush-interval-secs":"10","hadoop.security.kms.client.encrypted.key.cache.expiry":"43200000","yarn.client.nodemanager-client-async.thread-pool-max-size":"500","mapreduce.map.maxattempts":"4","yarn.resourcemanager.nm-container-queuing.sorting-nodes-interval-ms":"1000","fs.s3a.committer.staging.tmp.path":"tmp/staging","yarn.nodemanager.sleep-delay-before-sigkill.ms":"250","yarn.resourcemanager.nm-container-queuing.min-queue-wait-time-ms":"10","mapreduce.job.end-notification.retry.attempts":"0","yarn.nodemanager.resource.count-logical-processors-as-cores":"false","hadoop.registry.zk.root":"/registry","adl.feature.ownerandgroup.enableupn":"false","yarn.resourcemanager.zk-max-znode-size.bytes":"1048576","mapreduce.job.reduce.shuffle.consumer.plugin.class":"org.apache.hadoop.mapreduce.task.reduce.Shuffle","yarn.resourcemanager.delayed.delegation-token.removal-interval-ms":"*********(redacted)","yarn.nodemanager.localizer.cache.target-size-mb":"10240","fs.s3a.committer.staging.conflict-mode":"append","mapreduce.client.libjars.wildcard":"true","fs.s3a.committer.staging.unique-filenames":"true","yarn.nodemanager.node-attributes.provider.fetch-timeout-ms":"1200000","fs.s3a.list.version":"2","ftp.client-write-packet-size":"65536","ipc.[port_number].weighted-cost.lockexclusive":"100","fs.AbstractFileSystem.adl.impl":"org.apache.hadoop.fs.adl.Adl","yarn.nodemanager.container-log-monitor.enable":"false","hadoop.security.key.default.cipher":"AES/CTR/NoPadding","yarn.client.failover-retries":"0","fs.s3a.multipart.purge.age":"86400","mapreduce.job.local-fs.single-disk-limit.check.interval-ms":"5000","net.topology.node.switch.mapping.impl":"org.apache.hadoop.net.ScriptBasedMapping","yarn.nodemanager.amrmproxy.address":"0.0.0.0:8049","ipc.server.listen.queue.size":"256","ipc.[port_number].decay-scheduler.period-ms":"5000","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.cache-refresh-interval-secs":"60","map.sort.class":"org.apache.hadoop.util.QuickSort","fs.viewfs.rename.strategy":"SAME_MOUNTPOINT","hadoop.security.kms.client.authentication.retry-count":"1","fs.permissions.umask-mode":"022","fs.s3a.assumed.role.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","yarn.nodemanager.runtime.linux.runc.privileged-containers.allowed":"false","yarn.nodemanager.vmem-check-enabled":"true","yarn.nodemanager.numa-awareness.enabled":"false","yarn.nodemanager.recovery.compaction-interval-secs":"3600","yarn.app.mapreduce.client-am.ipc.max-retries":"3","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.interval-seconds":"60","yarn.federation.registry.base-dir":"yarnfederation/","yarn.nodemanager.health-checker.run-before-startup":"false","mapreduce.job.max.map":"-1","mapreduce.job.local-fs.single-disk-limit.bytes":"-1","mapreduce.shuffle.pathcache.concurrency-level":"16","mapreduce.job.ubertask.maxreduces":"1","mapreduce.shuffle.pathcache.max-weight":"10485760","hadoop.security.kms.client.encrypted.key.cache.size":"500","hadoop.security.java.secure.random.algorithm":"SHA1PRNG","ha.failover-controller.cli-check.rpc-timeout.ms":"20000","mapreduce.jobhistory.jobname.limit":"50","fs.s3a.select.input.compression":"none","yarn.client.nodemanager-connect.retry-interval-ms":"10000","ipc.[port_number].scheduler.priority.levels":"4","yarn.timeline-service.state-store-class":"org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore","yarn.nodemanager.env-whitelist":"JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_HOME,PATH,LANG,TZ","yarn.sharedcache.nested-level":"3","yarn.timeline-service.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","fs.azure.user.agent.prefix":"unknown","yarn.resourcemanager.zk-delegation-token-node.split-index":"*********(redacted)","yarn.nodemanager.numa-awareness.read-topology":"false","yarn.nodemanager.webapp.address":"${yarn.nodemanager.hostname}:8042","rpc.metrics.quantile.enable":"false","yarn.registry.class":"org.apache.hadoop.registry.client.impl.FSRegistryOperationsService","mapreduce.jobhistory.admin.acl":"*","yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size":"10","yarn.scheduler.queue-placement-rules":"user-group","hadoop.http.authentication.kerberos.keytab":"${user.home}/hadoop.keytab","yarn.resourcemanager.recovery.enabled":"false","fs.s3a.select.input.csv.header":"none","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-size":"500","yarn.timeline-service.webapp.rest-csrf.enabled":"false","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-watermark-high-mb":"0"},"System Properties":{"java.io.tmpdir":"/tmp","line.separator":"\n","path.separator":":","sun.management.compiler":"HotSpot 64-Bit Tiered Compilers","SPARK_SUBMIT":"true","sun.cpu.endian":"little","java.specification.maintenance.version":"1","java.specification.version":"17","java.vm.specification.name":"Java Virtual Machine Specification","java.vendor":"Debian","java.vm.specification.version":"17","user.home":"/root","sun.arch.data.model":"64","sun.boot.library.path":"/usr/lib/jvm/java-17-openjdk-amd64/lib","user.dir":"/opt/spark/jobs/notebooks","java.library.path":"/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib","os.arch":"amd64","java.vm.version":"17.0.14+7-Debian-1deb11u1","jetty.git.hash":"ec6782ff5ead824dabdcf47fa98f90a4aedff401","java.runtime.version":"17.0.14+7-Debian-1deb11u1","java.vm.info":"mixed mode, sharing","java.runtime.name":"OpenJDK Runtime Environment","java.version.date":"2025-01-21","file.separator":"/","java.class.version":"61.0","java.specification.name":"Java Platform API Specification","file.encoding":"UTF-8","jdk.reflect.useDirectMethodHandle":"false","user.timezone":"Etc/UTC","java.specification.vendor":"Oracle Corporation","sun.java.launcher":"SUN_STANDARD","java.vm.compressedOopsMode":"32-bit","os.version":"5.15.167.4-microsoft-standard-WSL2","native.encoding":"UTF-8","java.vm.specification.vendor":"Oracle Corporation","sun.jnu.encoding":"UTF-8","user.language":"en","java.vendor.url":"https://tracker.debian.org/openjdk-17","os.name":"Linux","java.vm.vendor":"Debian","jdk.debug":"release","java.vendor.url.bug":"https://bugs.debian.org/openjdk-17","user.name":"root","java.vm.name":"OpenJDK 64-Bit Server VM","sun.java.command":"org.apache.spark.deploy.SparkSubmit --name PySparkShell pyspark-shell","java.home":"/usr/lib/jvm/java-17-openjdk-amd64","java.version":"17.0.14","sun.io.unicode.encoding":"UnicodeLittle"},"Metrics Properties":{"*.sink.servlet.class":"org.apache.spark.metrics.sink.MetricsServlet","*.sink.servlet.path":"/metrics/json","applications.sink.servlet.path":"/metrics/applications/json","master.sink.servlet.path":"/metrics/master/json"},"Classpath Entries":{"/opt/spark/jars/spark-kubernetes_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/netty-transport-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-x86_64.jar":"System Classpath","/opt/spark/jars/kubernetes-model-common-6.7.2.jar":"System Classpath","/opt/spark/jars/logging-interceptor-3.12.12.jar":"System Classpath","/opt/spark/jars/paranamer-2.8.jar":"System Classpath","/opt/spark/jars/aws-java-sdk-1.12.782.jar":"System Classpath","/opt/spark/jars/breeze_2.12-2.1.0.jar":"System Classpath","/opt/spark/jars/scala-compiler-2.12.18.jar":"System Classpath","/opt/spark/jars/bonecp-0.8.0.RELEASE.jar":"System Classpath","/opt/spark/jars/hadoop-yarn-server-web-proxy-3.3.4.jar":"System Classpath","/opt/spark/jars/hadoop-client-api-3.3.4.jar":"System Classpath","/opt/spark/jars/netty-handler-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/spark-network-shuffle_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/jersey-hk2-2.40.jar":"System Classpath","/opt/spark/jars/netty-buffer-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/leveldbjni-all-1.8.jar":"System Classpath","/opt/spark/jars/kubernetes-model-gatewayapi-6.7.2.jar":"System Classpath","/opt/spark/jars/commons-compress-1.23.0.jar":"System Classpath","/opt/spark/jars/log4j-api-2.20.0.jar":"System Classpath","/opt/spark/jars/super-csv-2.2.0.jar":"System Classpath","/opt/spark/jars/javolution-5.5.1.jar":"System Classpath","/opt/spark/jars/hive-shims-scheduler-2.3.9.jar":"System Classpath","/opt/spark/jars/spire-util_2.12-0.17.0.jar":"System Classpath","/opt/spark/jars/netty-transport-classes-epoll-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/gson-2.2.4.jar":"System Classpath","/opt/spark/jars/kubernetes-client-6.7.2.jar":"System Classpath","/opt/spark/jars/parquet-format-structures-1.13.1.jar":"System Classpath","/opt/spark/jars/parquet-column-1.13.1.jar":"System Classpath","/opt/spark/jars/avro-1.11.4.jar":"System Classpath","/opt/spark/jars/tink-1.9.0.jar":"System Classpath","/opt/spark/jars/spark-network-common_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/istack-commons-runtime-3.0.8.jar":"System Classpath","/opt/spark/jars/antlr-runtime-3.5.2.jar":"System Classpath","/opt/spark/jars/arrow-memory-core-12.0.1.jar":"System Classpath","/opt/spark/jars/commons-dbcp-1.4.jar":"System Classpath","/opt/spark/jars/chill_2.12-0.10.0.jar":"System Classpath","/opt/spark/jars/log4j-core-2.20.0.jar":"System Classpath","/opt/spark/jars/algebra_2.12-2.0.1.jar":"System Classpath","/opt/spark/jars/xz-1.9.jar":"System Classpath","/opt/spark/jars/orc-core-1.9.5-shaded-protobuf.jar":"System Classpath","/opt/spark/jars/kubernetes-model-metrics-6.7.2.jar":"System Classpath","/opt/spark/jars/delta-storage-3.3.1.jar":"System Classpath","/opt/spark/jars/antlr4-runtime-4.9.3.jar":"System Classpath","/opt/spark/jars/spark-kvstore_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/hive-service-rpc-3.1.3.jar":"System Classpath","/opt/spark/jars/activation-1.1.1.jar":"System Classpath","/opt/spark/jars/objenesis-3.3.jar":"System Classpath","/opt/spark/jars/joda-time-2.12.5.jar":"System Classpath","/opt/spark/jars/spark-sql_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/netty-codec-http-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/spark-mesos_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/spark-tags_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-aarch_64.jar":"System Classpath","/opt/spark/jars/hive-storage-api-2.8.1.jar":"System Classpath","/opt/spark/jars/jackson-databind-2.15.2.jar":"System Classpath","/opt/spark/jars/kubernetes-model-policy-6.7.2.jar":"System Classpath","/opt/spark/jars/cats-kernel_2.12-2.1.1.jar":"System Classpath","/opt/spark/jars/aopalliance-repackaged-2.6.1.jar":"System Classpath","/opt/spark/jars/lapack-3.0.3.jar":"System Classpath","/opt/spark/jars/xbean-asm9-shaded-4.23.jar":"System Classpath","/opt/spark/jars/hadoop-client-runtime-3.3.4.jar":"System Classpath","/opt/spark/jars/JTransforms-3.1.jar":"System Classpath","/opt/spark/jars/jakarta.servlet-api-4.0.3.jar":"System Classpath","/opt/spark/jars/jul-to-slf4j-2.0.7.jar":"System Classpath","/opt/spark/jars/commons-collections-3.2.2.jar":"System Classpath","/opt/spark/jars/oro-2.0.8.jar":"System Classpath","/opt/spark/jars/datanucleus-api-jdo-4.2.4.jar":"System Classpath","/opt/spark/jars/delta-core_2.12-2.4.0.jar":"System Classpath","/opt/spark/jars/derby-10.14.2.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-coordination-6.7.2.jar":"System Classpath","/opt/spark/jars/javassist-3.29.2-GA.jar":"System Classpath","/opt/spark/jars/kubernetes-model-scheduling-6.7.2.jar":"System Classpath","/opt/spark/jars/netty-common-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/metrics-jvm-4.2.19.jar":"System Classpath","/opt/spark/jars/spark-launcher_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/commons-pool-1.5.4.jar":"System Classpath","/opt/spark/jars/commons-codec-1.16.1.jar":"System Classpath","/opt/spark/jars/breeze-macros_2.12-2.1.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-networking-6.7.2.jar":"System Classpath","/opt/spark/jars/py4j-0.10.9.7.jar":"System Classpath","/opt/spark/jars/annotations-17.0.0.jar":"System Classpath","/opt/spark/jars/jaxb-runtime-2.3.2.jar":"System Classpath","/opt/spark/jars/blas-3.0.3.jar":"System Classpath","/opt/spark/jars/json4s-ast_2.12-3.7.0-M11.jar":"System Classpath","/opt/spark/jars/scala-collection-compat_2.12-2.7.0.jar":"System Classpath","/opt/spark/jars/commons-lang-2.6.jar":"System Classpath","/opt/spark/jars/compress-lzf-1.1.2.jar":"System Classpath","/opt/spark/jars/zookeeper-jute-3.6.3.jar":"System Classpath","/opt/spark/jars/spark-repl_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/metrics-graphite-4.2.19.jar":"System Classpath","/opt/spark/jars/snakeyaml-engine-2.6.jar":"System Classpath","/opt/spark/jars/json4s-jackson_2.12-3.7.0-M11.jar":"System Classpath","/opt/spark/jars/orc-shims-1.9.5.jar":"System Classpath","/opt/spark/jars/kubernetes-model-discovery-6.7.2.jar":"System Classpath","/opt/spark/jars/jta-1.1.jar":"System Classpath","/opt/spark/jars/jersey-server-2.40.jar":"System Classpath","/opt/spark/jars/jersey-common-2.40.jar":"System Classpath","/opt/spark/jars/libthrift-0.12.0.jar":"System Classpath","/opt/spark/jars/metrics-json-4.2.19.jar":"System Classpath","/opt/spark/jars/avro-mapred-1.11.4.jar":"System Classpath","/opt/spark/jars/hive-serde-2.3.9.jar":"System Classpath","/opt/spark/jars/RoaringBitmap-0.9.45.jar":"System Classpath","/opt/spark/jars/metrics-core-4.2.19.jar":"System Classpath","/opt/spark/jars/parquet-encoding-1.13.1.jar":"System Classpath","/opt/spark/jars/hive-common-2.3.9.jar":"System Classpath","/opt/spark/jars/hk2-api-2.6.1.jar":"System Classpath","/opt/spark/jars/spark-unsafe_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/kubernetes-model-admissionregistration-6.7.2.jar":"System Classpath","/opt/spark/jars/snakeyaml-2.0.jar":"System Classpath","/opt/spark/jars/guava-14.0.1.jar":"System Classpath","/opt/spark/jars/slf4j-api-2.0.7.jar":"System Classpath","/opt/spark/jars/hive-metastore-2.3.9.jar":"System Classpath","/opt/spark/jars/jcl-over-slf4j-2.0.7.jar":"System Classpath","/opt/spark/jars/openlineage-spark_2.12-1.32.0.jar":"System Classpath","/opt/spark/jars/json4s-core_2.12-3.7.0-M11.jar":"System Classpath","/opt/spark/jars/kubernetes-model-autoscaling-6.7.2.jar":"System Classpath","/opt/spark/jars/univocity-parsers-2.9.1.jar":"System Classpath","/opt/spark/jars/avro-ipc-1.11.4.jar":"System Classpath","/opt/spark/jars/commons-text-1.10.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-apiextensions-6.7.2.jar":"System Classpath","/opt/spark/jars/netty-transport-classes-kqueue-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/jersey-client-2.40.jar":"System Classpath","/opt/spark/jars/netty-codec-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/spark-yarn_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/curator-client-2.13.0.jar":"System Classpath","/opt/spark/jars/jackson-mapper-asl-1.9.13.jar":"System Classpath","/opt/spark/jars/jsr305-3.0.0.jar":"System Classpath","/opt/spark/jars/spark-sql-kafka-0-10_2.13-3.5.3.jar":"System Classpath","/opt/spark/jars/spire_2.12-0.17.0.jar":"System Classpath","/opt/spark/jars/jdo-api-3.0.1.jar":"System Classpath","/opt/spark/jars/hive-exec-2.3.9-core.jar":"System Classpath","/opt/spark/jars/spark-hive-thriftserver_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/jakarta.annotation-api-1.3.5.jar":"System Classpath","/opt/spark/jars/spark-sql_2.13-3.5.3.jar":"System Classpath","/opt/spark/jars/scala-library-2.12.18.jar":"System Classpath","/opt/spark/jars/ivy-2.5.1.jar":"System Classpath","/opt/spark/jars/minlog-1.3.0.jar":"System Classpath","/opt/spark/jars/shims-0.9.45.jar":"System Classpath","/opt/spark/jars/delta-spark_2.12-3.3.1.jar":"System Classpath","/opt/spark/jars/netty-handler-proxy-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/jackson-annotations-2.15.2.jar":"System Classpath","/opt/spark/jars/kubernetes-model-core-6.7.2.jar":"System Classpath","/opt/spark/jars/kubernetes-model-certificates-6.7.2.jar":"System Classpath","/opt/spark/jars/mesos-1.4.3-shaded-protobuf.jar":"System Classpath","/opt/spark/jars/netty-all-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/scala-reflect-2.12.18.jar":"System Classpath","/opt/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-x86_64.jar":"System Classpath","/opt/spark/conf/":"System Classpath","/opt/spark/jars/curator-recipes-2.13.0.jar":"System Classpath","/opt/spark/jars/jakarta.validation-api-2.0.2.jar":"System Classpath","/opt/spark/jars/parquet-common-1.13.1.jar":"System Classpath","/opt/spark/jars/orc-mapreduce-1.9.5-shaded-protobuf.jar":"System Classpath","/opt/spark/jars/log4j-slf4j2-impl-2.20.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-batch-6.7.2.jar":"System Classpath","/opt/spark/jars/kubernetes-httpclient-okhttp-6.7.2.jar":"System Classpath","/opt/spark/jars/spire-macros_2.12-0.17.0.jar":"System Classpath","/opt/spark/jars/datasketches-java-3.3.0.jar":"System Classpath","/opt/spark/jars/spark-core_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/metrics-jmx-4.2.19.jar":"System Classpath","/opt/spark/jars/spark-common-utils_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/hk2-locator-2.6.1.jar":"System Classpath","/opt/spark/jars/lz4-java-1.8.0.jar":"System Classpath","/opt/spark/jars/scala-xml_2.12-2.1.0.jar":"System Classpath","/opt/spark/jars/hive-shims-0.23-2.3.9.jar":"System Classpath","/opt/spark/jars/spire-platform_2.12-0.17.0.jar":"System Classpath","/opt/spark/jars/jakarta.xml.bind-api-2.3.2.jar":"System Classpath","/opt/spark/jars/commons-lang3-3.12.0.jar":"System Classpath","/opt/spark/jars/JLargeArrays-1.5.jar":"System Classpath","/opt/spark/jars/kubernetes-model-rbac-6.7.2.jar":"System Classpath","/opt/spark/jars/jakarta.inject-2.6.1.jar":"System Classpath","/opt/spark/jars/hive-shims-2.3.9.jar":"System Classpath","/opt/spark/jars/parquet-jackson-1.13.1.jar":"System Classpath","/opt/spark/jars/httpcore-4.4.16.jar":"System Classpath","/opt/spark/jars/jodd-core-3.5.2.jar":"System Classpath","/opt/spark/jars/jackson-core-2.15.2.jar":"System Classpath","/opt/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-aarch_64.jar":"System Classpath","/opt/spark/jars/json-1.8.jar":"System Classpath","/opt/spark/jars/spark-streaming_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/commons-crypto-1.1.0.jar":"System Classpath","/opt/spark/jars/arrow-vector-12.0.1.jar":"System Classpath","/opt/spark/jars/stax-api-1.0.1.jar":"System Classpath","/opt/spark/jars/hive-beeline-2.3.9.jar":"System Classpath","/opt/spark/jars/datanucleus-rdbms-4.1.19.jar":"System Classpath","/opt/spark/jars/httpclient-4.5.14.jar":"System Classpath","/opt/spark/jars/commons-io-2.16.1.jar":"System Classpath","/opt/spark/jars/okhttp-3.12.12.jar":"System Classpath","/opt/spark/jars/commons-logging-1.1.3.jar":"System Classpath","/opt/spark/jars/datanucleus-core-4.1.17.jar":"System Classpath","/opt/spark/jars/jline-2.14.6.jar":"System Classpath","/opt/spark/jars/kryo-shaded-4.0.2.jar":"System Classpath","/opt/spark/jars/commons-cli-1.5.0.jar":"System Classpath","/opt/spark/jars/spark-sketch_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/jackson-module-scala_2.12-2.15.2.jar":"System Classpath","/opt/spark/jars/HikariCP-2.5.1.jar":"System Classpath","/opt/spark/jars/dropwizard-metrics-hadoop-metrics2-reporter-0.1.2.jar":"System Classpath","/opt/spark/jars/json4s-scalap_2.12-3.7.0-M11.jar":"System Classpath","/opt/spark/jars/chill-java-0.10.0.jar":"System Classpath","/opt/spark/jars/spark-hive_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/spark-graphx_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/arpack_combined_all-0.1.jar":"System Classpath","/opt/spark/jars/scala-parser-combinators_2.12-2.3.0.jar":"System Classpath","/opt/spark/jars/zookeeper-3.6.3.jar":"System Classpath","/opt/spark/jars/hive-llap-common-2.3.9.jar":"System Classpath","/opt/spark/jars/spark-mllib_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/hive-jdbc-2.3.9.jar":"System Classpath","/opt/spark/jars/netty-resolver-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/jpam-1.1.jar":"System Classpath","/opt/spark/jars/opencsv-2.3.jar":"System Classpath","/opt/spark/jars/netty-transport-native-unix-common-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/iceberg-spark-runtime-3.4_2.12-1.4.3.jar":"System Classpath","/opt/spark/jars/parquet-hadoop-1.13.1.jar":"System Classpath","/opt/spark/jars/curator-framework-2.13.0.jar":"System Classpath","/opt/spark/jars/jackson-core-asl-1.9.13.jar":"System Classpath","/opt/spark/jars/jackson-dataformat-yaml-2.15.2.jar":"System Classpath","/opt/spark/jars/arrow-memory-netty-12.0.1.jar":"System Classpath","/opt/spark/jars/stream-2.9.6.jar":"System Classpath","/opt/spark/jars/hive-cli-2.3.9.jar":"System Classpath","/opt/spark/jars/kubernetes-model-events-6.7.2.jar":"System Classpath","/opt/spark/jars/spark-mllib-local_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/jackson-datatype-jsr310-2.15.2.jar":"System Classpath","/opt/spark/jars/rocksdbjni-8.3.2.jar":"System Classpath","/opt/spark/jars/kubernetes-model-node-6.7.2.jar":"System Classpath","/opt/spark/jars/commons-compiler-3.1.9.jar":"System Classpath","/opt/spark/jars/ST4-4.0.4.jar":"System Classpath","/opt/spark/jars/hudi-spark3-bundle_2.12-0.15.0.jar":"System Classpath","/opt/spark/jars/log4j-1.2-api-2.20.0.jar":"System Classpath","/opt/spark/jars/datasketches-memory-2.1.0.jar":"System Classpath","/opt/spark/jars/kubernetes-client-api-6.7.2.jar":"System Classpath","/opt/spark/jars/arrow-format-12.0.1.jar":"System Classpath","/opt/spark/jars/arpack-3.0.3.jar":"System Classpath","/opt/spark/jars/kubernetes-model-resource-6.7.2.jar":"System Classpath","/opt/spark/jars/osgi-resource-locator-1.0.3.jar":"System Classpath","/opt/spark/jars/zstd-jni-1.5.5-4.jar":"System Classpath","/opt/spark/jars/jakarta.ws.rs-api-2.1.6.jar":"System Classpath","/opt/spark/jars/hadoop-shaded-guava-1.1.1.jar":"System Classpath","/opt/spark/jars/okio-1.17.6.jar":"System Classpath","/opt/spark/jars/hk2-utils-2.6.1.jar":"System Classpath","/opt/spark/jars/audience-annotations-0.5.0.jar":"System Classpath","/opt/spark/jars/flatbuffers-java-1.12.0.jar":"System Classpath","/opt/spark/jars/spark-catalyst_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/janino-3.1.9.jar":"System Classpath","/opt/spark/jars/aircompressor-0.27.jar":"System Classpath","/opt/spark/jars/commons-math3-3.6.1.jar":"System Classpath","/opt/spark/jars/transaction-api-1.1.jar":"System Classpath","/opt/spark/jars/kubernetes-model-storageclass-6.7.2.jar":"System Classpath","/opt/spark/jars/libfb303-0.9.3.jar":"System Classpath","/opt/spark/jars/snappy-java-1.1.10.5.jar":"System Classpath","/opt/spark/jars/hive-shims-common-2.3.9.jar":"System Classpath","/opt/spark/jars/jersey-container-servlet-core-2.40.jar":"System Classpath","/opt/spark/jars/netty-codec-http2-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/pickle-1.3.jar":"System Classpath","/opt/spark/jars/kubernetes-model-flowcontrol-6.7.2.jar":"System Classpath","/opt/spark/jars/threeten-extra-1.7.1.jar":"System Classpath","/opt/spark/jars/spark-sql-api_2.12-3.5.5.jar":"System Classpath","/opt/spark/jars/kubernetes-model-apps-6.7.2.jar":"System Classpath","/opt/spark/jars/javax.jdo-3.2.0-m3.jar":"System Classpath","/opt/spark/jars/kubernetes-model-extensions-6.7.2.jar":"System Classpath","/opt/spark/jars/netty-codec-socks-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/jersey-container-servlet-2.40.jar":"System Classpath","/opt/spark/jars/zjsonpatch-0.3.0.jar":"System Classpath","/opt/spark/jars/commons-collections4-4.4.jar":"System Classpath","/opt/spark/jars/s3-2.31.16.jar":"System Classpath"}}
{"Event":"SparkListenerApplicationStart","App Name":"InvoicesStreamMedallion","App ID":"app-20250518075400-0005","Timestamp":1747554840211,"User":"root"}
{"Event":"SparkListenerExecutorAdded","Timestamp":1747554841794,"Executor ID":"0","Executor Info":{"Host":"172.18.0.6","Total Cores":4,"Log Urls":{"stdout":"http://172.18.0.6:8081/logPage/?appId=app-20250518075400-0005&executorId=0&logType=stdout","stderr":"http://172.18.0.6:8081/logPage/?appId=app-20250518075400-0005&executorId=0&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1747554841794}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1747554841844,"Executor ID":"1","Executor Info":{"Host":"172.18.0.5","Total Cores":4,"Log Urls":{"stdout":"http://172.18.0.5:8081/logPage/?appId=app-20250518075400-0005&executorId=1&logType=stdout","stderr":"http://172.18.0.5:8081/logPage/?appId=app-20250518075400-0005&executorId=1&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1747554841844}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1747554841864,"Executor ID":"2","Executor Info":{"Host":"172.18.0.3","Total Cores":4,"Log Urls":{"stdout":"http://172.18.0.3:8081/logPage/?appId=app-20250518075400-0005&executorId=2&logType=stdout","stderr":"http://172.18.0.3:8081/logPage/?appId=app-20250518075400-0005&executorId=2&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1747554841864}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"0","Host":"172.18.0.6","Port":33379},"Maximum Memory":1099746508,"Timestamp":1747554841902,"Maximum Onheap Memory":1099746508,"Maximum Offheap Memory":0}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"1","Host":"172.18.0.5","Port":37167},"Maximum Memory":1099746508,"Timestamp":1747554841949,"Maximum Onheap Memory":1099746508,"Maximum Offheap Memory":0}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"2","Host":"172.18.0.3","Port":45305},"Maximum Memory":1099746508,"Timestamp":1747554841951,"Maximum Onheap Memory":1099746508,"Maximum Offheap Memory":0}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryStartedEvent","id":"5d289b4d-1b22-457d-8828-2e74638cb532","runId":"6fe779d0-8afe-459e-a1d8-537e0391e15e","name":"ingestion_bronze","timestamp":"2025-05-18T07:54:05.475Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryStartedEvent","id":"01827939-abd3-4a56-a45c-fa1ec7e4733b","runId":"065116dd-65ea-4cdb-a11d-6ca354fd88a6","name":"ingestion_silver","timestamp":"2025-05-18T07:54:06.044Z"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":0,"rootExecutionId":0,"description":"ingestion_bronze\nid = 5d289b4d-1b22-457d-8828-2e74638cb532\nrunId = 6fe779d0-8afe-459e-a1d8-537e0391e15e\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nScan json  (1)\n\n\n(1) Scan json \nOutput [17]: [InvoiceNumber#178, CreatedTime#179L, StoreID#180, PosID#181, CashierID#182, CustomerType#183, CustomerCardNo#184, TotalAmount#185, NumberOfItems#186L, PaymentMethod#187, TaxableAmount#188, CGST#189, SGST#190, CESS#191, DeliveryType#192, DeliveryAddress#193, InvoiceLineItems#194]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/spark/datasets/invoices/invoices-1.json, ... 3 entries]\nReadSchema: struct<InvoiceNumber:string,CreatedTime:bigint,StoreID:string,PosID:string,CashierID:string,CustomerType:string,CustomerCardNo:string,TotalAmount:double,NumberOfItems:bigint,PaymentMethod:string,TaxableAmount:double,CGST:double,SGST:double,CESS:double,DeliveryType:string,DeliveryAddress:struct<AddressLine:string,City:string,ContactNumber:string,PinCode:string,State:string>,InvoiceLineItems:array<struct<ItemCode:string,ItemDescription:string,ItemPrice:double,ItemQty:bigint,TotalValue:double>>>\n\n","sparkPlanInfo":{"nodeName":"Scan json ","simpleString":"FileScan json [InvoiceNumber#178,CreatedTime#179L,StoreID#180,PosID#181,CashierID#182,CustomerType#183,CustomerCardNo#184,TotalAmount#185,NumberOfItems#186L,PaymentMethod#187,TaxableAmount#188,CGST#189,SGST#190,CESS#191,DeliveryType#192,DeliveryAddress#193,InvoiceLineItems#194] Batched: false, DataFilters: [], Format: JSON, Location: InMemoryFileIndex(4 paths)[file:/opt/spark/datasets/invoices/invoices-1.json, file:/opt/spark/dat..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<InvoiceNumber:string,CreatedTime:bigint,StoreID:string,PosID:string,CashierID:string,Custo...","children":[],"metadata":{"Location":"InMemoryFileIndex(4 paths)[file:/opt/spark/datasets/invoices/invoices-1.json, file:/opt/spark/datasets/invoices/invoices-2.json, ...]","ReadSchema":"struct<InvoiceNumber:string,CreatedTime:bigint,StoreID:string,PosID:string,CashierID:string,CustomerType:string,CustomerCardNo:string,TotalAmount:double,NumberOfItems:bigint,PaymentMethod:string,TaxableAmount:double,CGST:double,SGST:double,CESS:double,DeliveryType:string,DeliveryAddress:struct<AddressLine:string,City:string,ContactNumber:string,PinCode:string,State:string>,InvoiceLineItems:array<struct<ItemCode:string,ItemDescription:string,ItemPrice:double,ItemQty:bigint,TotalValue:double>>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":2,"metricType":"sum"},{"name":"number of files read","accumulatorId":3,"metricType":"sum"},{"name":"metadata time","accumulatorId":4,"metricType":"timing"},{"name":"size of files read","accumulatorId":5,"metricType":"size"}]},"time":1747554846534,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":1,"rootExecutionId":1,"description":"ingestion_silver\nid = 01827939-abd3-4a56-a45c-fa1ec7e4733b\nrunId = 065116dd-65ea-4cdb-a11d-6ca354fd88a6\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\n* Project (5)\n+- * Generate (4)\n   +- * Project (3)\n      +- * Filter (2)\n         +- Scan json  (1)\n\n\n(1) Scan json \nOutput [9]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, DeliveryAddress#228, InvoiceLineItems#229]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/spark/datasets/invoices/invoices-1.json, ... 3 entries]\nPushedFilters: [IsNotNull(InvoiceLineItems)]\nReadSchema: struct<InvoiceNumber:string,CreatedTime:bigint,StoreID:string,PosID:string,CustomerType:string,PaymentMethod:string,DeliveryType:string,DeliveryAddress:struct<AddressLine:string,City:string,ContactNumber:string,PinCode:string,State:string>,InvoiceLineItems:array<struct<ItemCode:string,ItemDescription:string,ItemPrice:double,ItemQty:bigint,TotalValue:double>>>\n\n(2) Filter [codegen id : 1]\nInput [9]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, DeliveryAddress#228, InvoiceLineItems#229]\nCondition : ((size(InvoiceLineItems#229, true) > 0) AND isnotnull(InvoiceLineItems#229))\n\n(3) Project [codegen id : 1]\nOutput [11]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, DeliveryAddress#228.City AS _extract_City#283, DeliveryAddress#228.PinCode AS _extract_PinCode#284, DeliveryAddress#228.State AS _extract_State#285, InvoiceLineItems#229]\nInput [9]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, DeliveryAddress#228, InvoiceLineItems#229]\n\n(4) Generate [codegen id : 1]\nInput [11]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, _extract_City#283, _extract_PinCode#284, _extract_State#285, InvoiceLineItems#229]\nArguments: explode(InvoiceLineItems#229), [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, _extract_City#283, _extract_PinCode#284, _extract_State#285], false, [LineItem#55]\n\n(5) Project [codegen id : 1]\nOutput [15]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, _extract_City#283 AS City#52, _extract_PinCode#284 AS PinCode#53, _extract_State#285 AS State#54, LineItem#55.ItemCode AS ItemCode#68, LineItem#55.ItemDescription AS ItemDescription#82, LineItem#55.ItemPrice AS ItemPrice#97, LineItem#55.ItemQty AS ItemQty#113L, LineItem#55.TotalValue AS TotalValue#130]\nInput [11]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, _extract_City#283, _extract_PinCode#284, _extract_State#285, LineItem#55]\n\n","sparkPlanInfo":{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, _extract_City#265 AS City#52, _extract_PinCode#266 AS PinCode#53, _extract_State#267 AS State#54, LineItem#55.ItemCode AS ItemCode#68, LineItem#55.ItemDescription AS ItemDescription#82, LineItem#55.ItemPrice AS ItemPrice#97, LineItem#55.ItemQty AS ItemQty#113L, LineItem#55.TotalValue AS TotalValue#130]","children":[{"nodeName":"Generate","simpleString":"Generate explode(InvoiceLineItems#229), [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, _extract_City#265, _extract_PinCode#266, _extract_State#267], false, [LineItem#55]","children":[{"nodeName":"Project","simpleString":"Project [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, DeliveryAddress#228.City AS _extract_City#265, DeliveryAddress#228.PinCode AS _extract_PinCode#266, DeliveryAddress#228.State AS _extract_State#267, InvoiceLineItems#229]","children":[{"nodeName":"Filter","simpleString":"Filter ((size(InvoiceLineItems#229, true) > 0) AND isnotnull(InvoiceLineItems#229))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [InvoiceNumber#213,CreatedTime#214L,StoreID#215,PosID#216,CustomerType#218,PaymentMethod#222,DeliveryType#227,DeliveryAddress#228,InvoiceLineItems#229] Batched: false, DataFilters: [(size(InvoiceLineItems#229, true) > 0), isnotnull(InvoiceLineItems#229)], Format: JSON, Location: InMemoryFileIndex(4 paths)[file:/opt/spark/datasets/invoices/invoices-1.json, file:/opt/spark/dat..., PartitionFilters: [], PushedFilters: [IsNotNull(InvoiceLineItems)], ReadSchema: struct<InvoiceNumber:string,CreatedTime:bigint,StoreID:string,PosID:string,CustomerType:string,Pa...","children":[],"metadata":{"Location":"InMemoryFileIndex(4 paths)[file:/opt/spark/datasets/invoices/invoices-1.json, file:/opt/spark/datasets/invoices/invoices-2.json, ...]","ReadSchema":"struct<InvoiceNumber:string,CreatedTime:bigint,StoreID:string,PosID:string,CustomerType:string,PaymentMethod:string,DeliveryType:string,DeliveryAddress:struct<AddressLine:string,City:string,ContactNumber:string,PinCode:string,State:string>,InvoiceLineItems:array<struct<ItemCode:string,ItemDescription:string,ItemPrice:double,ItemQty:bigint,TotalValue:double>>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(InvoiceLineItems)]","DataFilters":"[(size(InvoiceLineItems#229, true) > 0), isnotnull(InvoiceLineItems#229)]"},"metrics":[{"name":"number of output rows","accumulatorId":9,"metricType":"sum"},{"name":"number of files read","accumulatorId":10,"metricType":"sum"},{"name":"metadata time","accumulatorId":11,"metricType":"timing"},{"name":"size of files read","accumulatorId":12,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":8,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":7,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":6,"metricType":"timing"}]},"time":1747554846711,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":3,"rootExecutionId":0,"description":"ingestion_bronze\nid = 5d289b4d-1b22-457d-8828-2e74638cb532\nrunId = 6fe779d0-8afe-459e-a1d8-537e0391e15e\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nScan json  (1)\n\n\n(1) Scan json \nOutput [17]: [InvoiceNumber#178, CreatedTime#179L, StoreID#180, PosID#181, CashierID#182, CustomerType#183, CustomerCardNo#184, TotalAmount#185, NumberOfItems#186L, PaymentMethod#187, TaxableAmount#188, CGST#189, SGST#190, CESS#191, DeliveryType#192, DeliveryAddress#193, InvoiceLineItems#194]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/spark/datasets/invoices/invoices-1.json, ... 3 entries]\nReadSchema: struct<InvoiceNumber:string,CreatedTime:bigint,StoreID:string,PosID:string,CashierID:string,CustomerType:string,CustomerCardNo:string,TotalAmount:double,NumberOfItems:bigint,PaymentMethod:string,TaxableAmount:double,CGST:double,SGST:double,CESS:double,DeliveryType:string,DeliveryAddress:struct<AddressLine:string,City:string,ContactNumber:string,PinCode:string,State:string>,InvoiceLineItems:array<struct<ItemCode:string,ItemDescription:string,ItemPrice:double,ItemQty:bigint,TotalValue:double>>>\n\n","sparkPlanInfo":{"nodeName":"Scan json ","simpleString":"FileScan json [InvoiceNumber#178,CreatedTime#179L,StoreID#180,PosID#181,CashierID#182,CustomerType#183,CustomerCardNo#184,TotalAmount#185,NumberOfItems#186L,PaymentMethod#187,TaxableAmount#188,CGST#189,SGST#190,CESS#191,DeliveryType#192,DeliveryAddress#193,InvoiceLineItems#194] Batched: false, DataFilters: [], Format: JSON, Location: InMemoryFileIndex(4 paths)[file:/opt/spark/datasets/invoices/invoices-1.json, file:/opt/spark/dat..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<InvoiceNumber:string,CreatedTime:bigint,StoreID:string,PosID:string,CashierID:string,Custo...","children":[],"metadata":{"Location":"InMemoryFileIndex(4 paths)[file:/opt/spark/datasets/invoices/invoices-1.json, file:/opt/spark/datasets/invoices/invoices-2.json, ...]","ReadSchema":"struct<InvoiceNumber:string,CreatedTime:bigint,StoreID:string,PosID:string,CashierID:string,CustomerType:string,CustomerCardNo:string,TotalAmount:double,NumberOfItems:bigint,PaymentMethod:string,TaxableAmount:double,CGST:double,SGST:double,CESS:double,DeliveryType:string,DeliveryAddress:struct<AddressLine:string,City:string,ContactNumber:string,PinCode:string,State:string>,InvoiceLineItems:array<struct<ItemCode:string,ItemDescription:string,ItemPrice:double,ItemQty:bigint,TotalValue:double>>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":2,"metricType":"sum"},{"name":"number of files read","accumulatorId":3,"metricType":"sum"},{"name":"metadata time","accumulatorId":4,"metricType":"timing"},{"name":"size of files read","accumulatorId":5,"metricType":"size"}]},"time":1747554847808,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":2,"rootExecutionId":1,"description":"ingestion_silver\nid = 01827939-abd3-4a56-a45c-fa1ec7e4733b\nrunId = 065116dd-65ea-4cdb-a11d-6ca354fd88a6\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\n* Project (5)\n+- * Generate (4)\n   +- * Project (3)\n      +- * Filter (2)\n         +- Scan json  (1)\n\n\n(1) Scan json \nOutput [9]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, DeliveryAddress#228, InvoiceLineItems#229]\nBatched: false\nLocation: InMemoryFileIndex [file:/opt/spark/datasets/invoices/invoices-1.json, ... 3 entries]\nPushedFilters: [IsNotNull(InvoiceLineItems)]\nReadSchema: struct<InvoiceNumber:string,CreatedTime:bigint,StoreID:string,PosID:string,CustomerType:string,PaymentMethod:string,DeliveryType:string,DeliveryAddress:struct<AddressLine:string,City:string,ContactNumber:string,PinCode:string,State:string>,InvoiceLineItems:array<struct<ItemCode:string,ItemDescription:string,ItemPrice:double,ItemQty:bigint,TotalValue:double>>>\n\n(2) Filter [codegen id : 1]\nInput [9]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, DeliveryAddress#228, InvoiceLineItems#229]\nCondition : ((size(InvoiceLineItems#229, true) > 0) AND isnotnull(InvoiceLineItems#229))\n\n(3) Project [codegen id : 1]\nOutput [11]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, DeliveryAddress#228.City AS _extract_City#752, DeliveryAddress#228.PinCode AS _extract_PinCode#753, DeliveryAddress#228.State AS _extract_State#754, InvoiceLineItems#229]\nInput [9]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, DeliveryAddress#228, InvoiceLineItems#229]\n\n(4) Generate [codegen id : 1]\nInput [11]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, _extract_City#752, _extract_PinCode#753, _extract_State#754, InvoiceLineItems#229]\nArguments: explode(InvoiceLineItems#229), [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, _extract_City#752, _extract_PinCode#753, _extract_State#754], false, [LineItem#55]\n\n(5) Project [codegen id : 1]\nOutput [15]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, _extract_City#752 AS City#52, _extract_PinCode#753 AS PinCode#53, _extract_State#754 AS State#54, LineItem#55.ItemCode AS ItemCode#68, LineItem#55.ItemDescription AS ItemDescription#82, LineItem#55.ItemPrice AS ItemPrice#97, LineItem#55.ItemQty AS ItemQty#113L, LineItem#55.TotalValue AS TotalValue#130]\nInput [11]: [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, _extract_City#752, _extract_PinCode#753, _extract_State#754, LineItem#55]\n\n","sparkPlanInfo":{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, _extract_City#265 AS City#52, _extract_PinCode#266 AS PinCode#53, _extract_State#267 AS State#54, LineItem#55.ItemCode AS ItemCode#68, LineItem#55.ItemDescription AS ItemDescription#82, LineItem#55.ItemPrice AS ItemPrice#97, LineItem#55.ItemQty AS ItemQty#113L, LineItem#55.TotalValue AS TotalValue#130]","children":[{"nodeName":"Generate","simpleString":"Generate explode(InvoiceLineItems#229), [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, _extract_City#265, _extract_PinCode#266, _extract_State#267], false, [LineItem#55]","children":[{"nodeName":"Project","simpleString":"Project [InvoiceNumber#213, CreatedTime#214L, StoreID#215, PosID#216, CustomerType#218, PaymentMethod#222, DeliveryType#227, DeliveryAddress#228.City AS _extract_City#265, DeliveryAddress#228.PinCode AS _extract_PinCode#266, DeliveryAddress#228.State AS _extract_State#267, InvoiceLineItems#229]","children":[{"nodeName":"Filter","simpleString":"Filter ((size(InvoiceLineItems#229, true) > 0) AND isnotnull(InvoiceLineItems#229))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [InvoiceNumber#213,CreatedTime#214L,StoreID#215,PosID#216,CustomerType#218,PaymentMethod#222,DeliveryType#227,DeliveryAddress#228,InvoiceLineItems#229] Batched: false, DataFilters: [(size(InvoiceLineItems#229, true) > 0), isnotnull(InvoiceLineItems#229)], Format: JSON, Location: InMemoryFileIndex(4 paths)[file:/opt/spark/datasets/invoices/invoices-1.json, file:/opt/spark/dat..., PartitionFilters: [], PushedFilters: [IsNotNull(InvoiceLineItems)], ReadSchema: struct<InvoiceNumber:string,CreatedTime:bigint,StoreID:string,PosID:string,CustomerType:string,Pa...","children":[],"metadata":{"Location":"InMemoryFileIndex(4 paths)[file:/opt/spark/datasets/invoices/invoices-1.json, file:/opt/spark/datasets/invoices/invoices-2.json, ...]","ReadSchema":"struct<InvoiceNumber:string,CreatedTime:bigint,StoreID:string,PosID:string,CustomerType:string,PaymentMethod:string,DeliveryType:string,DeliveryAddress:struct<AddressLine:string,City:string,ContactNumber:string,PinCode:string,State:string>,InvoiceLineItems:array<struct<ItemCode:string,ItemDescription:string,ItemPrice:double,ItemQty:bigint,TotalValue:double>>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(InvoiceLineItems)]","DataFilters":"[(size(InvoiceLineItems#229, true) > 0), isnotnull(InvoiceLineItems#229)]"},"metrics":[{"name":"number of output rows","accumulatorId":9,"metricType":"sum"},{"name":"number of files read","accumulatorId":10,"metricType":"sum"},{"name":"metadata time","accumulatorId":11,"metricType":"timing"},{"name":"size of files read","accumulatorId":12,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":8,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":7,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":6,"metricType":"timing"}]},"time":1747554847845,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[3,4],[4,5],[5,1118534]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[10,4],[11,0],[12,1118534]]}
{"Event":"SparkListenerJobStart","Job ID":1,"Submission Time":1747554848375,"Stage Infos":[{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"toTable at NativeMethodAccessorImpl.java:0","Number of Tasks":4,"RDD Info":[{"RDD ID":4,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"2\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[3],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"FileScanRDD","Scope":"{\"id\":\"9\",\"name\":\"Scan json \"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"Scan json \"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[0],"Properties":{"spark.driver.port":"42423","spark.submit.pyFiles":"","spark.app.startTime":"1747554840211","spark.sql.catalogImplementation":"hive","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","callSite.short":"toTable at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"065116dd-65ea-4cdb-a11d-6ca354fd88a6","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1747554753184","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/opt/spark/spark-events","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"/opt/spark/spark-events","sql.streaming.queryId":"01827939-abd3-4a56-a45c-fa1ec7e4733b","spark.sql.warehouse.dir":"file:/opt/spark/warehouse","streaming.sql.batchId":"0","spark.executor.memory":"2g","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","spark.master":"spark://delta-streaming-spark-master:7077","spark.job.interruptOnCancel":"true","spark.executor.id":"driver","spark.app.name":"InvoicesStreamMedallion","spark.executor.cores":"4","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.driver.host":"163d156376d2","spark.log.level":"INFO","spark.app.id":"app-20250518075400-0005","spark.driver.memoryOverheadFactor":"0.1","spark.job.description":"ingestion_silver\nid = 01827939-abd3-4a56-a45c-fa1ec7e4733b\nrunId = 065116dd-65ea-4cdb-a11d-6ca354fd88a6\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"1","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"toTable at NativeMethodAccessorImpl.java:0","Number of Tasks":4,"RDD Info":[{"RDD ID":4,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"2\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[3],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"FileScanRDD","Scope":"{\"id\":\"9\",\"name\":\"Scan json \"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"Scan json \"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1747554848389,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"42423","spark.submit.pyFiles":"","spark.app.startTime":"1747554840211","spark.sql.catalogImplementation":"hive","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","callSite.short":"toTable at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"065116dd-65ea-4cdb-a11d-6ca354fd88a6","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1747554753184","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/opt/spark/spark-events","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.execution.id":"2","spark.history.fs.logDirectory":"/opt/spark/spark-events","sql.streaming.queryId":"01827939-abd3-4a56-a45c-fa1ec7e4733b","spark.sql.warehouse.dir":"file:/opt/spark/warehouse","streaming.sql.batchId":"0","spark.executor.memory":"2g","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","spark.master":"spark://delta-streaming-spark-master:7077","spark.job.interruptOnCancel":"true","spark.executor.id":"driver","spark.app.name":"InvoicesStreamMedallion","spark.executor.cores":"4","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.driver.host":"163d156376d2","spark.log.level":"INFO","spark.app.id":"app-20250518075400-0005","spark.driver.memoryOverheadFactor":"0.1","resource.executor.cores":"4","spark.job.description":"ingestion_silver\nid = 01827939-abd3-4a56-a45c-fa1ec7e4733b\nrunId = 065116dd-65ea-4cdb-a11d-6ca354fd88a6\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"1","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerJobStart","Job ID":0,"Submission Time":1747554848481,"Stage Infos":[{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"toTable at NativeMethodAccessorImpl.java:0","Number of Tasks":4,"RDD Info":[{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan json \"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"FileScanRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan json \"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[1],"Properties":{"spark.driver.port":"42423","spark.submit.pyFiles":"","spark.app.startTime":"1747554840211","spark.sql.catalogImplementation":"hive","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","callSite.short":"toTable at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"6fe779d0-8afe-459e-a1d8-537e0391e15e","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1747554753184","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/opt/spark/spark-events","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.execution.id":"3","spark.history.fs.logDirectory":"/opt/spark/spark-events","sql.streaming.queryId":"5d289b4d-1b22-457d-8828-2e74638cb532","spark.sql.warehouse.dir":"file:/opt/spark/warehouse","streaming.sql.batchId":"0","spark.executor.memory":"2g","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","spark.master":"spark://delta-streaming-spark-master:7077","spark.job.interruptOnCancel":"true","spark.executor.id":"driver","spark.app.name":"InvoicesStreamMedallion","spark.executor.cores":"4","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.driver.host":"163d156376d2","spark.log.level":"INFO","spark.app.id":"app-20250518075400-0005","spark.driver.memoryOverheadFactor":"0.1","spark.job.description":"ingestion_bronze\nid = 5d289b4d-1b22-457d-8828-2e74638cb532\nrunId = 6fe779d0-8afe-459e-a1d8-537e0391e15e\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"toTable at NativeMethodAccessorImpl.java:0","Number of Tasks":4,"RDD Info":[{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan json \"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"FileScanRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan json \"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1747554848484,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"42423","spark.submit.pyFiles":"","spark.app.startTime":"1747554840211","spark.sql.catalogImplementation":"hive","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","callSite.short":"toTable at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"6fe779d0-8afe-459e-a1d8-537e0391e15e","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1747554753184","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/opt/spark/spark-events","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.execution.id":"3","spark.history.fs.logDirectory":"/opt/spark/spark-events","sql.streaming.queryId":"5d289b4d-1b22-457d-8828-2e74638cb532","spark.sql.warehouse.dir":"file:/opt/spark/warehouse","streaming.sql.batchId":"0","spark.executor.memory":"2g","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","spark.master":"spark://delta-streaming-spark-master:7077","spark.job.interruptOnCancel":"true","spark.executor.id":"driver","spark.app.name":"InvoicesStreamMedallion","spark.executor.cores":"4","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.driver.host":"163d156376d2","spark.log.level":"INFO","spark.app.id":"app-20250518075400-0005","spark.driver.memoryOverheadFactor":"0.1","resource.executor.cores":"4","spark.job.description":"ingestion_bronze\nid = 5d289b4d-1b22-457d-8828-2e74638cb532\nrunId = 6fe779d0-8afe-459e-a1d8-537e0391e15e\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1747554848485,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":1,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1747554848496,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":2,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1747554848497,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":3,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1747554848497,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":4,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1747554848513,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":5,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1747554848514,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":6,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1747554848514,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":7,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1747554848515,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":4,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1747554848513,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554854423,"Failed":false,"Killed":false,"Accumulables":[{"ID":2,"Name":"number of output rows","Update":"590","Value":"590","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":17,"Name":"task commit time","Update":"8","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":60,"Name":"internal.metrics.executorDeserializeTime","Update":1109,"Value":1109,"Internal":true,"Count Failed Values":true},{"ID":61,"Name":"internal.metrics.executorDeserializeCpuTime","Update":204689600,"Value":204689600,"Internal":true,"Count Failed Values":true},{"ID":62,"Name":"internal.metrics.executorRunTime","Update":4725,"Value":4725,"Internal":true,"Count Failed Values":true},{"ID":63,"Name":"internal.metrics.executorCpuTime","Update":2196311800,"Value":2196311800,"Internal":true,"Count Failed Values":true},{"ID":64,"Name":"internal.metrics.resultSize","Update":3099,"Value":3099,"Internal":true,"Count Failed Values":true},{"ID":65,"Name":"internal.metrics.jvmGCTime","Update":63,"Value":63,"Internal":true,"Count Failed Values":true},{"ID":66,"Name":"internal.metrics.resultSerializationTime","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":91,"Name":"internal.metrics.input.bytesRead","Update":412765,"Value":412765,"Internal":true,"Count Failed Values":true},{"ID":92,"Name":"internal.metrics.input.recordsRead","Update":590,"Value":590,"Internal":true,"Count Failed Values":true},{"ID":93,"Name":"internal.metrics.output.bytesWritten","Update":49216,"Value":49216,"Internal":true,"Count Failed Values":true},{"ID":94,"Name":"internal.metrics.output.recordsWritten","Update":590,"Value":590,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1109,"Executor Deserialize CPU Time":204689600,"Executor Run Time":4725,"Executor CPU Time":2196311800,"Peak Execution Memory":0,"Result Size":3099,"JVM GC Time":63,"Result Serialization Time":6,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":412765,"Records Read":590},"Output Metrics":{"Bytes Written":49216,"Records Written":590},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":7,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1747554848515,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554854425,"Failed":false,"Killed":false,"Accumulables":[{"ID":2,"Name":"number of output rows","Update":"10","Value":"600","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":17,"Name":"task commit time","Update":"8","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":60,"Name":"internal.metrics.executorDeserializeTime","Update":1109,"Value":2218,"Internal":true,"Count Failed Values":true},{"ID":61,"Name":"internal.metrics.executorDeserializeCpuTime","Update":358315800,"Value":563005400,"Internal":true,"Count Failed Values":true},{"ID":62,"Name":"internal.metrics.executorRunTime","Update":4725,"Value":9450,"Internal":true,"Count Failed Values":true},{"ID":63,"Name":"internal.metrics.executorCpuTime","Update":1227554300,"Value":3423866100,"Internal":true,"Count Failed Values":true},{"ID":64,"Name":"internal.metrics.resultSize","Update":3112,"Value":6211,"Internal":true,"Count Failed Values":true},{"ID":65,"Name":"internal.metrics.jvmGCTime","Update":63,"Value":126,"Internal":true,"Count Failed Values":true},{"ID":66,"Name":"internal.metrics.resultSerializationTime","Update":10,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":91,"Name":"internal.metrics.input.bytesRead","Update":7230,"Value":419995,"Internal":true,"Count Failed Values":true},{"ID":92,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":600,"Internal":true,"Count Failed Values":true},{"ID":93,"Name":"internal.metrics.output.bytesWritten","Update":9824,"Value":59040,"Internal":true,"Count Failed Values":true},{"ID":94,"Name":"internal.metrics.output.recordsWritten","Update":10,"Value":600,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1109,"Executor Deserialize CPU Time":358315800,"Executor Run Time":4725,"Executor CPU Time":1227554300,"Peak Execution Memory":0,"Result Size":3112,"JVM GC Time":63,"Result Serialization Time":10,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":7230,"Records Read":10},"Output Metrics":{"Bytes Written":9824,"Records Written":10},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":1,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1747554848496,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554854426,"Failed":false,"Killed":false,"Accumulables":[{"ID":6,"Name":"duration","Update":"2216","Value":"2216","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":7,"Name":"number of output rows","Update":"1253","Value":"1253","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":8,"Name":"number of output rows","Update":"501","Value":"501","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":9,"Name":"number of output rows","Update":"501","Value":"501","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":23,"Name":"task commit time","Update":"8","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":25,"Name":"internal.metrics.executorDeserializeTime","Update":1110,"Value":1110,"Internal":true,"Count Failed Values":true},{"ID":26,"Name":"internal.metrics.executorDeserializeCpuTime","Update":504248900,"Value":504248900,"Internal":true,"Count Failed Values":true},{"ID":27,"Name":"internal.metrics.executorRunTime","Update":4725,"Value":4725,"Internal":true,"Count Failed Values":true},{"ID":28,"Name":"internal.metrics.executorCpuTime","Update":1219390700,"Value":1219390700,"Internal":true,"Count Failed Values":true},{"ID":29,"Name":"internal.metrics.resultSize","Update":2886,"Value":2886,"Internal":true,"Count Failed Values":true},{"ID":30,"Name":"internal.metrics.jvmGCTime","Update":63,"Value":63,"Internal":true,"Count Failed Values":true},{"ID":31,"Name":"internal.metrics.resultSerializationTime","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":56,"Name":"internal.metrics.input.bytesRead","Update":354143,"Value":354143,"Internal":true,"Count Failed Values":true},{"ID":57,"Name":"internal.metrics.input.recordsRead","Update":501,"Value":501,"Internal":true,"Count Failed Values":true},{"ID":58,"Name":"internal.metrics.output.bytesWritten","Update":28087,"Value":28087,"Internal":true,"Count Failed Values":true},{"ID":59,"Name":"internal.metrics.output.recordsWritten","Update":1253,"Value":1253,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1110,"Executor Deserialize CPU Time":504248900,"Executor Run Time":4725,"Executor CPU Time":1219390700,"Peak Execution Memory":0,"Result Size":2886,"JVM GC Time":63,"Result Serialization Time":6,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":354143,"Records Read":501},"Output Metrics":{"Bytes Written":28087,"Records Written":1253},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":6,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1747554848514,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554854572,"Failed":false,"Killed":false,"Accumulables":[{"ID":2,"Name":"number of output rows","Update":"500","Value":"1100","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":17,"Name":"task commit time","Update":"6","Value":"22","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":60,"Name":"internal.metrics.executorDeserializeTime","Update":1171,"Value":3389,"Internal":true,"Count Failed Values":true},{"ID":61,"Name":"internal.metrics.executorDeserializeCpuTime","Update":451803100,"Value":1014808500,"Internal":true,"Count Failed Values":true},{"ID":62,"Name":"internal.metrics.executorRunTime","Update":4838,"Value":14288,"Internal":true,"Count Failed Values":true},{"ID":63,"Name":"internal.metrics.executorCpuTime","Update":1095326600,"Value":4519192700,"Internal":true,"Count Failed Values":true},{"ID":64,"Name":"internal.metrics.resultSize","Update":3121,"Value":9332,"Internal":true,"Count Failed Values":true},{"ID":65,"Name":"internal.metrics.jvmGCTime","Update":74,"Value":200,"Internal":true,"Count Failed Values":true},{"ID":66,"Name":"internal.metrics.resultSerializationTime","Update":11,"Value":27,"Internal":true,"Count Failed Values":true},{"ID":91,"Name":"internal.metrics.input.bytesRead","Update":344396,"Value":764391,"Internal":true,"Count Failed Values":true},{"ID":92,"Name":"internal.metrics.input.recordsRead","Update":500,"Value":1100,"Internal":true,"Count Failed Values":true},{"ID":93,"Name":"internal.metrics.output.bytesWritten","Update":44468,"Value":103508,"Internal":true,"Count Failed Values":true},{"ID":94,"Name":"internal.metrics.output.recordsWritten","Update":500,"Value":1100,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1171,"Executor Deserialize CPU Time":451803100,"Executor Run Time":4838,"Executor CPU Time":1095326600,"Peak Execution Memory":0,"Result Size":3121,"JVM GC Time":74,"Result Serialization Time":11,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":344396,"Records Read":500},"Output Metrics":{"Bytes Written":44468,"Records Written":500},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":3,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1747554848497,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554854572,"Failed":false,"Killed":false,"Accumulables":[{"ID":6,"Name":"duration","Update":"2124","Value":"4340","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":7,"Name":"number of output rows","Update":"22","Value":"1275","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":8,"Name":"number of output rows","Update":"10","Value":"511","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":9,"Name":"number of output rows","Update":"10","Value":"511","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":23,"Name":"task commit time","Update":"6","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":25,"Name":"internal.metrics.executorDeserializeTime","Update":1166,"Value":2276,"Internal":true,"Count Failed Values":true},{"ID":26,"Name":"internal.metrics.executorDeserializeCpuTime","Update":194881500,"Value":699130400,"Internal":true,"Count Failed Values":true},{"ID":27,"Name":"internal.metrics.executorRunTime","Update":4843,"Value":9568,"Internal":true,"Count Failed Values":true},{"ID":28,"Name":"internal.metrics.executorCpuTime","Update":1435055600,"Value":2654446300,"Internal":true,"Count Failed Values":true},{"ID":29,"Name":"internal.metrics.resultSize","Update":2870,"Value":5756,"Internal":true,"Count Failed Values":true},{"ID":30,"Name":"internal.metrics.jvmGCTime","Update":74,"Value":137,"Internal":true,"Count Failed Values":true},{"ID":31,"Name":"internal.metrics.resultSerializationTime","Update":8,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":56,"Name":"internal.metrics.input.bytesRead","Update":7230,"Value":361373,"Internal":true,"Count Failed Values":true},{"ID":57,"Name":"internal.metrics.input.recordsRead","Update":10,"Value":511,"Internal":true,"Count Failed Values":true},{"ID":58,"Name":"internal.metrics.output.bytesWritten","Update":5743,"Value":33830,"Internal":true,"Count Failed Values":true},{"ID":59,"Name":"internal.metrics.output.recordsWritten","Update":22,"Value":1275,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1166,"Executor Deserialize CPU Time":194881500,"Executor Run Time":4843,"Executor CPU Time":1435055600,"Peak Execution Memory":0,"Result Size":2870,"JVM GC Time":74,"Result Serialization Time":8,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":7230,"Records Read":10},"Output Metrics":{"Bytes Written":5743,"Records Written":22},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1747554848485,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554854573,"Failed":false,"Killed":false,"Accumulables":[{"ID":6,"Name":"duration","Update":"2378","Value":"6718","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":7,"Name":"number of output rows","Update":"1484","Value":"2759","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":8,"Name":"number of output rows","Update":"590","Value":"1101","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":9,"Name":"number of output rows","Update":"590","Value":"1101","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":23,"Name":"task commit time","Update":"6","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":25,"Name":"internal.metrics.executorDeserializeTime","Update":1172,"Value":3448,"Internal":true,"Count Failed Values":true},{"ID":26,"Name":"internal.metrics.executorDeserializeCpuTime","Update":432600800,"Value":1131731200,"Internal":true,"Count Failed Values":true},{"ID":27,"Name":"internal.metrics.executorRunTime","Update":4840,"Value":14408,"Internal":true,"Count Failed Values":true},{"ID":28,"Name":"internal.metrics.executorCpuTime","Update":2207664500,"Value":4862110800,"Internal":true,"Count Failed Values":true},{"ID":29,"Name":"internal.metrics.resultSize","Update":2886,"Value":8642,"Internal":true,"Count Failed Values":true},{"ID":30,"Name":"internal.metrics.jvmGCTime","Update":74,"Value":211,"Internal":true,"Count Failed Values":true},{"ID":31,"Name":"internal.metrics.resultSerializationTime","Update":8,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":56,"Name":"internal.metrics.input.bytesRead","Update":412765,"Value":774138,"Internal":true,"Count Failed Values":true},{"ID":57,"Name":"internal.metrics.input.recordsRead","Update":590,"Value":1101,"Internal":true,"Count Failed Values":true},{"ID":58,"Name":"internal.metrics.output.bytesWritten","Update":30800,"Value":64630,"Internal":true,"Count Failed Values":true},{"ID":59,"Name":"internal.metrics.output.recordsWritten","Update":1484,"Value":2759,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":1172,"Executor Deserialize CPU Time":432600800,"Executor Run Time":4840,"Executor CPU Time":2207664500,"Peak Execution Memory":0,"Result Size":2886,"JVM GC Time":74,"Result Serialization Time":8,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":412765,"Records Read":590},"Output Metrics":{"Bytes Written":30800,"Records Written":1484},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":5,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1747554848514,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554854796,"Failed":false,"Killed":false,"Accumulables":[{"ID":2,"Name":"number of output rows","Update":"501","Value":"1601","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":17,"Name":"task commit time","Update":"5","Value":"27","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":60,"Name":"internal.metrics.executorDeserializeTime","Update":1154,"Value":4543,"Internal":true,"Count Failed Values":true},{"ID":61,"Name":"internal.metrics.executorDeserializeCpuTime","Update":526346300,"Value":1541154800,"Internal":true,"Count Failed Values":true},{"ID":62,"Name":"internal.metrics.executorRunTime","Update":5095,"Value":19383,"Internal":true,"Count Failed Values":true},{"ID":63,"Name":"internal.metrics.executorCpuTime","Update":2142905900,"Value":6662098600,"Internal":true,"Count Failed Values":true},{"ID":64,"Name":"internal.metrics.resultSize","Update":3097,"Value":12429,"Internal":true,"Count Failed Values":true},{"ID":65,"Name":"internal.metrics.jvmGCTime","Update":61,"Value":261,"Internal":true,"Count Failed Values":true},{"ID":66,"Name":"internal.metrics.resultSerializationTime","Update":5,"Value":32,"Internal":true,"Count Failed Values":true},{"ID":91,"Name":"internal.metrics.input.bytesRead","Update":354143,"Value":1118534,"Internal":true,"Count Failed Values":true},{"ID":92,"Name":"internal.metrics.input.recordsRead","Update":501,"Value":1601,"Internal":true,"Count Failed Values":true},{"ID":93,"Name":"internal.metrics.output.bytesWritten","Update":44277,"Value":147785,"Internal":true,"Count Failed Values":true},{"ID":94,"Name":"internal.metrics.output.recordsWritten","Update":501,"Value":1601,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":91287424,"JVMOffHeapMemory":127872840,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":1860947,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":1860947,"OffHeapUnifiedMemory":0,"DirectPoolMemory":12618811,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":10,"MinorGCTime":76,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":76},"Task Metrics":{"Executor Deserialize Time":1154,"Executor Deserialize CPU Time":526346300,"Executor Run Time":5095,"Executor CPU Time":2142905900,"Peak Execution Memory":0,"Result Size":3097,"JVM GC Time":61,"Result Serialization Time":5,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":354143,"Records Read":501},"Output Metrics":{"Bytes Written":44277,"Records Written":501},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"toTable at NativeMethodAccessorImpl.java:0","Number of Tasks":4,"RDD Info":[{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan json \"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"FileScanRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan json \"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1747554848484,"Completion Time":1747554854797,"Accumulables":[{"ID":2,"Name":"number of output rows","Value":"1601","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":17,"Name":"task commit time","Value":"27","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":60,"Name":"internal.metrics.executorDeserializeTime","Value":4543,"Internal":true,"Count Failed Values":true},{"ID":61,"Name":"internal.metrics.executorDeserializeCpuTime","Value":1541154800,"Internal":true,"Count Failed Values":true},{"ID":62,"Name":"internal.metrics.executorRunTime","Value":19383,"Internal":true,"Count Failed Values":true},{"ID":63,"Name":"internal.metrics.executorCpuTime","Value":6662098600,"Internal":true,"Count Failed Values":true},{"ID":64,"Name":"internal.metrics.resultSize","Value":12429,"Internal":true,"Count Failed Values":true},{"ID":65,"Name":"internal.metrics.jvmGCTime","Value":261,"Internal":true,"Count Failed Values":true},{"ID":66,"Name":"internal.metrics.resultSerializationTime","Value":32,"Internal":true,"Count Failed Values":true},{"ID":91,"Name":"internal.metrics.input.bytesRead","Value":1118534,"Internal":true,"Count Failed Values":true},{"ID":92,"Name":"internal.metrics.input.recordsRead","Value":1601,"Internal":true,"Count Failed Values":true},{"ID":93,"Name":"internal.metrics.output.bytesWritten","Value":147785,"Internal":true,"Count Failed Values":true},{"ID":94,"Name":"internal.metrics.output.recordsWritten","Value":1601,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":0,"Completion Time":1747554854800,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":2,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1747554848497,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554854797,"Failed":false,"Killed":false,"Accumulables":[{"ID":6,"Name":"duration","Update":"2597","Value":"9315","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":7,"Name":"number of output rows","Update":"1257","Value":"4016","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":8,"Name":"number of output rows","Update":"500","Value":"1601","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":9,"Name":"number of output rows","Update":"500","Value":"1601","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":23,"Name":"task commit time","Update":"5","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":25,"Name":"internal.metrics.executorDeserializeTime","Update":1150,"Value":4598,"Internal":true,"Count Failed Values":true},{"ID":26,"Name":"internal.metrics.executorDeserializeCpuTime","Update":420178300,"Value":1551909500,"Internal":true,"Count Failed Values":true},{"ID":27,"Name":"internal.metrics.executorRunTime","Update":5099,"Value":19507,"Internal":true,"Count Failed Values":true},{"ID":28,"Name":"internal.metrics.executorCpuTime","Update":2256372600,"Value":7118483400,"Internal":true,"Count Failed Values":true},{"ID":29,"Name":"internal.metrics.resultSize","Update":2882,"Value":11524,"Internal":true,"Count Failed Values":true},{"ID":30,"Name":"internal.metrics.jvmGCTime","Update":61,"Value":272,"Internal":true,"Count Failed Values":true},{"ID":31,"Name":"internal.metrics.resultSerializationTime","Update":5,"Value":27,"Internal":true,"Count Failed Values":true},{"ID":56,"Name":"internal.metrics.input.bytesRead","Update":344396,"Value":1118534,"Internal":true,"Count Failed Values":true},{"ID":57,"Name":"internal.metrics.input.recordsRead","Update":500,"Value":1601,"Internal":true,"Count Failed Values":true},{"ID":58,"Name":"internal.metrics.output.bytesWritten","Update":27706,"Value":92336,"Internal":true,"Count Failed Values":true},{"ID":59,"Name":"internal.metrics.output.recordsWritten","Update":1257,"Value":4016,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":91287424,"JVMOffHeapMemory":127872840,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":1860947,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":1860947,"OffHeapUnifiedMemory":0,"DirectPoolMemory":12618811,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":10,"MinorGCTime":76,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":76},"Task Metrics":{"Executor Deserialize Time":1150,"Executor Deserialize CPU Time":420178300,"Executor Run Time":5099,"Executor CPU Time":2256372600,"Peak Execution Memory":0,"Result Size":2882,"JVM GC Time":61,"Result Serialization Time":5,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":344396,"Records Read":500},"Output Metrics":{"Bytes Written":27706,"Records Written":1257},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"toTable at NativeMethodAccessorImpl.java:0","Number of Tasks":4,"RDD Info":[{"RDD ID":4,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"2\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[3],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"FileScanRDD","Scope":"{\"id\":\"9\",\"name\":\"Scan json \"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"Scan json \"}","Callsite":"toTable at NativeMethodAccessorImpl.java:0","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":4,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1747554848389,"Completion Time":1747554854802,"Accumulables":[{"ID":6,"Name":"duration","Value":"9315","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":7,"Name":"number of output rows","Value":"4016","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":8,"Name":"number of output rows","Value":"1601","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":9,"Name":"number of output rows","Value":"1601","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":23,"Name":"task commit time","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":25,"Name":"internal.metrics.executorDeserializeTime","Value":4598,"Internal":true,"Count Failed Values":true},{"ID":26,"Name":"internal.metrics.executorDeserializeCpuTime","Value":1551909500,"Internal":true,"Count Failed Values":true},{"ID":27,"Name":"internal.metrics.executorRunTime","Value":19507,"Internal":true,"Count Failed Values":true},{"ID":28,"Name":"internal.metrics.executorCpuTime","Value":7118483400,"Internal":true,"Count Failed Values":true},{"ID":29,"Name":"internal.metrics.resultSize","Value":11524,"Internal":true,"Count Failed Values":true},{"ID":30,"Name":"internal.metrics.jvmGCTime","Value":272,"Internal":true,"Count Failed Values":true},{"ID":31,"Name":"internal.metrics.resultSerializationTime","Value":27,"Internal":true,"Count Failed Values":true},{"ID":56,"Name":"internal.metrics.input.bytesRead","Value":1118534,"Internal":true,"Count Failed Values":true},{"ID":57,"Name":"internal.metrics.input.recordsRead","Value":1601,"Internal":true,"Count Failed Values":true},{"ID":58,"Name":"internal.metrics.output.bytesWritten","Value":92336,"Internal":true,"Count Failed Values":true},{"ID":59,"Name":"internal.metrics.output.recordsWritten","Value":4016,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":1,"Completion Time":1747554854802,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[19,4],[24,0],[21,4016],[22,0],[20,92336]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[13,4],[18,1],[15,1601],[16,0],[14,147785]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":2,"time":1747554854811,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":3,"time":1747554854811,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":5,"rootExecutionId":0,"description":"ingestion_bronze\nid = 5d289b4d-1b22-457d-8828-2e74638cb532\nrunId = 6fe779d0-8afe-459e-a1d8-537e0391e15e\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\n* SerializeFromObject (6)\n+- * MapElements (5)\n   +- * DeserializeToObject (4)\n      +- * Project (3)\n         +- * Filter (2)\n            +- * Scan ExistingRDD (1)\n\n\n(1) Scan ExistingRDD [codegen id : 1]\nOutput [10]: [txn#811, add#813, remove#815, metaData#817, protocol#819, cdc#821, checkpointMetadata#823, sidecar#825, domainMetadata#827, commitInfo#829]\nArguments: [txn#811, add#813, remove#815, metaData#817, protocol#819, cdc#821, checkpointMetadata#823, sidecar#825, domainMetadata#827, commitInfo#829], MapPartitionsRDD[8] at toTable at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)\n\n(2) Filter [codegen id : 1]\nInput [10]: [txn#811, add#813, remove#815, metaData#817, protocol#819, cdc#821, checkpointMetadata#823, sidecar#825, domainMetadata#827, commitInfo#829]\nCondition : isnotnull(add#813)\n\n(3) Project [codegen id : 1]\nOutput [1]: [add#813]\nInput [10]: [txn#811, add#813, remove#815, metaData#817, protocol#819, cdc#821, checkpointMetadata#823, sidecar#825, domainMetadata#827, commitInfo#829]\n\n(4) DeserializeToObject [codegen id : 1]\nInput [1]: [add#813]\nArguments: newInstance(class scala.Tuple1), obj#963: scala.Tuple1\n\n(5) MapElements [codegen id : 1]\nInput [1]: [obj#963]\nArguments: org.apache.spark.sql.Dataset$$Lambda$4848/0x00007f34314fb220@3f5c71f1, obj#964: org.apache.spark.sql.delta.actions.AddFile\n\n(6) SerializeFromObject [codegen id : 1]\nInput [1]: [obj#964]\nArguments: [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).path, true, false, true) AS path#966, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).partitionValues) AS partitionValues#968, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).size AS size#970L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).modificationTime AS modificationTime#972L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).dataChange AS dataChange#974, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).stats, true, false, true) AS stats#976, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).tags) AS tags#978, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).maxRowIndex)) AS deletionVector#980, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).baseRowId) AS baseRowId#982L, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).defaultRowCommitVersion) AS defaultRowCommitVersion#984L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).clusteringProvider), true, false, true) AS clusteringProvider#986]\n\n","sparkPlanInfo":{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).path, true, false, true) AS path#966, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).partitionValues) AS partitionValues#968, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).size AS size#970L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).modificationTime AS modificationTime#972L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).dataChange AS dataChange#974, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).stats, true, false, true) AS stats#976, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).tags) AS tags#978, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).maxRowIndex)) AS deletionVector#980, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).baseRowId) AS baseRowId#982L, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).defaultRowCommitVersion) AS defaultRowCommitVersion#984L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).clusteringProvider), true, false, true) AS clusteringProvider#986]","children":[{"nodeName":"MapElements","simpleString":"MapElements org.apache.spark.sql.Dataset$$Lambda$4848/0x00007f34314fb220@3f5c71f1, obj#964: org.apache.spark.sql.delta.actions.AddFile","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class scala.Tuple1), obj#963: scala.Tuple1","children":[{"nodeName":"Project","simpleString":"Project [add#813]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(add#813)","children":[{"nodeName":"Scan ExistingRDD","simpleString":"Scan ExistingRDD[txn#811,add#813,remove#815,metaData#817,protocol#819,cdc#821,checkpointMetadata#823,sidecar#825,domainMetadata#827,commitInfo#829]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":104,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":102,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":99,"metricType":"timing"}]},"time":1747554855905,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":4,"rootExecutionId":1,"description":"ingestion_silver\nid = 01827939-abd3-4a56-a45c-fa1ec7e4733b\nrunId = 065116dd-65ea-4cdb-a11d-6ca354fd88a6\nbatch = 0","details":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\n* SerializeFromObject (6)\n+- * MapElements (5)\n   +- * DeserializeToObject (4)\n      +- * Project (3)\n         +- * Filter (2)\n            +- * Scan ExistingRDD (1)\n\n\n(1) Scan ExistingRDD [codegen id : 1]\nOutput [10]: [txn#812, add#814, remove#816, metaData#818, protocol#820, cdc#822, checkpointMetadata#824, sidecar#826, domainMetadata#828, commitInfo#830]\nArguments: [txn#812, add#814, remove#816, metaData#818, protocol#820, cdc#822, checkpointMetadata#824, sidecar#826, domainMetadata#828, commitInfo#830], MapPartitionsRDD[7] at toTable at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)\n\n(2) Filter [codegen id : 1]\nInput [10]: [txn#812, add#814, remove#816, metaData#818, protocol#820, cdc#822, checkpointMetadata#824, sidecar#826, domainMetadata#828, commitInfo#830]\nCondition : isnotnull(add#814)\n\n(3) Project [codegen id : 1]\nOutput [1]: [add#814]\nInput [10]: [txn#812, add#814, remove#816, metaData#818, protocol#820, cdc#822, checkpointMetadata#824, sidecar#826, domainMetadata#828, commitInfo#830]\n\n(4) DeserializeToObject [codegen id : 1]\nInput [1]: [add#814]\nArguments: newInstance(class scala.Tuple1), obj#962: scala.Tuple1\n\n(5) MapElements [codegen id : 1]\nInput [1]: [obj#962]\nArguments: org.apache.spark.sql.Dataset$$Lambda$4848/0x00007f34314fb220@3f5c71f1, obj#965: org.apache.spark.sql.delta.actions.AddFile\n\n(6) SerializeFromObject [codegen id : 1]\nInput [1]: [obj#965]\nArguments: [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).path, true, false, true) AS path#967, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).partitionValues) AS partitionValues#969, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).size AS size#971L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).modificationTime AS modificationTime#973L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).dataChange AS dataChange#975, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).stats, true, false, true) AS stats#977, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).tags) AS tags#979, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).maxRowIndex)) AS deletionVector#981, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).baseRowId) AS baseRowId#983L, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).defaultRowCommitVersion) AS defaultRowCommitVersion#985L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).clusteringProvider), true, false, true) AS clusteringProvider#987]\n\n","sparkPlanInfo":{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).path, true, false, true) AS path#967, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).partitionValues) AS partitionValues#969, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).size AS size#971L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).modificationTime AS modificationTime#973L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).dataChange AS dataChange#975, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).stats, true, false, true) AS stats#977, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).tags) AS tags#979, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).maxRowIndex)) AS deletionVector#981, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).baseRowId) AS baseRowId#983L, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).defaultRowCommitVersion) AS defaultRowCommitVersion#985L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).clusteringProvider), true, false, true) AS clusteringProvider#987]","children":[{"nodeName":"MapElements","simpleString":"MapElements org.apache.spark.sql.Dataset$$Lambda$4848/0x00007f34314fb220@3f5c71f1, obj#965: org.apache.spark.sql.delta.actions.AddFile","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class scala.Tuple1), obj#962: scala.Tuple1","children":[{"nodeName":"Project","simpleString":"Project [add#814]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(add#814)","children":[{"nodeName":"Scan ExistingRDD","simpleString":"Scan ExistingRDD[txn#812,add#814,remove#816,metaData#818,protocol#820,cdc#822,checkpointMetadata#824,sidecar#826,domainMetadata#828,commitInfo#830]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":103,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":101,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":100,"metricType":"timing"}]},"time":1747554855905,"modifiedConfigs":{"spark.sql.adaptive.enabled":"false","spark.sql.requireAllClusterKeysForDistribution":"false","spark.sql.cbo.enabled":"false","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"SparkListenerJobStart","Job ID":2,"Submission Time":1747554856302,"Stage Infos":[],"Stage IDs":[],"Properties":{"spark.driver.port":"42423","spark.submit.pyFiles":"","spark.app.startTime":"1747554840211","spark.sql.catalogImplementation":"hive","spark.rdd.scope":"{\"id\":\"33\",\"name\":\"collect\"}","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","callSite.short":"toTable at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"065116dd-65ea-4cdb-a11d-6ca354fd88a6","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1747554753184","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/opt/spark/spark-events","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.execution.id":"4","spark.history.fs.logDirectory":"/opt/spark/spark-events","sql.streaming.queryId":"01827939-abd3-4a56-a45c-fa1ec7e4733b","spark.sql.warehouse.dir":"file:/opt/spark/warehouse","streaming.sql.batchId":"0","spark.rdd.scope.noOverride":"true","spark.executor.memory":"2g","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","spark.master":"spark://delta-streaming-spark-master:7077","spark.job.interruptOnCancel":"true","spark.executor.id":"driver","spark.app.name":"InvoicesStreamMedallion","spark.executor.cores":"4","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.driver.host":"163d156376d2","spark.log.level":"INFO","spark.app.id":"app-20250518075400-0005","spark.driver.memoryOverheadFactor":"0.1","spark.job.description":"ingestion_silver\nid = 01827939-abd3-4a56-a45c-fa1ec7e4733b\nrunId = 065116dd-65ea-4cdb-a11d-6ca354fd88a6\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"1","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerJobEnd","Job ID":2,"Completion Time":1747554856302,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":4,"time":1747554856305,"errorMessage":""}
{"Event":"SparkListenerJobStart","Job ID":3,"Submission Time":1747554856305,"Stage Infos":[],"Stage IDs":[],"Properties":{"spark.driver.port":"42423","spark.submit.pyFiles":"","spark.app.startTime":"1747554840211","spark.sql.catalogImplementation":"hive","spark.rdd.scope":"{\"id\":\"34\",\"name\":\"collect\"}","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","callSite.short":"toTable at NativeMethodAccessorImpl.java:0","__is_continuous_processing":"false","spark.jobGroup.id":"6fe779d0-8afe-459e-a1d8-537e0391e15e","spark.sql.requireAllClusterKeysForDistribution":"false","spark.app.submitTime":"1747554753184","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.sql.adaptive.enabled":"false","spark.eventLog.dir":"/opt/spark/spark-events","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.execution.id":"5","spark.history.fs.logDirectory":"/opt/spark/spark-events","sql.streaming.queryId":"5d289b4d-1b22-457d-8828-2e74638cb532","spark.sql.warehouse.dir":"file:/opt/spark/warehouse","streaming.sql.batchId":"0","spark.rdd.scope.noOverride":"true","spark.executor.memory":"2g","callSite.long":"org.apache.spark.sql.streaming.DataStreamWriter.toTable(DataStreamWriter.scala:331)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","spark.master":"spark://delta-streaming-spark-master:7077","spark.job.interruptOnCancel":"true","spark.executor.id":"driver","spark.app.name":"InvoicesStreamMedallion","spark.executor.cores":"4","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.driver.host":"163d156376d2","spark.log.level":"INFO","spark.app.id":"app-20250518075400-0005","spark.driver.memoryOverheadFactor":"0.1","spark.job.description":"ingestion_bronze\nid = 5d289b4d-1b22-457d-8828-2e74638cb532\nrunId = 6fe779d0-8afe-459e-a1d8-537e0391e15e\nbatch = 0","spark.eventLog.enabled":"true","spark.sql.cbo.enabled":"false","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"0","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerJobEnd","Job ID":3,"Completion Time":1747554856305,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":5,"time":1747554856307,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[95,4],[97,0]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[96,4],[98,0]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":0,"time":1747554856742,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":1,"time":1747554856742,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"5d289b4d-1b22-457d-8828-2e74638cb532","runId":"6fe779d0-8afe-459e-a1d8-537e0391e15e","name":"ingestion_bronze","timestamp":"2025-05-18T07:54:05.573Z","batchId":0,"batchDuration":11303,"durationMs":{"triggerExecution":11303,"queryPlanning":326,"getBatch":99,"commitOffsets":132,"latestOffset":286,"addBatch":10264,"walCommit":148},"eventTime":{},"stateOperators":[],"sources":[{"description":"FileStreamSource[file:/opt/spark/datasets/invoices/*.json]","startOffset":null,"endOffset":"{\"logOffset\":0}","latestOffset":null,"numInputRows":1601,"inputRowsPerSecond":0.0,"processedRowsPerSecond":141.6438113775104,"metrics":{}}],"sink":{"description":"DeltaSink[file:/opt/spark/warehouse/invoices_bronze]","numOutputRows":-1,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryProgressEvent","progress":{"id":"01827939-abd3-4a56-a45c-fa1ec7e4733b","runId":"065116dd-65ea-4cdb-a11d-6ca354fd88a6","name":"ingestion_silver","timestamp":"2025-05-18T07:54:06.090Z","batchId":0,"batchDuration":10786,"durationMs":{"triggerExecution":10786,"queryPlanning":182,"getBatch":56,"commitOffsets":132,"latestOffset":182,"addBatch":10087,"walCommit":129},"eventTime":{},"stateOperators":[],"sources":[{"description":"FileStreamSource[file:/opt/spark/datasets/invoices/*.json]","startOffset":null,"endOffset":"{\"logOffset\":0}","latestOffset":null,"numInputRows":1601,"inputRowsPerSecond":0.0,"processedRowsPerSecond":148.43315408863342,"metrics":{}}],"sink":{"description":"DeltaSink[file:/opt/spark/warehouse/invoices_silver]","numOutputRows":-1,"metrics":{}},"observedMetrics":{}}}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"01827939-abd3-4a56-a45c-fa1ec7e4733b","runId":"065116dd-65ea-4cdb-a11d-6ca354fd88a6","timestamp":"2025-05-18T07:54:26.891Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"5d289b4d-1b22-457d-8828-2e74638cb532","runId":"6fe779d0-8afe-459e-a1d8-537e0391e15e","timestamp":"2025-05-18T07:54:26.889Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"01827939-abd3-4a56-a45c-fa1ec7e4733b","runId":"065116dd-65ea-4cdb-a11d-6ca354fd88a6","timestamp":"2025-05-18T07:54:36.903Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"5d289b4d-1b22-457d-8828-2e74638cb532","runId":"6fe779d0-8afe-459e-a1d8-537e0391e15e","timestamp":"2025-05-18T07:54:36.903Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"5d289b4d-1b22-457d-8828-2e74638cb532","runId":"6fe779d0-8afe-459e-a1d8-537e0391e15e","timestamp":"2025-05-18T07:54:46.891Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"01827939-abd3-4a56-a45c-fa1ec7e4733b","runId":"065116dd-65ea-4cdb-a11d-6ca354fd88a6","timestamp":"2025-05-18T07:54:46.912Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"5d289b4d-1b22-457d-8828-2e74638cb532","runId":"6fe779d0-8afe-459e-a1d8-537e0391e15e","timestamp":"2025-05-18T07:54:56.922Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"01827939-abd3-4a56-a45c-fa1ec7e4733b","runId":"065116dd-65ea-4cdb-a11d-6ca354fd88a6","timestamp":"2025-05-18T07:54:56.943Z"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":7,"rootExecutionId":6,"description":"count at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (9)\n+- SerializeFromObject (8)\n   +- MapPartitions (7)\n      +- DeserializeToObject (6)\n         +- Project (5)\n            +- Sort (4)\n               +- Exchange (3)\n                  +- Project (2)\n                     +- Scan json  (1)\n\n\n(1) Scan json \nOutput [11]: [txn#1131, add#1132, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L]\nBatched: false\nLocation: DeltaLogFileIndex [file:/opt/spark/warehouse/invoices_bronze/_delta_log/00000000000000000000.json]\nReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(2) Project\nOutput [23]: [txn#1131, add#1132.path AS _extract_path#1303, add#1132.partitionValues AS _extract_partitionValues#1304, add#1132.size AS _extract_size#1305L, add#1132.modificationTime AS _extract_modificationTime#1306L, add#1132.dataChange AS _extract_dataChange#1307, add#1132.tags AS _extract_tags#1308, add#1132.deletionVector AS _extract_deletionVector#1309, add#1132.baseRowId AS _extract_baseRowId#1310L, add#1132.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1311L, add#1132.clusteringProvider AS _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add#1132.stats AS add_stats_to_use#1153, CASE WHEN isnotnull(add#1132.path) THEN UDF(add#1132.path) END AS add_path_canonical#1168, CASE WHEN isnotnull(remove#1133.path) THEN UDF(remove#1133.path) END AS remove_path_canonical#1187]\nInput [11]: [txn#1131, add#1132, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L]\n\n(3) Exchange\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\nArguments: hashpartitioning(coalesce(add_path_canonical#1168, remove_path_canonical#1187), 50), REPARTITION_BY_NUM, [plan_id=145]\n\n(4) Sort\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\nArguments: [version#1141L ASC NULLS FIRST], false, 0\n\n(5) Project\nOutput [10]: [txn#1131, CASE WHEN isnotnull(_extract_path#1303) THEN struct(path, add_path_canonical#1168, partitionValues, _extract_partitionValues#1304, size, _extract_size#1305L, modificationTime, _extract_modificationTime#1306L, dataChange, _extract_dataChange#1307, stats, add_stats_to_use#1153, tags, _extract_tags#1308, deletionVector, _extract_deletionVector#1309, baseRowId, _extract_baseRowId#1310L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1311L, clusteringProvider, _extract_clusteringProvider#1312) END AS add#1209, CASE WHEN isnotnull(remove#1133.path) THEN if (isnull(remove#1133)) null else named_struct(path, remove_path_canonical#1187, deletionTimestamp, remove#1133.deletionTimestamp, dataChange, remove#1133.dataChange, extendedFileMetadata, remove#1133.extendedFileMetadata, partitionValues, remove#1133.partitionValues, size, remove#1133.size, tags, remove#1133.tags, deletionVector, remove#1133.deletionVector, baseRowId, remove#1133.baseRowId, defaultRowCommitVersion, remove#1133.defaultRowCommitVersion, stats, remove#1133.stats) END AS remove#1234, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140]\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\n\n(6) DeserializeToObject\nInput [10]: [txn#1131, add#1209, remove#1234, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1281: org.apache.spark.sql.delta.actions.SingleAction\n\n(7) MapPartitions\nInput [1]: [obj#1281]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$5347/0x00007f343159ddc8@1a7b003f, obj#1282: org.apache.spark.sql.delta.actions.SingleAction\n\n(8) SerializeFromObject\nInput [1]: [obj#1282]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1283, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1284, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1285, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1286, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1287, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1288, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1289, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1290, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1291, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#1292]\n\n(9) AdaptiveSparkPlan\nOutput [10]: [txn#1283, add#1284, remove#1285, metaData#1286, protocol#1287, cdc#1288, checkpointMetadata#1289, sidecar#1290, domainMetadata#1291, commitInfo#1292]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1283, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1284, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1285, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1286, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1287, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1288, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1289, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1290, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1291, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#1292]","children":[{"nodeName":"MapPartitions","simpleString":"MapPartitions org.apache.spark.sql.delta.Snapshot$$Lambda$5347/0x00007f343159ddc8@1a7b003f, obj#1282: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1281: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"Project","simpleString":"Project [txn#1131, CASE WHEN isnotnull(_extract_path#1303) THEN struct(path, add_path_canonical#1168, partitionValues, _extract_partitionValues#1304, size, _extract_size#1305L, modificationTime, _extract_modificationTime#1306L, dataChange, _extract_dataChange#1307, stats, add_stats_to_use#1153, tags, _extract_tags#1308, deletionVector, _extract_deletionVector#1309, baseRowId, _extract_baseRowId#1310L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1311L, clusteringProvider, _extract_clusteringProvider#1312) END AS add#1209, CASE WHEN isnotnull(remove#1133.path) THEN if (isnull(remove#1133)) null else named_struct(path, remove_path_canonical#1187, deletionTimestamp, remove#1133.deletionTimestamp, dataChange, remove#1133.dataChange, extendedFileMetadata, remove#1133.extendedFileMetadata, partitionValues, remove#1133.partitionValues, size, remove#1133.size, tags, remove#1133.tags, deletionVector, remove#1133.deletionVector, baseRowId, remove#1133.baseRowId, defaultRowCommitVersion, remove#1133.defaultRowCommitVersion, stats, remove#1133.stats) END AS remove#1234, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140]","children":[{"nodeName":"Sort","simpleString":"Sort [version#1141L ASC NULLS FIRST], false, 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(coalesce(add_path_canonical#1168, remove_path_canonical#1187), 50), REPARTITION_BY_NUM, [plan_id=145]","children":[{"nodeName":"Project","simpleString":"Project [txn#1131, add#1132.path AS _extract_path#1303, add#1132.partitionValues AS _extract_partitionValues#1304, add#1132.size AS _extract_size#1305L, add#1132.modificationTime AS _extract_modificationTime#1306L, add#1132.dataChange AS _extract_dataChange#1307, add#1132.tags AS _extract_tags#1308, add#1132.deletionVector AS _extract_deletionVector#1309, add#1132.baseRowId AS _extract_baseRowId#1310L, add#1132.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1311L, add#1132.clusteringProvider AS _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add#1132.stats AS add_stats_to_use#1153, CASE WHEN isnotnull(add#1132.path) THEN UDF(add#1132.path) END AS add_path_canonical#1168, CASE WHEN isnotnull(remove#1133.path) THEN UDF(remove#1133.path) END AS remove_path_canonical#1187]","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [txn#1131,add#1132,remove#1133,metaData#1134,protocol#1135,cdc#1136,checkpointMetadata#1137,sidecar#1138,domainMetadata#1139,commitInfo#1140,version#1141L] Batched: false, DataFilters: [], Format: JSON, Location: DeltaLogFileIndex(1 paths)[file:/opt/spark/warehouse/invoices_bronze/_delta_log/00000000000000000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitio...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[file:/opt/spark/warehouse/invoices_bronze/_delta_log/00000000000000000000.json]","ReadSchema":"struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":131,"metricType":"sum"},{"name":"dynamic partition pruning time","accumulatorId":135,"metricType":"timing"},{"name":"metadata time","accumulatorId":132,"metricType":"timing"},{"name":"size of files read","accumulatorId":133,"metricType":"size"},{"name":"number of output rows","accumulatorId":130,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":134,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":128,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":122,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":129,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":123,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":120,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":117,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":126,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":119,"metricType":"sum"},{"name":"records read","accumulatorId":116,"metricType":"sum"},{"name":"local bytes read","accumulatorId":114,"metricType":"size"},{"name":"fetch wait time","accumulatorId":115,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":112,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":118,"metricType":"sum"},{"name":"local blocks read","accumulatorId":111,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":121,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":110,"metricType":"sum"},{"name":"data size","accumulatorId":108,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":124,"metricType":"size"},{"name":"number of partitions","accumulatorId":109,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":125,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":113,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":127,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":105,"metricType":"timing"},{"name":"peak memory","accumulatorId":106,"metricType":"size"},{"name":"spill size","accumulatorId":107,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]},"time":1747554902064,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":7,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (17)\n+- == Current Plan ==\n   SerializeFromObject (9)\n   +- MapPartitions (8)\n      +- DeserializeToObject (7)\n         +- Project (6)\n            +- Sort (5)\n               +- ShuffleQueryStage (4)\n                  +- Exchange (3)\n                     +- * Project (2)\n                        +- Scan json  (1)\n+- == Initial Plan ==\n   SerializeFromObject (16)\n   +- MapPartitions (15)\n      +- DeserializeToObject (14)\n         +- Project (13)\n            +- Sort (12)\n               +- Exchange (11)\n                  +- Project (10)\n                     +- Scan json  (1)\n\n\n(1) Scan json \nOutput [11]: [txn#1131, add#1132, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L]\nBatched: false\nLocation: DeltaLogFileIndex [file:/opt/spark/warehouse/invoices_bronze/_delta_log/00000000000000000000.json]\nReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(2) Project [codegen id : 1]\nOutput [23]: [txn#1131, add#1132.path AS _extract_path#1303, add#1132.partitionValues AS _extract_partitionValues#1304, add#1132.size AS _extract_size#1305L, add#1132.modificationTime AS _extract_modificationTime#1306L, add#1132.dataChange AS _extract_dataChange#1307, add#1132.tags AS _extract_tags#1308, add#1132.deletionVector AS _extract_deletionVector#1309, add#1132.baseRowId AS _extract_baseRowId#1310L, add#1132.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1311L, add#1132.clusteringProvider AS _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add#1132.stats AS add_stats_to_use#1153, CASE WHEN isnotnull(add#1132.path) THEN UDF(add#1132.path) END AS add_path_canonical#1168, CASE WHEN isnotnull(remove#1133.path) THEN UDF(remove#1133.path) END AS remove_path_canonical#1187]\nInput [11]: [txn#1131, add#1132, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L]\n\n(3) Exchange\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\nArguments: hashpartitioning(coalesce(add_path_canonical#1168, remove_path_canonical#1187), 50), REPARTITION_BY_NUM, [plan_id=160]\n\n(4) ShuffleQueryStage\nOutput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\nArguments: 0\n\n(5) Sort\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\nArguments: [version#1141L ASC NULLS FIRST], false, 0\n\n(6) Project\nOutput [10]: [txn#1131, CASE WHEN isnotnull(_extract_path#1303) THEN struct(path, add_path_canonical#1168, partitionValues, _extract_partitionValues#1304, size, _extract_size#1305L, modificationTime, _extract_modificationTime#1306L, dataChange, _extract_dataChange#1307, stats, add_stats_to_use#1153, tags, _extract_tags#1308, deletionVector, _extract_deletionVector#1309, baseRowId, _extract_baseRowId#1310L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1311L, clusteringProvider, _extract_clusteringProvider#1312) END AS add#1209, CASE WHEN isnotnull(remove#1133.path) THEN if (isnull(remove#1133)) null else named_struct(path, remove_path_canonical#1187, deletionTimestamp, remove#1133.deletionTimestamp, dataChange, remove#1133.dataChange, extendedFileMetadata, remove#1133.extendedFileMetadata, partitionValues, remove#1133.partitionValues, size, remove#1133.size, tags, remove#1133.tags, deletionVector, remove#1133.deletionVector, baseRowId, remove#1133.baseRowId, defaultRowCommitVersion, remove#1133.defaultRowCommitVersion, stats, remove#1133.stats) END AS remove#1234, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140]\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\n\n(7) DeserializeToObject\nInput [10]: [txn#1131, add#1209, remove#1234, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1281: org.apache.spark.sql.delta.actions.SingleAction\n\n(8) MapPartitions\nInput [1]: [obj#1281]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$5347/0x00007f343159ddc8@1a7b003f, obj#1282: org.apache.spark.sql.delta.actions.SingleAction\n\n(9) SerializeFromObject\nInput [1]: [obj#1282]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1283, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1284, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1285, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1286, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1287, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1288, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1289, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1290, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1291, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#1292]\n\n(10) Project\nOutput [23]: [txn#1131, add#1132.path AS _extract_path#1303, add#1132.partitionValues AS _extract_partitionValues#1304, add#1132.size AS _extract_size#1305L, add#1132.modificationTime AS _extract_modificationTime#1306L, add#1132.dataChange AS _extract_dataChange#1307, add#1132.tags AS _extract_tags#1308, add#1132.deletionVector AS _extract_deletionVector#1309, add#1132.baseRowId AS _extract_baseRowId#1310L, add#1132.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1311L, add#1132.clusteringProvider AS _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add#1132.stats AS add_stats_to_use#1153, CASE WHEN isnotnull(add#1132.path) THEN UDF(add#1132.path) END AS add_path_canonical#1168, CASE WHEN isnotnull(remove#1133.path) THEN UDF(remove#1133.path) END AS remove_path_canonical#1187]\nInput [11]: [txn#1131, add#1132, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L]\n\n(11) Exchange\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\nArguments: hashpartitioning(coalesce(add_path_canonical#1168, remove_path_canonical#1187), 50), REPARTITION_BY_NUM, [plan_id=145]\n\n(12) Sort\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\nArguments: [version#1141L ASC NULLS FIRST], false, 0\n\n(13) Project\nOutput [10]: [txn#1131, CASE WHEN isnotnull(_extract_path#1303) THEN struct(path, add_path_canonical#1168, partitionValues, _extract_partitionValues#1304, size, _extract_size#1305L, modificationTime, _extract_modificationTime#1306L, dataChange, _extract_dataChange#1307, stats, add_stats_to_use#1153, tags, _extract_tags#1308, deletionVector, _extract_deletionVector#1309, baseRowId, _extract_baseRowId#1310L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1311L, clusteringProvider, _extract_clusteringProvider#1312) END AS add#1209, CASE WHEN isnotnull(remove#1133.path) THEN if (isnull(remove#1133)) null else named_struct(path, remove_path_canonical#1187, deletionTimestamp, remove#1133.deletionTimestamp, dataChange, remove#1133.dataChange, extendedFileMetadata, remove#1133.extendedFileMetadata, partitionValues, remove#1133.partitionValues, size, remove#1133.size, tags, remove#1133.tags, deletionVector, remove#1133.deletionVector, baseRowId, remove#1133.baseRowId, defaultRowCommitVersion, remove#1133.defaultRowCommitVersion, stats, remove#1133.stats) END AS remove#1234, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140]\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\n\n(14) DeserializeToObject\nInput [10]: [txn#1131, add#1209, remove#1234, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1281: org.apache.spark.sql.delta.actions.SingleAction\n\n(15) MapPartitions\nInput [1]: [obj#1281]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$5347/0x00007f343159ddc8@1a7b003f, obj#1282: org.apache.spark.sql.delta.actions.SingleAction\n\n(16) SerializeFromObject\nInput [1]: [obj#1282]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1283, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1284, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1285, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1286, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1287, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1288, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1289, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1290, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1291, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#1292]\n\n(17) AdaptiveSparkPlan\nOutput [10]: [txn#1283, add#1284, remove#1285, metaData#1286, protocol#1287, cdc#1288, checkpointMetadata#1289, sidecar#1290, domainMetadata#1291, commitInfo#1292]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1283, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1284, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1285, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1286, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1287, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1288, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1289, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1290, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1291, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#1292]","children":[{"nodeName":"MapPartitions","simpleString":"MapPartitions org.apache.spark.sql.delta.Snapshot$$Lambda$5347/0x00007f343159ddc8@1a7b003f, obj#1282: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1281: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"Project","simpleString":"Project [txn#1131, CASE WHEN isnotnull(_extract_path#1303) THEN struct(path, add_path_canonical#1168, partitionValues, _extract_partitionValues#1304, size, _extract_size#1305L, modificationTime, _extract_modificationTime#1306L, dataChange, _extract_dataChange#1307, stats, add_stats_to_use#1153, tags, _extract_tags#1308, deletionVector, _extract_deletionVector#1309, baseRowId, _extract_baseRowId#1310L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1311L, clusteringProvider, _extract_clusteringProvider#1312) END AS add#1209, CASE WHEN isnotnull(remove#1133.path) THEN if (isnull(remove#1133)) null else named_struct(path, remove_path_canonical#1187, deletionTimestamp, remove#1133.deletionTimestamp, dataChange, remove#1133.dataChange, extendedFileMetadata, remove#1133.extendedFileMetadata, partitionValues, remove#1133.partitionValues, size, remove#1133.size, tags, remove#1133.tags, deletionVector, remove#1133.deletionVector, baseRowId, remove#1133.baseRowId, defaultRowCommitVersion, remove#1133.defaultRowCommitVersion, stats, remove#1133.stats) END AS remove#1234, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140]","children":[{"nodeName":"Sort","simpleString":"Sort [version#1141L ASC NULLS FIRST], false, 0","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(coalesce(add_path_canonical#1168, remove_path_canonical#1187), 50), REPARTITION_BY_NUM, [plan_id=160]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [txn#1131, add#1132.path AS _extract_path#1303, add#1132.partitionValues AS _extract_partitionValues#1304, add#1132.size AS _extract_size#1305L, add#1132.modificationTime AS _extract_modificationTime#1306L, add#1132.dataChange AS _extract_dataChange#1307, add#1132.tags AS _extract_tags#1308, add#1132.deletionVector AS _extract_deletionVector#1309, add#1132.baseRowId AS _extract_baseRowId#1310L, add#1132.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1311L, add#1132.clusteringProvider AS _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add#1132.stats AS add_stats_to_use#1153, CASE WHEN isnotnull(add#1132.path) THEN UDF(add#1132.path) END AS add_path_canonical#1168, CASE WHEN isnotnull(remove#1133.path) THEN UDF(remove#1133.path) END AS remove_path_canonical#1187]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [txn#1131,add#1132,remove#1133,metaData#1134,protocol#1135,cdc#1136,checkpointMetadata#1137,sidecar#1138,domainMetadata#1139,commitInfo#1140,version#1141L] Batched: false, DataFilters: [], Format: JSON, Location: DeltaLogFileIndex(1 paths)[file:/opt/spark/warehouse/invoices_bronze/_delta_log/00000000000000000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitio...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[file:/opt/spark/warehouse/invoices_bronze/_delta_log/00000000000000000000.json]","ReadSchema":"struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":131,"metricType":"sum"},{"name":"dynamic partition pruning time","accumulatorId":135,"metricType":"timing"},{"name":"metadata time","accumulatorId":132,"metricType":"timing"},{"name":"size of files read","accumulatorId":133,"metricType":"size"},{"name":"number of output rows","accumulatorId":130,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":134,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":161,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":159,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":153,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":160,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":154,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":151,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":148,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":157,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":150,"metricType":"sum"},{"name":"records read","accumulatorId":147,"metricType":"sum"},{"name":"local bytes read","accumulatorId":145,"metricType":"size"},{"name":"fetch wait time","accumulatorId":146,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":143,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":149,"metricType":"sum"},{"name":"local blocks read","accumulatorId":142,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":152,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":141,"metricType":"sum"},{"name":"data size","accumulatorId":139,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":155,"metricType":"size"},{"name":"number of partitions","accumulatorId":140,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":156,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":144,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":158,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":136,"metricType":"timing"},{"name":"peak memory","accumulatorId":137,"metricType":"size"},{"name":"spill size","accumulatorId":138,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":7,"accumUpdates":[[131,1],[135,0],[132,0],[133,9925],[134,1]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":7,"accumUpdates":[[140,50]]}
{"Event":"SparkListenerJobStart","Job ID":4,"Submission Time":1747554902263,"Stage Infos":[{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"44\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"48\",\"name\":\"Scan json \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"45\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"FileScanRDD","Scope":"{\"id\":\"48\",\"name\":\"Scan json \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[2],"Properties":{"spark.driver.port":"42423","spark.submit.pyFiles":"","spark.app.startTime":"1747554840211","spark.sql.catalogImplementation":"hive","spark.rdd.scope":"{\"id\":\"44\",\"name\":\"Exchange\"}","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.app.submitTime":"1747554753184","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"/opt/spark/spark-events","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"/opt/spark/spark-events","spark.sql.warehouse.dir":"file:/opt/spark/warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"2g","spark.master":"spark://delta-streaming-spark-master:7077","spark.executor.id":"driver","spark.app.name":"InvoicesStreamMedallion","spark.executor.cores":"4","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.driver.host":"163d156376d2","spark.log.level":"INFO","spark.app.id":"app-20250518075400-0005","spark.driver.memoryOverheadFactor":"0.1","spark.eventLog.enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"44\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"48\",\"name\":\"Scan json \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"45\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"FileScanRDD","Scope":"{\"id\":\"48\",\"name\":\"Scan json \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1747554902266,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"42423","spark.submit.pyFiles":"","spark.app.startTime":"1747554840211","spark.sql.catalogImplementation":"hive","spark.rdd.scope":"{\"id\":\"44\",\"name\":\"Exchange\"}","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.app.submitTime":"1747554753184","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"/opt/spark/spark-events","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.execution.id":"7","spark.history.fs.logDirectory":"/opt/spark/spark-events","spark.sql.warehouse.dir":"file:/opt/spark/warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"2g","spark.master":"spark://delta-streaming-spark-master:7077","spark.executor.id":"driver","spark.app.name":"InvoicesStreamMedallion","spark.executor.cores":"4","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.driver.host":"163d156376d2","spark.log.level":"INFO","spark.app.id":"app-20250518075400-0005","spark.driver.memoryOverheadFactor":"0.1","resource.executor.cores":"4","spark.eventLog.enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":8,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1747554902281,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":8,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1747554902281,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554902758,"Failed":false,"Killed":false,"Accumulables":[{"ID":130,"Name":"number of output rows","Update":"8","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":139,"Name":"data size","Update":"10488","Value":"10488","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":158,"Name":"shuffle bytes written","Update":"5157","Value":"5157","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":159,"Name":"shuffle records written","Update":"8","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":160,"Name":"shuffle write time","Update":"17165850","Value":"17165850","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":161,"Name":"duration","Update":"168","Value":"168","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":162,"Name":"internal.metrics.executorDeserializeTime","Update":137,"Value":137,"Internal":true,"Count Failed Values":true},{"ID":163,"Name":"internal.metrics.executorDeserializeCpuTime","Update":112454300,"Value":112454300,"Internal":true,"Count Failed Values":true},{"ID":164,"Name":"internal.metrics.executorRunTime","Update":318,"Value":318,"Internal":true,"Count Failed Values":true},{"ID":165,"Name":"internal.metrics.executorCpuTime","Update":252599700,"Value":252599700,"Internal":true,"Count Failed Values":true},{"ID":166,"Name":"internal.metrics.resultSize","Update":1805,"Value":1805,"Internal":true,"Count Failed Values":true},{"ID":167,"Name":"internal.metrics.jvmGCTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":190,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":5157,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":191,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":8,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":192,"Name":"internal.metrics.shuffle.write.writeTime","Update":17165850,"Value":17165850,"Internal":true,"Count Failed Values":true},{"ID":193,"Name":"internal.metrics.input.bytesRead","Update":10017,"Value":10017,"Internal":true,"Count Failed Values":true},{"ID":194,"Name":"internal.metrics.input.recordsRead","Update":8,"Value":8,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":137,"Executor Deserialize CPU Time":112454300,"Executor Run Time":318,"Executor CPU Time":252599700,"Peak Execution Memory":0,"Result Size":1805,"JVM GC Time":7,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":5157,"Shuffle Write Time":17165850,"Shuffle Records Written":8},"Input Metrics":{"Bytes Read":10017,"Records Read":8},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"44\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"48\",\"name\":\"Scan json \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"45\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"FileScanRDD","Scope":"{\"id\":\"48\",\"name\":\"Scan json \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1747554902266,"Completion Time":1747554902761,"Accumulables":[{"ID":130,"Name":"number of output rows","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":139,"Name":"data size","Value":"10488","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":158,"Name":"shuffle bytes written","Value":"5157","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":159,"Name":"shuffle records written","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":160,"Name":"shuffle write time","Value":"17165850","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":161,"Name":"duration","Value":"168","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":162,"Name":"internal.metrics.executorDeserializeTime","Value":137,"Internal":true,"Count Failed Values":true},{"ID":163,"Name":"internal.metrics.executorDeserializeCpuTime","Value":112454300,"Internal":true,"Count Failed Values":true},{"ID":164,"Name":"internal.metrics.executorRunTime","Value":318,"Internal":true,"Count Failed Values":true},{"ID":165,"Name":"internal.metrics.executorCpuTime","Value":252599700,"Internal":true,"Count Failed Values":true},{"ID":166,"Name":"internal.metrics.resultSize","Value":1805,"Internal":true,"Count Failed Values":true},{"ID":167,"Name":"internal.metrics.jvmGCTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":190,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":5157,"Internal":true,"Count Failed Values":true},{"ID":191,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":8,"Internal":true,"Count Failed Values":true},{"ID":192,"Name":"internal.metrics.shuffle.write.writeTime","Value":17165850,"Internal":true,"Count Failed Values":true},{"ID":193,"Name":"internal.metrics.input.bytesRead","Value":10017,"Internal":true,"Count Failed Values":true},{"ID":194,"Name":"internal.metrics.input.recordsRead","Value":8,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":4,"Completion Time":1747554902766,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":7,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (17)\n+- == Final Plan ==\n   * SerializeFromObject (9)\n   +- MapPartitions (8)\n      +- DeserializeToObject (7)\n         +- * Project (6)\n            +- * Sort (5)\n               +- ShuffleQueryStage (4), Statistics(sizeInBytes=10.2 KiB, rowCount=8)\n                  +- Exchange (3)\n                     +- * Project (2)\n                        +- Scan json  (1)\n+- == Initial Plan ==\n   SerializeFromObject (16)\n   +- MapPartitions (15)\n      +- DeserializeToObject (14)\n         +- Project (13)\n            +- Sort (12)\n               +- Exchange (11)\n                  +- Project (10)\n                     +- Scan json  (1)\n\n\n(1) Scan json \nOutput [11]: [txn#1131, add#1132, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L]\nBatched: false\nLocation: DeltaLogFileIndex [file:/opt/spark/warehouse/invoices_bronze/_delta_log/00000000000000000000.json]\nReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>\n\n(2) Project [codegen id : 1]\nOutput [23]: [txn#1131, add#1132.path AS _extract_path#1303, add#1132.partitionValues AS _extract_partitionValues#1304, add#1132.size AS _extract_size#1305L, add#1132.modificationTime AS _extract_modificationTime#1306L, add#1132.dataChange AS _extract_dataChange#1307, add#1132.tags AS _extract_tags#1308, add#1132.deletionVector AS _extract_deletionVector#1309, add#1132.baseRowId AS _extract_baseRowId#1310L, add#1132.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1311L, add#1132.clusteringProvider AS _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add#1132.stats AS add_stats_to_use#1153, CASE WHEN isnotnull(add#1132.path) THEN UDF(add#1132.path) END AS add_path_canonical#1168, CASE WHEN isnotnull(remove#1133.path) THEN UDF(remove#1133.path) END AS remove_path_canonical#1187]\nInput [11]: [txn#1131, add#1132, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L]\n\n(3) Exchange\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\nArguments: hashpartitioning(coalesce(add_path_canonical#1168, remove_path_canonical#1187), 50), REPARTITION_BY_NUM, [plan_id=160]\n\n(4) ShuffleQueryStage\nOutput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\nArguments: 0\n\n(5) Sort [codegen id : 2]\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\nArguments: [version#1141L ASC NULLS FIRST], false, 0\n\n(6) Project [codegen id : 2]\nOutput [10]: [txn#1131, CASE WHEN isnotnull(_extract_path#1303) THEN struct(path, add_path_canonical#1168, partitionValues, _extract_partitionValues#1304, size, _extract_size#1305L, modificationTime, _extract_modificationTime#1306L, dataChange, _extract_dataChange#1307, stats, add_stats_to_use#1153, tags, _extract_tags#1308, deletionVector, _extract_deletionVector#1309, baseRowId, _extract_baseRowId#1310L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1311L, clusteringProvider, _extract_clusteringProvider#1312) END AS add#1209, CASE WHEN isnotnull(remove#1133.path) THEN if (isnull(remove#1133)) null else named_struct(path, remove_path_canonical#1187, deletionTimestamp, remove#1133.deletionTimestamp, dataChange, remove#1133.dataChange, extendedFileMetadata, remove#1133.extendedFileMetadata, partitionValues, remove#1133.partitionValues, size, remove#1133.size, tags, remove#1133.tags, deletionVector, remove#1133.deletionVector, baseRowId, remove#1133.baseRowId, defaultRowCommitVersion, remove#1133.defaultRowCommitVersion, stats, remove#1133.stats) END AS remove#1234, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140]\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\n\n(7) DeserializeToObject\nInput [10]: [txn#1131, add#1209, remove#1234, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1281: org.apache.spark.sql.delta.actions.SingleAction\n\n(8) MapPartitions\nInput [1]: [obj#1281]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$5347/0x00007f343159ddc8@1a7b003f, obj#1282: org.apache.spark.sql.delta.actions.SingleAction\n\n(9) SerializeFromObject [codegen id : 3]\nInput [1]: [obj#1282]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1283, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1284, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1285, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1286, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1287, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1288, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1289, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1290, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1291, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#1292]\n\n(10) Project\nOutput [23]: [txn#1131, add#1132.path AS _extract_path#1303, add#1132.partitionValues AS _extract_partitionValues#1304, add#1132.size AS _extract_size#1305L, add#1132.modificationTime AS _extract_modificationTime#1306L, add#1132.dataChange AS _extract_dataChange#1307, add#1132.tags AS _extract_tags#1308, add#1132.deletionVector AS _extract_deletionVector#1309, add#1132.baseRowId AS _extract_baseRowId#1310L, add#1132.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1311L, add#1132.clusteringProvider AS _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add#1132.stats AS add_stats_to_use#1153, CASE WHEN isnotnull(add#1132.path) THEN UDF(add#1132.path) END AS add_path_canonical#1168, CASE WHEN isnotnull(remove#1133.path) THEN UDF(remove#1133.path) END AS remove_path_canonical#1187]\nInput [11]: [txn#1131, add#1132, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L]\n\n(11) Exchange\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\nArguments: hashpartitioning(coalesce(add_path_canonical#1168, remove_path_canonical#1187), 50), REPARTITION_BY_NUM, [plan_id=145]\n\n(12) Sort\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\nArguments: [version#1141L ASC NULLS FIRST], false, 0\n\n(13) Project\nOutput [10]: [txn#1131, CASE WHEN isnotnull(_extract_path#1303) THEN struct(path, add_path_canonical#1168, partitionValues, _extract_partitionValues#1304, size, _extract_size#1305L, modificationTime, _extract_modificationTime#1306L, dataChange, _extract_dataChange#1307, stats, add_stats_to_use#1153, tags, _extract_tags#1308, deletionVector, _extract_deletionVector#1309, baseRowId, _extract_baseRowId#1310L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1311L, clusteringProvider, _extract_clusteringProvider#1312) END AS add#1209, CASE WHEN isnotnull(remove#1133.path) THEN if (isnull(remove#1133)) null else named_struct(path, remove_path_canonical#1187, deletionTimestamp, remove#1133.deletionTimestamp, dataChange, remove#1133.dataChange, extendedFileMetadata, remove#1133.extendedFileMetadata, partitionValues, remove#1133.partitionValues, size, remove#1133.size, tags, remove#1133.tags, deletionVector, remove#1133.deletionVector, baseRowId, remove#1133.baseRowId, defaultRowCommitVersion, remove#1133.defaultRowCommitVersion, stats, remove#1133.stats) END AS remove#1234, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140]\nInput [23]: [txn#1131, _extract_path#1303, _extract_partitionValues#1304, _extract_size#1305L, _extract_modificationTime#1306L, _extract_dataChange#1307, _extract_tags#1308, _extract_deletionVector#1309, _extract_baseRowId#1310L, _extract_defaultRowCommitVersion#1311L, _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add_stats_to_use#1153, add_path_canonical#1168, remove_path_canonical#1187]\n\n(14) DeserializeToObject\nInput [10]: [txn#1131, add#1209, remove#1234, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140]\nArguments: newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1281: org.apache.spark.sql.delta.actions.SingleAction\n\n(15) MapPartitions\nInput [1]: [obj#1281]\nArguments: org.apache.spark.sql.delta.Snapshot$$Lambda$5347/0x00007f343159ddc8@1a7b003f, obj#1282: org.apache.spark.sql.delta.actions.SingleAction\n\n(16) SerializeFromObject\nInput [1]: [obj#1282]\nArguments: [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1283, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1284, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1285, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1286, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1287, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1288, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1289, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1290, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1291, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#1292]\n\n(17) AdaptiveSparkPlan\nOutput [10]: [txn#1283, add#1284, remove#1285, metaData#1286, protocol#1287, cdc#1288, checkpointMetadata#1289, sidecar#1290, domainMetadata#1291, commitInfo#1292]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (3)","simpleString":"WholeStageCodegen (3)","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn)) null else named_struct(appId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).appId, true, false, true), version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).version, lastUpdated, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).txn).lastUpdated)) AS txn#1283, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).size, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).modificationTime, dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).dataChange, stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).stats, true, false, true), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).defaultRowCommitVersion), clusteringProvider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).add).clusteringProvider), true, false, true)) AS add#1284, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).path, true, false, true), deletionTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionTimestamp), dataChange, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).dataChange, extendedFileMetadata, unwrapoption(BooleanType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).extendedFileMetadata), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -5), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -6), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).partitionValues), size, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).size), tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -7), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -8), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).tags), deletionVector, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).deletionVector).maxRowIndex)), baseRowId, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).baseRowId), defaultRowCommitVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).defaultRowCommitVersion), stats, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).remove).stats, true, false, true)) AS remove#1285, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData)) null else named_struct(id, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).id, true, false, true), name, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).name, true, false, true), description, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).description, true, false, true), format, if (isnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format)) null else named_struct(provider, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).provider, true, false, true), options, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -9), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -10), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).format).options)), schemaString, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).schemaString, true, false, true), partitionColumns, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -11), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).partitionColumns, None), configuration, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -12), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -13), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).configuration), createdTime, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).metaData).createdTime)) AS metaData#1286, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol)) null else named_struct(minReaderVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minReaderVersion, minWriterVersion, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).minWriterVersion, readerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -14), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).readerFeatures).toSeq, None), writerFeatures, mapobjects(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(MapObject, ObjectType(class java.lang.Object), true, -15), StringType, ObjectType(class java.lang.String)), true, false, true), unwrapoption(ObjectType(interface scala.collection.immutable.Set), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).protocol).writerFeatures).toSeq, None)) AS protocol#1287, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).path, true, false, true), partitionValues, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -16), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -17), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).partitionValues), size, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).size, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -18), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -19), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).cdc).tags)) AS cdc#1288, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata)) null else named_struct(version, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).version, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -20), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -21), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).checkpointMetadata).tags)) AS checkpointMetadata#1289, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar)) null else named_struct(path, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).path, true, false, true), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).sizeInBytes, modificationTime, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).modificationTime, tags, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -22), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -23), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).sidecar).tags)) AS sidecar#1290, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata)) null else named_struct(domain, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).domain, true, false, true), configuration, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).configuration, true, false, true), removed, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).domainMetadata).removed) AS domainMetadata#1291, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo)) null else named_struct(version, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).version), inCommitTimestamp, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).inCommitTimestamp), timestamp, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, TimestampType, fromJavaTimestamp, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).timestamp, true, false, true), userId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userId), true, false, true), userName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).userName), true, false, true), operation, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operation, true, false, true), operationParameters, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -24), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -25), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).operationParameters), job, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job))) null else named_struct(jobId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobId, true, false, true), jobName, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobName, true, false, true), jobRunId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobRunId, true, false, true), runId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).runId, true, false, true), jobOwnerId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).jobOwnerId, true, false, true), triggerType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.JobInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).job)).triggerType, true, false, true)), notebook, if (isnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook))) null else named_struct(notebookId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(unwrapoption(ObjectType(class org.apache.spark.sql.delta.actions.NotebookInfo), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).notebook)).notebookId, true, false, true)), clusterId, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).clusterId), true, false, true), readVersion, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).readVersion), isolationLevel, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.SingleAction, true])).commitInfo).isolationLevel), true, false, true), ... 12 more fields) AS commitInfo#1292]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"MapPartitions","simpleString":"MapPartitions org.apache.spark.sql.delta.Snapshot$$Lambda$5347/0x00007f343159ddc8@1a7b003f, obj#1282: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class org.apache.spark.sql.delta.actions.SingleAction), obj#1281: org.apache.spark.sql.delta.actions.SingleAction","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"Project","simpleString":"Project [txn#1131, CASE WHEN isnotnull(_extract_path#1303) THEN struct(path, add_path_canonical#1168, partitionValues, _extract_partitionValues#1304, size, _extract_size#1305L, modificationTime, _extract_modificationTime#1306L, dataChange, _extract_dataChange#1307, stats, add_stats_to_use#1153, tags, _extract_tags#1308, deletionVector, _extract_deletionVector#1309, baseRowId, _extract_baseRowId#1310L, defaultRowCommitVersion, _extract_defaultRowCommitVersion#1311L, clusteringProvider, _extract_clusteringProvider#1312) END AS add#1209, CASE WHEN isnotnull(remove#1133.path) THEN if (isnull(remove#1133)) null else named_struct(path, remove_path_canonical#1187, deletionTimestamp, remove#1133.deletionTimestamp, dataChange, remove#1133.dataChange, extendedFileMetadata, remove#1133.extendedFileMetadata, partitionValues, remove#1133.partitionValues, size, remove#1133.size, tags, remove#1133.tags, deletionVector, remove#1133.deletionVector, baseRowId, remove#1133.baseRowId, defaultRowCommitVersion, remove#1133.defaultRowCommitVersion, stats, remove#1133.stats) END AS remove#1234, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140]","children":[{"nodeName":"Sort","simpleString":"Sort [version#1141L ASC NULLS FIRST], false, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(coalesce(add_path_canonical#1168, remove_path_canonical#1187), 50), REPARTITION_BY_NUM, [plan_id=160]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [txn#1131, add#1132.path AS _extract_path#1303, add#1132.partitionValues AS _extract_partitionValues#1304, add#1132.size AS _extract_size#1305L, add#1132.modificationTime AS _extract_modificationTime#1306L, add#1132.dataChange AS _extract_dataChange#1307, add#1132.tags AS _extract_tags#1308, add#1132.deletionVector AS _extract_deletionVector#1309, add#1132.baseRowId AS _extract_baseRowId#1310L, add#1132.defaultRowCommitVersion AS _extract_defaultRowCommitVersion#1311L, add#1132.clusteringProvider AS _extract_clusteringProvider#1312, remove#1133, metaData#1134, protocol#1135, cdc#1136, checkpointMetadata#1137, sidecar#1138, domainMetadata#1139, commitInfo#1140, version#1141L, add#1132.stats AS add_stats_to_use#1153, CASE WHEN isnotnull(add#1132.path) THEN UDF(add#1132.path) END AS add_path_canonical#1168, CASE WHEN isnotnull(remove#1133.path) THEN UDF(remove#1133.path) END AS remove_path_canonical#1187]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan json ","simpleString":"FileScan json [txn#1131,add#1132,remove#1133,metaData#1134,protocol#1135,cdc#1136,checkpointMetadata#1137,sidecar#1138,domainMetadata#1139,commitInfo#1140,version#1141L] Batched: false, DataFilters: [], Format: JSON, Location: DeltaLogFileIndex(1 paths)[file:/opt/spark/warehouse/invoices_bronze/_delta_log/00000000000000000..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitio...","children":[],"metadata":{"Location":"DeltaLogFileIndex(1 paths)[file:/opt/spark/warehouse/invoices_bronze/_delta_log/00000000000000000000.json]","ReadSchema":"struct<txn:struct<appId:string,version:bigint,lastUpdated:bigint>,add:struct<path:string,partitionValues:map<string,string>,size:bigint,modificationTime:bigint,dataChange:boolean,stats:string,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,clusteringProvider:string>,remove:struct<path:string,deletionTimestamp:bigint,dataChange:boolean,extendedFileMetadata:boolean,partitionValues:map<string,string>,size:bigint,tags:map<string,string>,deletionVector:struct<storageType:string,pathOrInlineDv:string,offset:int,sizeInBytes:int,cardinality:bigint,maxRowIndex:bigint>,baseRowId:bigint,defaultRowCommitVersion:bigint,stats:string>,metaData:struct<id:string,name:string,description:string,format:struct<provider:string,options:map<string,string>>,schemaString:string,partitionColumns:array<string>,configuration:map<string,string>,createdTime:bigint>,protocol:struct<minReaderVersion:int,minWriterVersion:int,readerFeatures:array<string>,writerFeatures:array<string>>,cdc:struct<path:string,partitionValues:map<string,string>,size:bigint,tags:map<string,string>>,checkpointMetadata:struct<version:bigint,tags:map<string,string>>,sidecar:struct<path:string,sizeInBytes:bigint,modificationTime:bigint,tags:map<string,string>>,domainMetadata:struct<domain:string,configuration:string,removed:boolean>,commitInfo:struct<version:bigint,inCommitTimestamp:bigint,timestamp:timestamp,userId:string,userName:string,operation:string,operationParameters:map<string,string>,job:struct<jobId:string,jobName:string,jobRunId:string,runId:string,jobOwnerId:string,triggerType:string>,notebook:struct<notebookId:string>,clusterId:string,readVersion:bigint,isolationLevel:string,isBlindAppend:boolean,operationMetrics:map<string,string>,userMetadata:string,tags:map<string,string>,engineInfo:string,txnId:string>>","Format":"JSON","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":131,"metricType":"sum"},{"name":"dynamic partition pruning time","accumulatorId":135,"metricType":"timing"},{"name":"metadata time","accumulatorId":132,"metricType":"timing"},{"name":"size of files read","accumulatorId":133,"metricType":"size"},{"name":"number of output rows","accumulatorId":130,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":134,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":161,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":159,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":153,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":160,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":154,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":151,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":148,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":157,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":150,"metricType":"sum"},{"name":"records read","accumulatorId":147,"metricType":"sum"},{"name":"local bytes read","accumulatorId":145,"metricType":"size"},{"name":"fetch wait time","accumulatorId":146,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":143,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":149,"metricType":"sum"},{"name":"local blocks read","accumulatorId":142,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":152,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":141,"metricType":"sum"},{"name":"data size","accumulatorId":139,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":155,"metricType":"size"},{"name":"number of partitions","accumulatorId":140,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":156,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":144,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":158,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":199,"metricType":"timing"},{"name":"peak memory","accumulatorId":200,"metricType":"size"},{"name":"spill size","accumulatorId":201,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":198,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":197,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":7,"time":1747554903317,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":8,"rootExecutionId":6,"description":"count at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nProject (7)\n+- * SerializeFromObject (6)\n   +- * MapElements (5)\n      +- * DeserializeToObject (4)\n         +- * Project (3)\n            +- * Filter (2)\n               +- * Scan ExistingRDD Delta Table State #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log (1)\n\n\n(1) Scan ExistingRDD Delta Table State #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log [codegen id : 1]\nOutput [10]: [txn#1283, add#1284, remove#1285, metaData#1286, protocol#1287, cdc#1288, checkpointMetadata#1289, sidecar#1290, domainMetadata#1291, commitInfo#1292]\nArguments: [txn#1283, add#1284, remove#1285, metaData#1286, protocol#1287, cdc#1288, checkpointMetadata#1289, sidecar#1290, domainMetadata#1291, commitInfo#1292], Delta Table State #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log MapPartitionsRDD[23] at count at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)\n\n(2) Filter [codegen id : 1]\nInput [10]: [txn#1283, add#1284, remove#1285, metaData#1286, protocol#1287, cdc#1288, checkpointMetadata#1289, sidecar#1290, domainMetadata#1291, commitInfo#1292]\nCondition : isnotnull(add#1284)\n\n(3) Project [codegen id : 1]\nOutput [1]: [add#1284]\nInput [10]: [txn#1283, add#1284, remove#1285, metaData#1286, protocol#1287, cdc#1288, checkpointMetadata#1289, sidecar#1290, domainMetadata#1291, commitInfo#1292]\n\n(4) DeserializeToObject [codegen id : 1]\nInput [1]: [add#1284]\nArguments: newInstance(class scala.Tuple1), obj#1369: scala.Tuple1\n\n(5) MapElements [codegen id : 1]\nInput [1]: [obj#1369]\nArguments: org.apache.spark.sql.Dataset$$Lambda$4848/0x00007f34314fb220@3f5c71f1, obj#1370: org.apache.spark.sql.delta.actions.AddFile\n\n(6) SerializeFromObject [codegen id : 1]\nInput [1]: [obj#1370]\nArguments: [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).path, true, false, true) AS path#1371, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).partitionValues) AS partitionValues#1372, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).size AS size#1373L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).modificationTime AS modificationTime#1374L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).dataChange AS dataChange#1375, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).stats, true, false, true) AS stats#1376, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).tags) AS tags#1377, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).maxRowIndex)) AS deletionVector#1378, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).baseRowId) AS baseRowId#1379L, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).defaultRowCommitVersion) AS defaultRowCommitVersion#1380L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).clusteringProvider), true, false, true) AS clusteringProvider#1381]\n\n(7) Project\nOutput [11]: [path#1371, partitionValues#1372, size#1373L, modificationTime#1374L, dataChange#1375, from_json(StructField(numRecords,LongType,true), StructField(minValues,StructType(StructField(InvoiceNumber,StringType,true),StructField(CreatedTime,LongType,true),StructField(StoreID,StringType,true),StructField(PosID,StringType,true),StructField(CashierID,StringType,true),StructField(CustomerType,StringType,true),StructField(CustomerCardNo,StringType,true),StructField(TotalAmount,DoubleType,true),StructField(NumberOfItems,LongType,true),StructField(PaymentMethod,StringType,true),StructField(TaxableAmount,DoubleType,true),StructField(CGST,DoubleType,true),StructField(SGST,DoubleType,true),StructField(CESS,DoubleType,true),StructField(DeliveryType,StringType,true),StructField(DeliveryAddress,StructType(StructField(AddressLine,StringType,true),StructField(City,StringType,true),StructField(ContactNumber,StringType,true),StructField(PinCode,StringType,true),StructField(State,StringType,true)),true)),true), StructField(maxValues,StructType(StructField(InvoiceNumber,StringType,true),StructField(CreatedTime,LongType,true),StructField(StoreID,StringType,true),StructField(PosID,StringType,true),StructField(CashierID,StringType,true),StructField(CustomerType,StringType,true),StructField(CustomerCardNo,StringType,true),StructField(TotalAmount,DoubleType,true),StructField(NumberOfItems,LongType,true),StructField(PaymentMethod,StringType,true),StructField(TaxableAmount,DoubleType,true),StructField(CGST,DoubleType,true),StructField(SGST,DoubleType,true),StructField(CESS,DoubleType,true),StructField(DeliveryType,StringType,true),StructField(DeliveryAddress,StructType(StructField(AddressLine,StringType,true),StructField(City,StringType,true),StructField(ContactNumber,StringType,true),StructField(PinCode,StringType,true),StructField(State,StringType,true)),true)),true), StructField(nullCount,StructType(StructField(InvoiceNumber,LongType,true),StructField(CreatedTime,LongType,true),StructField(StoreID,LongType,true),StructField(PosID,LongType,true),StructField(CashierID,LongType,true),StructField(CustomerType,LongType,true),StructField(CustomerCardNo,LongType,true),StructField(TotalAmount,LongType,true),StructField(NumberOfItems,LongType,true),StructField(PaymentMethod,LongType,true),StructField(TaxableAmount,LongType,true),StructField(CGST,LongType,true),StructField(SGST,LongType,true),StructField(CESS,LongType,true),StructField(DeliveryType,LongType,true),StructField(DeliveryAddress,StructType(StructField(AddressLine,LongType,true),StructField(City,LongType,true),StructField(ContactNumber,LongType,true),StructField(PinCode,LongType,true),StructField(State,LongType,true)),true),StructField(InvoiceLineItems,LongType,true)),true), stats#1376, Some(Etc/UTC)) AS stats#1394, tags#1377, deletionVector#1378, baseRowId#1379L, defaultRowCommitVersion#1380L, clusteringProvider#1381]\nInput [11]: [path#1371, partitionValues#1372, size#1373L, modificationTime#1374L, dataChange#1375, stats#1376, tags#1377, deletionVector#1378, baseRowId#1379L, defaultRowCommitVersion#1380L, clusteringProvider#1381]\n\n","sparkPlanInfo":{"nodeName":"Project","simpleString":"Project [path#1371, partitionValues#1372, size#1373L, modificationTime#1374L, dataChange#1375, from_json(StructField(numRecords,LongType,true), StructField(minValues,StructType(StructField(InvoiceNumber,StringType,true),StructField(CreatedTime,LongType,true),StructField(StoreID,StringType,true),StructField(PosID,StringType,true),StructField(CashierID,StringType,true),StructField(CustomerType,StringType,true),StructField(CustomerCardNo,StringType,true),StructField(TotalAmount,DoubleType,true),StructField(NumberOfItems,LongType,true),StructField(PaymentMethod,StringType,true),StructField(TaxableAmount,DoubleType,true),StructField(CGST,DoubleType,true),StructField(SGST,DoubleType,true),StructField(CESS,DoubleType,true),StructField(DeliveryType,StringType,true),StructField(DeliveryAddress,StructType(StructField(AddressLine,StringType,true),StructField(City,StringType,true),StructField(ContactNumber,StringType,true),StructField(PinCode,StringType,true),StructField(State,StringType,true)),true)),true), StructField(maxValues,StructType(StructField(InvoiceNumber,StringType,true),StructField(CreatedTime,LongType,true),StructField(StoreID,StringType,true),StructField(PosID,StringType,true),StructField(CashierID,StringType,true),StructField(CustomerType,StringType,true),StructField(CustomerCardNo,StringType,true),StructField(TotalAmount,DoubleType,true),StructField(NumberOfItems,LongType,true),StructField(PaymentMethod,StringType,true),StructField(TaxableAmount,DoubleType,true),StructField(CGST,DoubleType,true),StructField(SGST,DoubleType,true),StructField(CESS,DoubleType,true),StructField(DeliveryType,StringType,true),StructField(DeliveryAddress,StructType(StructField(AddressLine,StringType,true),StructField(City,StringType,true),StructField(ContactNumber,StringType,true),StructField(PinCode,StringType,true),StructField(State,StringType,true)),true)),true), StructField(nullCount,StructType(StructField(InvoiceNumber,LongType,true),StructField(CreatedTime,LongType,true),StructField(StoreID,LongType,true),StructField(PosID,LongType,true),StructField(CashierID,LongType,true),StructField(CustomerType,LongType,true),StructField(CustomerCardNo,LongType,true),StructField(TotalAmount,LongType,true),StructField(NumberOfItems,LongType,true),StructField(PaymentMethod,LongType,true),StructField(TaxableAmount,LongType,true),StructField(CGST,LongType,true),StructField(SGST,LongType,true),StructField(CESS,LongType,true),StructField(DeliveryType,LongType,true),StructField(DeliveryAddress,StructType(StructField(AddressLine,LongType,true),StructField(City,LongType,true),StructField(ContactNumber,LongType,true),StructField(PinCode,LongType,true),StructField(State,LongType,true)),true),StructField(InvoiceLineItems,LongType,true)),true), stats#1376, Some(Etc/UTC)) AS stats#1394, tags#1377, deletionVector#1378, baseRowId#1379L, defaultRowCommitVersion#1380L, clusteringProvider#1381]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"SerializeFromObject","simpleString":"SerializeFromObject [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).path, true, false, true) AS path#1371, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -1), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -2), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).partitionValues) AS partitionValues#1372, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).size AS size#1373L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).modificationTime AS modificationTime#1374L, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).dataChange AS dataChange#1375, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).stats, true, false, true) AS stats#1376, externalmaptocatalyst(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_key, ObjectType(class java.lang.Object), true, -3), StringType, ObjectType(class java.lang.String)), true, false, true), lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(lambdavariable(ExternalMapToCatalyst_value, ObjectType(class java.lang.Object), true, -4), StringType, ObjectType(class java.lang.String)), true, false, true), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).tags) AS tags#1377, if (isnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector)) null else named_struct(storageType, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).storageType, true, false, true), pathOrInlineDv, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).pathOrInlineDv, true, false, true), offset, unwrapoption(IntegerType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).offset), sizeInBytes, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).sizeInBytes, cardinality, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).cardinality, maxRowIndex, unwrapoption(LongType, knownnotnull(knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).deletionVector).maxRowIndex)) AS deletionVector#1378, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).baseRowId) AS baseRowId#1379L, unwrapoption(LongType, knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).defaultRowCommitVersion) AS defaultRowCommitVersion#1380L, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, unwrapoption(ObjectType(class java.lang.String), knownnotnull(assertnotnull(input[0, org.apache.spark.sql.delta.actions.AddFile, true])).clusteringProvider), true, false, true) AS clusteringProvider#1381]","children":[{"nodeName":"MapElements","simpleString":"MapElements org.apache.spark.sql.Dataset$$Lambda$4848/0x00007f34314fb220@3f5c71f1, obj#1370: org.apache.spark.sql.delta.actions.AddFile","children":[{"nodeName":"DeserializeToObject","simpleString":"DeserializeToObject newInstance(class scala.Tuple1), obj#1369: scala.Tuple1","children":[{"nodeName":"Project","simpleString":"Project [add#1284]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(add#1284)","children":[{"nodeName":"Scan ExistingRDD Delta Table State #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log","simpleString":"Scan ExistingRDD Delta Table State #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log[txn#1283,add#1284,remove#1285,metaData#1286,protocol#1287,cdc#1288,checkpointMetadata#1289,sidecar#1290,domainMetadata#1291,commitInfo#1292]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":204,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":203,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":202,"metricType":"timing"}]}],"metadata":{},"metrics":[]},"time":1747554903428,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":8,"time":1747554903475,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":9,"rootExecutionId":6,"description":"count at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (6)\n+- HashAggregate (5)\n   +- Exchange (4)\n      +- HashAggregate (3)\n         +- Project (2)\n            +- Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log (1)\n\n\n(1) Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log\nOutput [11]: [path#1371, partitionValues#1372, size#1373L, modificationTime#1374L, dataChange#1375, stats#1394, tags#1377, deletionVector#1378, baseRowId#1379L, defaultRowCommitVersion#1380L, clusteringProvider#1381]\nArguments: [path#1371, partitionValues#1372, size#1373L, modificationTime#1374L, dataChange#1375, stats#1394, tags#1377, deletionVector#1378, baseRowId#1379L, defaultRowCommitVersion#1380L, clusteringProvider#1381], Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log MapPartitionsRDD[27] at count at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)\n\n(2) Project\nOutput [2]: [stats#1394.numRecords AS _extract_numRecords#1430L, deletionVector#1378.cardinality AS _extract_cardinality#1431L]\nInput [11]: [path#1371, partitionValues#1372, size#1373L, modificationTime#1374L, dataChange#1375, stats#1394, tags#1377, deletionVector#1378, baseRowId#1379L, defaultRowCommitVersion#1380L, clusteringProvider#1381]\n\n(3) HashAggregate\nInput [2]: [_extract_numRecords#1430L, _extract_cardinality#1431L]\nKeys: []\nFunctions [3]: [partial_sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), partial_count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), partial_count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)]\nAggregate Attributes [3]: [sum#1432L, count#1433L, count#1434L]\nResults [3]: [sum#1435L, count#1436L, count#1437L]\n\n(4) Exchange\nInput [3]: [sum#1435L, count#1436L, count#1437L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=242]\n\n(5) HashAggregate\nInput [3]: [sum#1435L, count#1436L, count#1437L]\nKeys: []\nFunctions [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)]\nAggregate Attributes [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0)))#1417L, count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END)#1419L, count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)#1421L]\nResults [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0)))#1417L AS numLogicalRecords#1418L, count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END)#1419L AS missingNumRecords#1420L, count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)#1421L AS countNonEmptyFiles#1422L]\n\n(6) AdaptiveSparkPlan\nOutput [3]: [numLogicalRecords#1418L, missingNumRecords#1420L, countNonEmptyFiles#1422L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=242]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), partial_count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), partial_count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)])","children":[{"nodeName":"Project","simpleString":"Project [stats#1394.numRecords AS _extract_numRecords#1430L, deletionVector#1378.cardinality AS _extract_cardinality#1431L]","children":[{"nodeName":"Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log","simpleString":"Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log[path#1371,partitionValues#1372,size#1373L,modificationTime#1374L,dataChange#1375,stats#1394,tags#1377,deletionVector#1378,baseRowId#1379L,defaultRowCommitVersion#1380L,clusteringProvider#1381]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":239,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":235,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":236,"metricType":"timing"},{"name":"peak memory","accumulatorId":234,"metricType":"size"},{"name":"number of output rows","accumulatorId":233,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":238,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":237,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":231,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":225,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":232,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":226,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":223,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":220,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":229,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":222,"metricType":"sum"},{"name":"records read","accumulatorId":219,"metricType":"sum"},{"name":"local bytes read","accumulatorId":217,"metricType":"size"},{"name":"fetch wait time","accumulatorId":218,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":215,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":221,"metricType":"sum"},{"name":"local blocks read","accumulatorId":214,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":224,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":213,"metricType":"sum"},{"name":"data size","accumulatorId":211,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":227,"metricType":"size"},{"name":"number of partitions","accumulatorId":212,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":228,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":216,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":230,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":207,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":208,"metricType":"timing"},{"name":"peak memory","accumulatorId":206,"metricType":"size"},{"name":"number of output rows","accumulatorId":205,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":210,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":209,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1747554903552,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":9,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (9)\n+- == Current Plan ==\n   HashAggregate (6)\n   +- ShuffleQueryStage (5)\n      +- Exchange (4)\n         +- * HashAggregate (3)\n            +- * Project (2)\n               +- * Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log (1)\n+- == Initial Plan ==\n   HashAggregate (8)\n   +- Exchange (7)\n      +- HashAggregate (3)\n         +- Project (2)\n            +- Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log (1)\n\n\n(1) Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log [codegen id : 1]\nOutput [11]: [path#1371, partitionValues#1372, size#1373L, modificationTime#1374L, dataChange#1375, stats#1394, tags#1377, deletionVector#1378, baseRowId#1379L, defaultRowCommitVersion#1380L, clusteringProvider#1381]\nArguments: [path#1371, partitionValues#1372, size#1373L, modificationTime#1374L, dataChange#1375, stats#1394, tags#1377, deletionVector#1378, baseRowId#1379L, defaultRowCommitVersion#1380L, clusteringProvider#1381], Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log MapPartitionsRDD[27] at count at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)\n\n(2) Project [codegen id : 1]\nOutput [2]: [stats#1394.numRecords AS _extract_numRecords#1430L, deletionVector#1378.cardinality AS _extract_cardinality#1431L]\nInput [11]: [path#1371, partitionValues#1372, size#1373L, modificationTime#1374L, dataChange#1375, stats#1394, tags#1377, deletionVector#1378, baseRowId#1379L, defaultRowCommitVersion#1380L, clusteringProvider#1381]\n\n(3) HashAggregate [codegen id : 1]\nInput [2]: [_extract_numRecords#1430L, _extract_cardinality#1431L]\nKeys: []\nFunctions [3]: [partial_sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), partial_count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), partial_count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)]\nAggregate Attributes [3]: [sum#1432L, count#1433L, count#1434L]\nResults [3]: [sum#1435L, count#1436L, count#1437L]\n\n(4) Exchange\nInput [3]: [sum#1435L, count#1436L, count#1437L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=251]\n\n(5) ShuffleQueryStage\nOutput [3]: [sum#1435L, count#1436L, count#1437L]\nArguments: 0\n\n(6) HashAggregate\nInput [3]: [sum#1435L, count#1436L, count#1437L]\nKeys: []\nFunctions [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)]\nAggregate Attributes [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0)))#1417L, count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END)#1419L, count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)#1421L]\nResults [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0)))#1417L AS numLogicalRecords#1418L, count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END)#1419L AS missingNumRecords#1420L, count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)#1421L AS countNonEmptyFiles#1422L]\n\n(7) Exchange\nInput [3]: [sum#1435L, count#1436L, count#1437L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=242]\n\n(8) HashAggregate\nInput [3]: [sum#1435L, count#1436L, count#1437L]\nKeys: []\nFunctions [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)]\nAggregate Attributes [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0)))#1417L, count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END)#1419L, count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)#1421L]\nResults [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0)))#1417L AS numLogicalRecords#1418L, count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END)#1419L AS missingNumRecords#1420L, count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)#1421L AS countNonEmptyFiles#1422L]\n\n(9) AdaptiveSparkPlan\nOutput [3]: [numLogicalRecords#1418L, missingNumRecords#1420L, countNonEmptyFiles#1422L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=251]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), partial_count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), partial_count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)])","children":[{"nodeName":"Project","simpleString":"Project [stats#1394.numRecords AS _extract_numRecords#1430L, deletionVector#1378.cardinality AS _extract_cardinality#1431L]","children":[{"nodeName":"Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log","simpleString":"Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log[path#1371,partitionValues#1372,size#1373L,modificationTime#1374L,dataChange#1375,stats#1394,tags#1377,deletionVector#1378,baseRowId#1379L,defaultRowCommitVersion#1380L,clusteringProvider#1381]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":239,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":235,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":236,"metricType":"timing"},{"name":"peak memory","accumulatorId":234,"metricType":"size"},{"name":"number of output rows","accumulatorId":233,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":238,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":237,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":268,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":266,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":260,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":267,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":261,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":258,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":255,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":264,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":257,"metricType":"sum"},{"name":"records read","accumulatorId":254,"metricType":"sum"},{"name":"local bytes read","accumulatorId":252,"metricType":"size"},{"name":"fetch wait time","accumulatorId":253,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":250,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":256,"metricType":"sum"},{"name":"local blocks read","accumulatorId":249,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":259,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":248,"metricType":"sum"},{"name":"data size","accumulatorId":246,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":262,"metricType":"size"},{"name":"number of partitions","accumulatorId":247,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":263,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":251,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":265,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":242,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":243,"metricType":"timing"},{"name":"peak memory","accumulatorId":241,"metricType":"size"},{"name":"number of output rows","accumulatorId":240,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":245,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":244,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":9,"accumUpdates":[[247,1]]}
{"Event":"SparkListenerJobStart","Job ID":5,"Submission Time":1747554903630,"Stage Infos":[{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"44\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"48\",\"name\":\"Scan json \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"45\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"FileScanRDD","Scope":"{\"id\":\"48\",\"name\":\"Scan json \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":50,"RDD Info":[{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"54\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"71\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":23,"Name":"Delta Table State #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log","Scope":"{\"id\":\"60\",\"name\":\"map\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"62\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"59\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"Project\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"DeserializeToObject\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"SQLExecutionRDD","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"MapPartitions\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log","Scope":"{\"id\":\"69\",\"name\":\"map\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"49\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"SQLExecutionRDD","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[3],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[3,4],"Properties":{"spark.driver.port":"42423","spark.submit.pyFiles":"","spark.app.startTime":"1747554840211","spark.sql.catalogImplementation":"hive","spark.rdd.scope":"{\"id\":\"70\",\"name\":\"Exchange\"}","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.app.submitTime":"1747554753184","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"/opt/spark/spark-events","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.execution.id":"9","spark.history.fs.logDirectory":"/opt/spark/spark-events","spark.sql.warehouse.dir":"file:/opt/spark/warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"2g","spark.master":"spark://delta-streaming-spark-master:7077","spark.executor.id":"driver","spark.app.name":"InvoicesStreamMedallion","spark.executor.cores":"4","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.driver.host":"163d156376d2","spark.log.level":"INFO","spark.app.id":"app-20250518075400-0005","spark.driver.memoryOverheadFactor":"0.1","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":50,"RDD Info":[{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"54\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"71\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":23,"Name":"Delta Table State #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log","Scope":"{\"id\":\"60\",\"name\":\"map\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"62\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"59\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"Project\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"DeserializeToObject\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"SQLExecutionRDD","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"MapPartitions\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log","Scope":"{\"id\":\"69\",\"name\":\"map\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"49\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"SQLExecutionRDD","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[3],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1747554903643,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"42423","spark.submit.pyFiles":"","spark.app.startTime":"1747554840211","spark.sql.catalogImplementation":"hive","spark.rdd.scope":"{\"id\":\"70\",\"name\":\"Exchange\"}","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.app.submitTime":"1747554753184","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"/opt/spark/spark-events","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.execution.id":"9","spark.history.fs.logDirectory":"/opt/spark/spark-events","spark.sql.warehouse.dir":"file:/opt/spark/warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"2g","spark.master":"spark://delta-streaming-spark-master:7077","spark.executor.id":"driver","spark.app.name":"InvoicesStreamMedallion","spark.executor.cores":"4","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.driver.host":"163d156376d2","spark.log.level":"INFO","spark.app.id":"app-20250518075400-0005","spark.driver.memoryOverheadFactor":"0.1","resource.executor.cores":"4","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":9,"Index":22,"Attempt":0,"Partition ID":22,"Launch Time":1747554903678,"Executor ID":"1","Host":"172.18.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":10,"Index":27,"Attempt":0,"Partition ID":27,"Launch Time":1747554903680,"Executor ID":"1","Host":"172.18.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":11,"Index":34,"Attempt":0,"Partition ID":34,"Launch Time":1747554903681,"Executor ID":"1","Host":"172.18.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":12,"Index":42,"Attempt":0,"Partition ID":42,"Launch Time":1747554903682,"Executor ID":"1","Host":"172.18.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":13,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1747554903683,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":14,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1747554903684,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":15,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1747554903684,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":16,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1747554903684,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":17,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1747554903685,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":18,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1747554903686,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":19,"Index":6,"Attempt":0,"Partition ID":6,"Launch Time":1747554903686,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":20,"Index":7,"Attempt":0,"Partition ID":7,"Launch Time":1747554903687,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":21,"Index":45,"Attempt":0,"Partition ID":45,"Launch Time":1747554905591,"Executor ID":"1","Host":"172.18.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":22,"Index":8,"Attempt":0,"Partition ID":8,"Launch Time":1747554905596,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":12,"Index":42,"Attempt":0,"Partition ID":42,"Launch Time":1747554903682,"Executor ID":"1","Host":"172.18.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554905601,"Failed":false,"Killed":false,"Accumulables":[{"ID":142,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":145,"Name":"local bytes read","Update":"1227","Value":"1227","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":146,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":147,"Name":"records read","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":197,"Name":"duration","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"898","Value":"898","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"16842736","Value":"16842736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"92","Value":"92","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":204,"Name":"number of output rows","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"58","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"928730","Value":"928730","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":410,"Value":410,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":85511700,"Value":85511700,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":1479,"Value":1479,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":467943100,"Value":467943100,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":5295,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":64,"Value":64,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":16842736,"Value":16842736,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1227,"Value":1227,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":58,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":928730,"Value":928730,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":410,"Executor Deserialize CPU Time":85511700,"Executor Run Time":1479,"Executor CPU Time":467943100,"Peak Execution Memory":16842736,"Result Size":5295,"JVM GC Time":64,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1227,"Total Records Read":4,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":928730,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":9,"Index":22,"Attempt":0,"Partition ID":22,"Launch Time":1747554903678,"Executor ID":"1","Host":"172.18.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554905602,"Failed":false,"Killed":false,"Accumulables":[{"ID":142,"Name":"local blocks read","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":145,"Name":"local bytes read","Update":"954","Value":"2181","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":146,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":147,"Name":"records read","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":197,"Name":"duration","Update":"8","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"409","Value":"1307","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"16842736","Value":"33685472","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"104","Value":"196","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":203,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":204,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":239,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"64","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"66","Value":"124","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"988489","Value":"1917219","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"3","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":412,"Value":822,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":113049100,"Value":198560800,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":1480,"Value":2959,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":308226800,"Value":776169900,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":10590,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":64,"Value":128,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":16842736,"Value":33685472,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":954,"Value":2181,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":66,"Value":124,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":988489,"Value":1917219,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":412,"Executor Deserialize CPU Time":113049100,"Executor Run Time":1480,"Executor CPU Time":308226800,"Peak Execution Memory":16842736,"Result Size":5295,"JVM GC Time":64,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":954,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":66,"Shuffle Write Time":988489,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":23,"Index":9,"Attempt":0,"Partition ID":9,"Launch Time":1747554905604,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":10,"Index":27,"Attempt":0,"Partition ID":27,"Launch Time":1747554903680,"Executor ID":"1","Host":"172.18.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554905605,"Failed":false,"Killed":false,"Accumulables":[{"ID":142,"Name":"local blocks read","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":145,"Name":"local bytes read","Update":"1001","Value":"3182","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":146,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":147,"Name":"records read","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":197,"Name":"duration","Update":"7","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"412","Value":"1719","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"16842736","Value":"50528208","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"102","Value":"298","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":203,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":204,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":239,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"96","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"67","Value":"191","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"979666","Value":"2896885","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"3","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":411,"Value":1233,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":89652400,"Value":288213200,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":1480,"Value":4439,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":508071600,"Value":1284241500,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":15885,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":64,"Value":192,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":16842736,"Value":50528208,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1001,"Value":3182,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":67,"Value":191,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":979666,"Value":2896885,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":411,"Executor Deserialize CPU Time":89652400,"Executor Run Time":1480,"Executor CPU Time":508071600,"Peak Execution Memory":16842736,"Result Size":5295,"JVM GC Time":64,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":1001,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":67,"Shuffle Write Time":979666,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":11,"Index":34,"Attempt":0,"Partition ID":34,"Launch Time":1747554903681,"Executor ID":"1","Host":"172.18.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554905612,"Failed":false,"Killed":false,"Accumulables":[{"ID":142,"Name":"local blocks read","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":145,"Name":"local bytes read","Update":"988","Value":"4170","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":146,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":147,"Name":"records read","Update":"1","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":197,"Name":"duration","Update":"7","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"409","Value":"2128","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"16842736","Value":"67370944","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"112","Value":"410","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":203,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":204,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":239,"Name":"number of output rows","Update":"1","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"128","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"67","Value":"258","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"929255","Value":"3826140","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"7","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":416,"Value":1649,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":131514000,"Value":419727200,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":1482,"Value":5921,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":456273000,"Value":1740514500,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":21180,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":64,"Value":256,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":16842736,"Value":67370944,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":988,"Value":4170,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":67,"Value":258,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":929255,"Value":3826140,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":416,"Executor Deserialize CPU Time":131514000,"Executor Run Time":1482,"Executor CPU Time":456273000,"Peak Execution Memory":16842736,"Result Size":5295,"JVM GC Time":64,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":988,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":67,"Shuffle Write Time":929255,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":24,"Index":10,"Attempt":0,"Partition ID":10,"Launch Time":1747554905613,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":25,"Index":11,"Attempt":0,"Partition ID":11,"Launch Time":1747554905780,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":21,"Index":45,"Attempt":0,"Partition ID":45,"Launch Time":1747554905591,"Executor ID":"1","Host":"172.18.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554905782,"Failed":false,"Killed":false,"Accumulables":[{"ID":142,"Name":"local blocks read","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":145,"Name":"local bytes read","Update":"987","Value":"5157","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":146,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":147,"Name":"records read","Update":"1","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":197,"Name":"duration","Update":"0","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"83","Value":"2211","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"16842736","Value":"84213680","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"15","Value":"425","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":203,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":204,"Name":"number of output rows","Update":"1","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":239,"Name":"number of output rows","Update":"1","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"160","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"67","Value":"325","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"641699","Value":"4467839","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"1","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":34,"Value":1683,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":20267200,"Value":439994400,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":137,"Value":6058,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":88368100,"Value":1828882600,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":26432,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":16842736,"Value":84213680,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":987,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":67,"Value":325,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":641699,"Value":4467839,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":34,"Executor Deserialize CPU Time":20267200,"Executor Run Time":137,"Executor CPU Time":88368100,"Peak Execution Memory":16842736,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":987,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":67,"Shuffle Write Time":641699,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":26,"Index":12,"Attempt":0,"Partition ID":12,"Launch Time":1747554905797,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":23,"Index":9,"Attempt":0,"Partition ID":9,"Launch Time":1747554905604,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554905798,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"75","Value":"2286","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"84279216","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"11","Value":"436","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"192","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"383","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"1932132","Value":"6399971","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"1","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":34,"Value":1717,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":19241000,"Value":459235400,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":132,"Value":6190,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":80179200,"Value":1909061800,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":31684,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":84279216,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":383,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":1932132,"Value":6399971,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":34,"Executor Deserialize CPU Time":19241000,"Executor Run Time":132,"Executor CPU Time":80179200,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":1932132,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":27,"Index":13,"Attempt":0,"Partition ID":13,"Launch Time":1747554905814,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":22,"Index":8,"Attempt":0,"Partition ID":8,"Launch Time":1747554905596,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554905821,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"81","Value":"2367","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"84344752","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"17","Value":"453","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"224","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"441","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"426610","Value":"6826581","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":36,"Value":1753,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":18959700,"Value":478195100,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":146,"Value":6336,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":76347300,"Value":1985409100,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":36936,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":84344752,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":441,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":426610,"Value":6826581,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":36,"Executor Deserialize CPU Time":18959700,"Executor Run Time":146,"Executor CPU Time":76347300,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":426610,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":28,"Index":14,"Attempt":0,"Partition ID":14,"Launch Time":1747554905832,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":24,"Index":10,"Attempt":0,"Partition ID":10,"Launch Time":1747554905613,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554905834,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"1","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"75","Value":"2442","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"84410288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"17","Value":"470","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"256","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"499","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"1108635","Value":"7935216","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"3","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":34,"Value":1787,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":20162900,"Value":498358000,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":159,"Value":6495,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":82648600,"Value":2068057700,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":42188,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":84410288,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":499,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":1108635,"Value":7935216,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":34,"Executor Deserialize CPU Time":20162900,"Executor Run Time":159,"Executor CPU Time":82648600,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":1108635,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":29,"Index":15,"Attempt":0,"Partition ID":15,"Launch Time":1747554905931,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":25,"Index":11,"Attempt":0,"Partition ID":11,"Launch Time":1747554905780,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554905933,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"66","Value":"2508","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"84475824","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"10","Value":"480","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"557","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"9","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"477547","Value":"8412763","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":31,"Value":1818,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":18549900,"Value":516907900,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":108,"Value":6603,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":76637900,"Value":2144695600,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":47440,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":84475824,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":557,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":477547,"Value":8412763,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":403521808,"JVMOffHeapMemory":151762136,"OnHeapExecutionMemory":131072,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":2187312,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":2318384,"OffHeapUnifiedMemory":0,"DirectPoolMemory":21183468,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":17,"MinorGCTime":167,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":167},"Task Metrics":{"Executor Deserialize Time":31,"Executor Deserialize CPU Time":18549900,"Executor Run Time":108,"Executor CPU Time":76637900,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":477547,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":30,"Index":16,"Attempt":0,"Partition ID":16,"Launch Time":1747554905969,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":26,"Index":12,"Attempt":0,"Partition ID":12,"Launch Time":1747554905797,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554905971,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"65","Value":"2573","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"84541360","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"14","Value":"494","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"320","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"615","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"440261","Value":"8853024","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":33,"Value":1851,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":19710400,"Value":536618300,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":119,"Value":6722,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":72916200,"Value":2217611800,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":52735,"Internal":true,"Count Failed Values":true},{"ID":275,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":84541360,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":615,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":440261,"Value":8853024,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":403521808,"JVMOffHeapMemory":151762136,"OnHeapExecutionMemory":131072,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":2187312,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":2318384,"OffHeapUnifiedMemory":0,"DirectPoolMemory":21183468,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":17,"MinorGCTime":167,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":167},"Task Metrics":{"Executor Deserialize Time":33,"Executor Deserialize CPU Time":19710400,"Executor Run Time":119,"Executor CPU Time":72916200,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":440261,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":31,"Index":17,"Attempt":0,"Partition ID":17,"Launch Time":1747554905997,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":27,"Index":13,"Attempt":0,"Partition ID":13,"Launch Time":1747554905814,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554905999,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"70","Value":"2643","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"84606896","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"14","Value":"508","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"352","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"673","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"6642472","Value":"15495496","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":34,"Value":1885,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17367000,"Value":553985300,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":133,"Value":6855,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":80323700,"Value":2297935500,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":57987,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":84606896,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":673,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":6642472,"Value":15495496,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":403521808,"JVMOffHeapMemory":151762136,"OnHeapExecutionMemory":131072,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":2187312,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":2318384,"OffHeapUnifiedMemory":0,"DirectPoolMemory":21183468,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":17,"MinorGCTime":167,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":167},"Task Metrics":{"Executor Deserialize Time":34,"Executor Deserialize CPU Time":17367000,"Executor Run Time":133,"Executor CPU Time":80323700,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":6642472,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":32,"Index":18,"Attempt":0,"Partition ID":18,"Launch Time":1747554906009,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":28,"Index":14,"Attempt":0,"Partition ID":14,"Launch Time":1747554905832,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906011,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"84","Value":"2727","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"84672432","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"11","Value":"519","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"12","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"384","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"731","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"12","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"2288375","Value":"17783871","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":22,"Value":1907,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":18774200,"Value":572759500,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":144,"Value":6999,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":76965500,"Value":2374901000,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":63239,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":84672432,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":731,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":2288375,"Value":17783871,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":403521808,"JVMOffHeapMemory":151762136,"OnHeapExecutionMemory":131072,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":2187312,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":2318384,"OffHeapUnifiedMemory":0,"DirectPoolMemory":21183468,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":17,"MinorGCTime":167,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":167},"Task Metrics":{"Executor Deserialize Time":22,"Executor Deserialize CPU Time":18774200,"Executor Run Time":144,"Executor CPU Time":76965500,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":2288375,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":33,"Index":19,"Attempt":0,"Partition ID":19,"Launch Time":1747554906053,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":34,"Index":20,"Attempt":0,"Partition ID":20,"Launch Time":1747554906055,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":16,"Index":3,"Attempt":0,"Partition ID":3,"Launch Time":1747554903684,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906060,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"3","Value":"36","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"435","Value":"3162","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"84737968","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"90","Value":"609","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"416","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"789","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"20325138","Value":"38109009","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"57","Value":"78","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":589,"Value":2496,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":177677500,"Value":750437000,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":1757,"Value":8756,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":482411800,"Value":2857312800,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":68534,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":74,"Value":330,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":84737968,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":789,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":20325138,"Value":38109009,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":589,"Executor Deserialize CPU Time":177677500,"Executor Run Time":1757,"Executor CPU Time":482411800,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":74,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":20325138,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":35,"Index":21,"Attempt":0,"Partition ID":21,"Launch Time":1747554906062,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":36,"Index":23,"Attempt":0,"Partition ID":23,"Launch Time":1747554906064,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":20,"Index":7,"Attempt":0,"Partition ID":7,"Launch Time":1747554903687,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906073,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"4","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"435","Value":"3597","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"84803504","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"77","Value":"686","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"448","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"847","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"14","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"24678185","Value":"62787194","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"57","Value":"135","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":581,"Value":3077,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":163101600,"Value":913538600,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":1765,"Value":10521,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":329802100,"Value":3187114900,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5338,"Value":73872,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":74,"Value":404,"Internal":true,"Count Failed Values":true},{"ID":275,"Name":"internal.metrics.resultSerializationTime","Update":5,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":84803504,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":847,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":24678185,"Value":62787194,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":581,"Executor Deserialize CPU Time":163101600,"Executor Run Time":1765,"Executor CPU Time":329802100,"Peak Execution Memory":65536,"Result Size":5338,"JVM GC Time":74,"Result Serialization Time":5,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":24678185,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":18,"Index":5,"Attempt":0,"Partition ID":5,"Launch Time":1747554903686,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906074,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"36","Value":"76","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"433","Value":"4030","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"84869040","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"73","Value":"759","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"480","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"905","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"15","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"24592277","Value":"87379471","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"59","Value":"194","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":582,"Value":3659,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":176285200,"Value":1089823800,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":1763,"Value":12284,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":197148400,"Value":3384263300,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":79167,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":74,"Value":478,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":84869040,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":905,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":15,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":24592277,"Value":87379471,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":582,"Executor Deserialize CPU Time":176285200,"Executor Run Time":1763,"Executor CPU Time":197148400,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":74,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":24592277,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":14,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1747554903684,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906074,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"3","Value":"79","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"423","Value":"4453","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"84934576","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"83","Value":"842","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"512","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"963","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"20653445","Value":"108032916","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"58","Value":"252","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":583,"Value":4242,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":142489000,"Value":1232312800,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":1761,"Value":14045,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":581613500,"Value":3965876800,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":84462,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":74,"Value":552,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":84934576,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":963,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":20653445,"Value":108032916,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":583,"Executor Deserialize CPU Time":142489000,"Executor Run Time":1761,"Executor CPU Time":581613500,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":74,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":20653445,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":37,"Index":24,"Attempt":0,"Partition ID":24,"Launch Time":1747554906083,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":19,"Index":6,"Attempt":0,"Partition ID":6,"Launch Time":1747554903686,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906085,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"17","Value":"96","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"453","Value":"4906","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85000112","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"81","Value":"923","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"544","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1021","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"39850518","Value":"147883434","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"40","Value":"292","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":561,"Value":4803,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":170303300,"Value":1402616100,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":1799,"Value":15844,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":413593000,"Value":4379469800,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":89757,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":102,"Value":654,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85000112,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1021,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":17,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":39850518,"Value":147883434,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":561,"Executor Deserialize CPU Time":170303300,"Executor Run Time":1799,"Executor CPU Time":413593000,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":102,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":39850518,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":38,"Index":25,"Attempt":0,"Partition ID":25,"Launch Time":1747554906088,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":15,"Index":2,"Attempt":0,"Partition ID":2,"Launch Time":1747554903684,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906095,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"4","Value":"100","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"451","Value":"5357","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85065648","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"71","Value":"994","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"576","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1079","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"32805909","Value":"180689343","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"39","Value":"331","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":575,"Value":5378,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":121112200,"Value":1523728300,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":1796,"Value":17640,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":407335700,"Value":4786805500,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5338,"Value":95095,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":102,"Value":756,"Internal":true,"Count Failed Values":true},{"ID":275,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85065648,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1079,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":18,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":32805909,"Value":180689343,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":575,"Executor Deserialize CPU Time":121112200,"Executor Run Time":1796,"Executor CPU Time":407335700,"Peak Execution Memory":65536,"Result Size":5338,"JVM GC Time":102,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":32805909,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":39,"Index":26,"Attempt":0,"Partition ID":26,"Launch Time":1747554906100,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":40,"Index":28,"Attempt":0,"Partition ID":28,"Launch Time":1747554906102,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":13,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1747554903683,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906105,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"17","Value":"117","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"451","Value":"5808","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85131184","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"79","Value":"1073","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"19","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"608","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1137","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"19","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"35432043","Value":"216121386","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"31","Value":"362","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":573,"Value":5951,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":186178800,"Value":1709907100,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":1799,"Value":19439,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":203147400,"Value":4989952900,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5338,"Value":100433,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":102,"Value":858,"Internal":true,"Count Failed Values":true},{"ID":275,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85131184,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1137,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":19,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":35432043,"Value":216121386,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":573,"Executor Deserialize CPU Time":186178800,"Executor Run Time":1799,"Executor CPU Time":203147400,"Peak Execution Memory":65536,"Result Size":5338,"JVM GC Time":102,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":35432043,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":17,"Index":4,"Attempt":0,"Partition ID":4,"Launch Time":1747554903685,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906106,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"4","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"449","Value":"6257","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85196720","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"84","Value":"1157","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"640","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1195","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"20","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"33723296","Value":"249844682","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"33","Value":"395","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":562,"Value":6513,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":152261800,"Value":1862168900,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":1792,"Value":21231,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":489099900,"Value":5479052800,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":105728,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":102,"Value":960,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85196720,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1195,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":20,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":33723296,"Value":249844682,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":562,"Executor Deserialize CPU Time":152261800,"Executor Run Time":1792,"Executor CPU Time":489099900,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":102,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":33723296,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":41,"Index":29,"Attempt":0,"Partition ID":29,"Launch Time":1747554906145,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":29,"Index":15,"Attempt":0,"Partition ID":15,"Launch Time":1747554905931,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906148,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"75","Value":"6332","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85262256","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"15","Value":"1172","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"672","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1253","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"11933804","Value":"261778486","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"395","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":23,"Value":6536,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":19565900,"Value":1881734800,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":174,"Value":21405,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":78051700,"Value":5557104500,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":111023,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":20,"Value":980,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85262256,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1253,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":21,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":11933804,"Value":261778486,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":23,"Executor Deserialize CPU Time":19565900,"Executor Run Time":174,"Executor CPU Time":78051700,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":20,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":11933804,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":42,"Index":30,"Attempt":0,"Partition ID":30,"Launch Time":1747554906167,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":30,"Index":16,"Attempt":0,"Partition ID":16,"Launch Time":1747554905969,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906170,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"90","Value":"6422","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85327792","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"8","Value":"1180","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"22","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"704","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1311","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"22","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"622269","Value":"262400755","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"1","Value":"396","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":18,"Value":6554,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16837300,"Value":1898572100,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":145,"Value":21550,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":75144700,"Value":5632249200,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":116318,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":20,"Value":1000,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85327792,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1311,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":622269,"Value":262400755,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":18,"Executor Deserialize CPU Time":16837300,"Executor Run Time":145,"Executor CPU Time":75144700,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":20,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":622269,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":43,"Index":31,"Attempt":0,"Partition ID":31,"Launch Time":1747554906204,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":32,"Index":18,"Attempt":0,"Partition ID":18,"Launch Time":1747554906009,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906205,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"89","Value":"6511","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85393328","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"23","Value":"1203","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"23","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1369","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"23","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"443727","Value":"262844482","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"396","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":26,"Value":6580,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":21848300,"Value":1920420400,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":151,"Value":21701,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":70265000,"Value":5702514200,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":121613,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":20,"Value":1020,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85393328,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1369,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":443727,"Value":262844482,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":26,"Executor Deserialize CPU Time":21848300,"Executor Run Time":151,"Executor CPU Time":70265000,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":20,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":443727,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":31,"Index":17,"Attempt":0,"Partition ID":17,"Launch Time":1747554905997,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906232,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"125","Value":"6636","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85458864","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"9","Value":"1212","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"24","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"768","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1427","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"24","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"482272","Value":"263326754","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"396","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":28,"Value":6608,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":22848000,"Value":1943268400,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":190,"Value":21891,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":76712600,"Value":5779226800,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":126908,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":20,"Value":1040,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85458864,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1427,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":482272,"Value":263326754,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":28,"Executor Deserialize CPU Time":22848000,"Executor Run Time":190,"Executor CPU Time":76712600,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":20,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":482272,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":44,"Index":32,"Attempt":0,"Partition ID":32,"Launch Time":1747554906232,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":45,"Index":33,"Attempt":0,"Partition ID":33,"Launch Time":1747554906284,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":34,"Index":20,"Attempt":0,"Partition ID":20,"Launch Time":1747554906055,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906285,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"85","Value":"6721","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85524400","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"14","Value":"1226","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1485","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"25","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"1055284","Value":"264382038","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"1","Value":"397","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":28,"Value":6636,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":19544900,"Value":1962813300,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":177,"Value":22068,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":78542200,"Value":5857769000,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":132160,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85524400,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1485,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":25,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":1055284,"Value":264382038,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":28,"Executor Deserialize CPU Time":19544900,"Executor Run Time":177,"Executor CPU Time":78542200,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":1055284,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":46,"Index":35,"Attempt":0,"Partition ID":35,"Launch Time":1747554906301,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":35,"Index":21,"Attempt":0,"Partition ID":21,"Launch Time":1747554906062,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906302,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"118","Value":"6839","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85589936","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"11","Value":"1237","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"26","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"832","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1543","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"26","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"1533039","Value":"265915077","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"1","Value":"398","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":33,"Value":6669,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17245600,"Value":1980058900,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":175,"Value":22243,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":75123900,"Value":5932892900,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":137455,"Internal":true,"Count Failed Values":true},{"ID":275,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85589936,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1543,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":26,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":1533039,"Value":265915077,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":33,"Executor Deserialize CPU Time":17245600,"Executor Run Time":175,"Executor CPU Time":75123900,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":1533039,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":47,"Index":36,"Attempt":0,"Partition ID":36,"Launch Time":1747554906311,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":33,"Index":19,"Attempt":0,"Partition ID":19,"Launch Time":1747554906053,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906312,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"116","Value":"6955","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85655472","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"15","Value":"1252","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"27","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"864","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1601","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"27","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"831056","Value":"266746133","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"398","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":28,"Value":6697,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":21383200,"Value":2001442100,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":220,"Value":22463,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":79796400,"Value":6012689300,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":142707,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85655472,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1601,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":27,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":831056,"Value":266746133,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":28,"Executor Deserialize CPU Time":21383200,"Executor Run Time":220,"Executor CPU Time":79796400,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":831056,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":48,"Index":37,"Attempt":0,"Partition ID":37,"Launch Time":1747554906322,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":39,"Index":26,"Attempt":0,"Partition ID":26,"Launch Time":1747554906100,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906330,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"82","Value":"7037","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85721008","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"26","Value":"1278","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"28","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"896","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1659","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"28","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"999412","Value":"267745545","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"1","Value":"399","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":25,"Value":6722,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16993200,"Value":2018435300,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":161,"Value":22624,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":83918000,"Value":6096607300,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":147959,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85721008,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1659,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":28,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":999412,"Value":267745545,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":25,"Executor Deserialize CPU Time":16993200,"Executor Run Time":161,"Executor CPU Time":83918000,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":999412,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":36,"Index":23,"Attempt":0,"Partition ID":23,"Launch Time":1747554906064,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906339,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"108","Value":"7145","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85786544","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"27","Value":"1305","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"928","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1717","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"29","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"7367768","Value":"275113313","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"2","Value":"401","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":41,"Value":6763,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":19192300,"Value":2037627600,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":209,"Value":22833,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":77490600,"Value":6174097900,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":153211,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85786544,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1717,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":29,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":7367768,"Value":275113313,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":41,"Executor Deserialize CPU Time":19192300,"Executor Run Time":209,"Executor CPU Time":77490600,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":7367768,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":49,"Index":38,"Attempt":0,"Partition ID":38,"Launch Time":1747554906342,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":37,"Index":24,"Attempt":0,"Partition ID":24,"Launch Time":1747554906083,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906350,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"78","Value":"7223","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85852080","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"18","Value":"1323","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"30","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"960","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1775","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"30","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"977357","Value":"276090670","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"1","Value":"402","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":41,"Value":6804,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":20467100,"Value":2058094700,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":188,"Value":23021,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":82339300,"Value":6256437200,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":158463,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85852080,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1775,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":30,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":977357,"Value":276090670,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":41,"Executor Deserialize CPU Time":20467100,"Executor Run Time":188,"Executor CPU Time":82339300,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":977357,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":50,"Index":39,"Attempt":0,"Partition ID":39,"Launch Time":1747554906351,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":38,"Index":25,"Attempt":0,"Partition ID":25,"Launch Time":1747554906088,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906360,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"98","Value":"7321","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85917616","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"31","Value":"1354","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"31","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"992","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1833","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"31","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"1476326","Value":"277566996","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"1","Value":"403","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":22,"Value":6826,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17664300,"Value":2075759000,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":215,"Value":23236,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":80173600,"Value":6336610800,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":163715,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85917616,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1833,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":31,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":1476326,"Value":277566996,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":22,"Executor Deserialize CPU Time":17664300,"Executor Run Time":215,"Executor CPU Time":80173600,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":1476326,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":51,"Index":40,"Attempt":0,"Partition ID":40,"Launch Time":1747554906365,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":52,"Index":41,"Attempt":0,"Partition ID":41,"Launch Time":1747554906371,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":53,"Index":43,"Attempt":0,"Partition ID":43,"Launch Time":1747554906378,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":41,"Index":29,"Attempt":0,"Partition ID":29,"Launch Time":1747554906145,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906379,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"66","Value":"7387","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"85983152","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"7","Value":"1361","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1024","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1891","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"481221","Value":"278048217","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"403","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":27,"Value":6853,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16180700,"Value":2091939700,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":150,"Value":23386,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":65161700,"Value":6401772500,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":168967,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":85983152,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1891,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":32,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":481221,"Value":278048217,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":27,"Executor Deserialize CPU Time":16180700,"Executor Run Time":150,"Executor CPU Time":65161700,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":481221,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":40,"Index":28,"Attempt":0,"Partition ID":28,"Launch Time":1747554906102,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906381,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"96","Value":"7483","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86048688","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"21","Value":"1382","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1056","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"1949","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"33","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"1035541","Value":"279083758","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"1","Value":"404","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":26,"Value":6879,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":19262400,"Value":2111202100,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":214,"Value":23600,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":82628900,"Value":6484401400,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":174219,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86048688,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":1949,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":33,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":1035541,"Value":279083758,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":26,"Executor Deserialize CPU Time":19262400,"Executor Run Time":214,"Executor CPU Time":82628900,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":1035541,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":42,"Index":30,"Attempt":0,"Partition ID":30,"Launch Time":1747554906167,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906401,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"90","Value":"7573","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86114224","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"18","Value":"1400","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"34","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1088","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2007","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"34","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"868656","Value":"279952414","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"404","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":17,"Value":6896,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14968800,"Value":2126170900,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":187,"Value":23787,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":67913400,"Value":6552314800,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":179471,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86114224,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2007,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":34,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":868656,"Value":279952414,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":17,"Executor Deserialize CPU Time":14968800,"Executor Run Time":187,"Executor CPU Time":67913400,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":868656,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":54,"Index":44,"Attempt":0,"Partition ID":44,"Launch Time":1747554906404,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":55,"Index":46,"Attempt":0,"Partition ID":46,"Launch Time":1747554906419,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":56,"Index":47,"Attempt":0,"Partition ID":47,"Launch Time":1747554906422,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":43,"Index":31,"Attempt":0,"Partition ID":31,"Launch Time":1747554906204,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906427,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"82","Value":"7655","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86179760","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"10","Value":"1410","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"35","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2065","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"35","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"728240","Value":"280680654","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"404","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":19,"Value":6915,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16519700,"Value":2142690600,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":161,"Value":23948,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":69988000,"Value":6622302800,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":184723,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86179760,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2065,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":35,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":728240,"Value":280680654,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":19,"Executor Deserialize CPU Time":16519700,"Executor Run Time":161,"Executor CPU Time":69988000,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":728240,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":44,"Index":32,"Attempt":0,"Partition ID":32,"Launch Time":1747554906232,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906428,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"60","Value":"7715","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86245296","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"20","Value":"1430","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"36","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1152","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2123","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"36","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"876953","Value":"281557607","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"2","Value":"406","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":18,"Value":6933,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16264900,"Value":2158955500,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":136,"Value":24084,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":66714900,"Value":6689017700,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":189975,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86245296,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2123,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":36,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":876953,"Value":281557607,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":18,"Executor Deserialize CPU Time":16264900,"Executor Run Time":136,"Executor CPU Time":66714900,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":876953,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":46,"Index":35,"Attempt":0,"Partition ID":35,"Launch Time":1747554906301,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906545,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"92","Value":"7807","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86310832","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"29","Value":"1459","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"37","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1184","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2181","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"37","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"691900","Value":"282249507","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"406","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":33,"Value":6966,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16038600,"Value":2174994100,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":194,"Value":24278,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":75364300,"Value":6764382000,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":195227,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86310832,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2181,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":37,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":691900,"Value":282249507,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":33,"Executor Deserialize CPU Time":16038600,"Executor Run Time":194,"Executor CPU Time":75364300,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":691900,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":57,"Index":48,"Attempt":0,"Partition ID":48,"Launch Time":1747554906546,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":4,"Stage Attempt ID":0,"Task Info":{"Task ID":58,"Index":49,"Attempt":0,"Partition ID":49,"Launch Time":1747554906552,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":45,"Index":33,"Attempt":0,"Partition ID":33,"Launch Time":1747554906284,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906553,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"121","Value":"7928","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86376368","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"32","Value":"1491","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"38","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1216","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2239","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"38","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"577843","Value":"282827350","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"406","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":43,"Value":7009,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":19553900,"Value":2194548000,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":206,"Value":24484,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":78498400,"Value":6842880400,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":200479,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86376368,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2239,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":38,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":577843,"Value":282827350,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":43,"Executor Deserialize CPU Time":19553900,"Executor Run Time":206,"Executor CPU Time":78498400,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":577843,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":52,"Index":41,"Attempt":0,"Partition ID":41,"Launch Time":1747554906371,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906576,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"58","Value":"7986","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86441904","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"8","Value":"1499","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"39","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1248","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2297","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"39","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"561249","Value":"283388599","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"406","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":15,"Value":7024,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":13812600,"Value":2208360600,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":154,"Value":24638,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":66759900,"Value":6909640300,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":205731,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86441904,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2297,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":39,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":561249,"Value":283388599,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":15,"Executor Deserialize CPU Time":13812600,"Executor Run Time":154,"Executor CPU Time":66759900,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":561249,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":55,"Index":46,"Attempt":0,"Partition ID":46,"Launch Time":1747554906419,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906583,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"61","Value":"8047","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86507440","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"9","Value":"1508","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2355","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"40","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"492249","Value":"283880848","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"406","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":19,"Value":7043,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17224400,"Value":2225585000,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":127,"Value":24765,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":61771300,"Value":6971411600,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":210983,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86507440,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2355,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":40,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":492249,"Value":283880848,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":19,"Executor Deserialize CPU Time":17224400,"Executor Run Time":127,"Executor CPU Time":61771300,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":492249,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":51,"Index":40,"Attempt":0,"Partition ID":40,"Launch Time":1747554906365,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906601,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"94","Value":"8141","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86572976","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"11","Value":"1519","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"41","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1312","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2413","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"41","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"1013274","Value":"284894122","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"1","Value":"407","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":28,"Value":7071,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":18890000,"Value":2244475000,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":164,"Value":24929,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":77198400,"Value":7048610000,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":216278,"Internal":true,"Count Failed Values":true},{"ID":275,"Name":"internal.metrics.resultSerializationTime","Update":11,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86572976,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2413,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":41,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":1013274,"Value":284894122,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":28,"Executor Deserialize CPU Time":18890000,"Executor Run Time":164,"Executor CPU Time":77198400,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":0,"Result Serialization Time":11,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":1013274,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":54,"Index":44,"Attempt":0,"Partition ID":44,"Launch Time":1747554906404,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906610,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"81","Value":"8222","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86638512","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"17","Value":"1536","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"42","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2471","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"42","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"458011","Value":"285352133","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"407","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":23,"Value":7094,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":15696600,"Value":2260171600,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":160,"Value":25089,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":64263100,"Value":7112873100,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":221530,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86638512,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2471,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":42,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":458011,"Value":285352133,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":23,"Executor Deserialize CPU Time":15696600,"Executor Run Time":160,"Executor CPU Time":64263100,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":458011,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":56,"Index":47,"Attempt":0,"Partition ID":47,"Launch Time":1747554906422,"Executor ID":"1","Host":"172.18.0.5","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906620,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"86","Value":"8308","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86704048","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"12","Value":"1548","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"43","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2529","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"43","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"542872","Value":"285895005","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"407","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":22,"Value":7116,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16845300,"Value":2277016900,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":164,"Value":25253,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":64840900,"Value":7177714000,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":226782,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86704048,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2529,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":43,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":542872,"Value":285895005,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":22,"Executor Deserialize CPU Time":16845300,"Executor Run Time":164,"Executor CPU Time":64840900,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":542872,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":47,"Index":36,"Attempt":0,"Partition ID":36,"Launch Time":1747554906311,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906625,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"137","Value":"8445","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86769584","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"38","Value":"1586","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"44","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1408","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2587","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"44","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"3172782","Value":"289067787","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"407","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":49,"Value":7165,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17517600,"Value":2294534500,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":242,"Value":25495,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":83237700,"Value":7260951700,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":232034,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86769584,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2587,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":44,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":3172782,"Value":289067787,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":49,"Executor Deserialize CPU Time":17517600,"Executor Run Time":242,"Executor CPU Time":83237700,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":3172782,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":48,"Index":37,"Attempt":0,"Partition ID":37,"Launch Time":1747554906322,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906651,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"125","Value":"8570","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86835120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"20","Value":"1606","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"45","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1440","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2645","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"45","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"13675423","Value":"302743210","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"13","Value":"420","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":32,"Value":7197,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17526800,"Value":2312061300,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":260,"Value":25755,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":79460000,"Value":7340411700,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":237329,"Internal":true,"Count Failed Values":true},{"ID":275,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86835120,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2645,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":45,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":13675423,"Value":302743210,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":32,"Executor Deserialize CPU Time":17526800,"Executor Run Time":260,"Executor CPU Time":79460000,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":13675423,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":53,"Index":43,"Attempt":0,"Partition ID":43,"Launch Time":1747554906378,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906653,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"158","Value":"8728","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86900656","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"23","Value":"1629","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"46","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1472","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2703","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"46","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"2979433","Value":"305722643","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"1","Value":"421","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":19,"Value":7216,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":15731900,"Value":2327793200,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":241,"Value":25996,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":78161300,"Value":7418573000,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":242581,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86900656,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2703,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":46,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":2979433,"Value":305722643,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":19,"Executor Deserialize CPU Time":15731900,"Executor Run Time":241,"Executor CPU Time":78161300,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":2979433,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":50,"Index":39,"Attempt":0,"Partition ID":39,"Launch Time":1747554906351,"Executor ID":"2","Host":"172.18.0.3","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906661,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"159","Value":"8887","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"86966192","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"10","Value":"1639","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"47","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1504","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2761","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"47","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"1381174","Value":"307103817","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"421","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":27,"Value":7243,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16455700,"Value":2344248900,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":250,"Value":26246,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":79284100,"Value":7497857100,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5252,"Value":247833,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":86966192,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2761,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":47,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":1381174,"Value":307103817,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":27,"Executor Deserialize CPU Time":16455700,"Executor Run Time":250,"Executor CPU Time":79284100,"Peak Execution Memory":65536,"Result Size":5252,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":1381174,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":49,"Index":38,"Attempt":0,"Partition ID":38,"Launch Time":1747554906342,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906664,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"138","Value":"9025","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"87031728","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"59","Value":"1698","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"48","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1536","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2819","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"48","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"14049833","Value":"321153650","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"1","Value":"422","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":18,"Value":7261,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":15862400,"Value":2360111300,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":289,"Value":26535,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":83940300,"Value":7581797400,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":253128,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":9,"Value":1049,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":87031728,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2819,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":48,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":14049833,"Value":321153650,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":18,"Executor Deserialize CPU Time":15862400,"Executor Run Time":289,"Executor CPU Time":83940300,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":9,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":14049833,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":58,"Index":49,"Attempt":0,"Partition ID":49,"Launch Time":1747554906552,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906714,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"71","Value":"9096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"87097264","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"9","Value":"1707","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"49","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1568","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2877","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"49","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"458431","Value":"321612081","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"1","Value":"423","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":39,"Value":7300,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":20977000,"Value":2381088300,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":109,"Value":26644,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":62700600,"Value":7644498000,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":258423,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":9,"Value":1058,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":87097264,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2877,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":49,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":458431,"Value":321612081,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":39,"Executor Deserialize CPU Time":20977000,"Executor Run Time":109,"Executor CPU Time":62700600,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":9,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":458431,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":4,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":57,"Index":48,"Attempt":0,"Partition ID":48,"Launch Time":1747554906546,"Executor ID":"0","Host":"172.18.0.6","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906741,"Failed":false,"Killed":false,"Accumulables":[{"ID":197,"Name":"duration","Update":"0","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Update":"45","Value":"9141","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Update":"0","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Update":"65536","Value":"87162800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Update":"7","Value":"1714","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Update":"1","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Update":"0","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Update":"32","Value":"1600","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Update":"58","Value":"2935","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Update":"1","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Update":"428709","Value":"322040790","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Update":"0","Value":"423","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Update":60,"Value":7360,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Update":20015700,"Value":2401104000,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Update":112,"Value":26756,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Update":59249600,"Value":7703747600,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Update":5295,"Value":263718,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Update":9,"Value":1067,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Update":65536,"Value":87162800,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":0,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":0,"Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Update":0,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":58,"Value":2935,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":50,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Update":428709,"Value":322040790,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":60,"Executor Deserialize CPU Time":20015700,"Executor Run Time":112,"Executor CPU Time":59249600,"Peak Execution Memory":65536,"Result Size":5295,"JVM GC Time":9,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":58,"Shuffle Write Time":428709,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":50,"RDD Info":[{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"54\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"71\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":23,"Name":"Delta Table State #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log","Scope":"{\"id\":\"60\",\"name\":\"map\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"62\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"59\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"Project\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"DeserializeToObject\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"SQLExecutionRDD","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"MapPartitions\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log","Scope":"{\"id\":\"69\",\"name\":\"map\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"49\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"SQLExecutionRDD","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[3],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1747554903643,"Completion Time":1747554906743,"Accumulables":[{"ID":142,"Name":"local blocks read","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":145,"Name":"local bytes read","Value":"5157","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":146,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":147,"Name":"records read","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":197,"Name":"duration","Value":"121","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":198,"Name":"duration","Value":"9141","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":199,"Name":"sort time","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":200,"Name":"peak memory","Value":"87162800","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":201,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":202,"Name":"duration","Value":"1714","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":203,"Name":"number of output rows","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":204,"Name":"number of output rows","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":233,"Name":"number of output rows","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":236,"Name":"time in aggregation build","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":239,"Name":"number of output rows","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":246,"Name":"data size","Value":"1600","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":265,"Name":"shuffle bytes written","Value":"2935","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":266,"Name":"shuffle records written","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":267,"Name":"shuffle write time","Value":"322040790","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":268,"Name":"duration","Value":"423","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"internal.metrics.executorDeserializeTime","Value":7360,"Internal":true,"Count Failed Values":true},{"ID":270,"Name":"internal.metrics.executorDeserializeCpuTime","Value":2401104000,"Internal":true,"Count Failed Values":true},{"ID":271,"Name":"internal.metrics.executorRunTime","Value":26756,"Internal":true,"Count Failed Values":true},{"ID":272,"Name":"internal.metrics.executorCpuTime","Value":7703747600,"Internal":true,"Count Failed Values":true},{"ID":273,"Name":"internal.metrics.resultSize","Value":263718,"Internal":true,"Count Failed Values":true},{"ID":274,"Name":"internal.metrics.jvmGCTime","Value":1067,"Internal":true,"Count Failed Values":true},{"ID":275,"Name":"internal.metrics.resultSerializationTime","Value":24,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.peakExecutionMemory","Value":87162800,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":281,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":5,"Internal":true,"Count Failed Values":true},{"ID":282,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":283,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":284,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":5157,"Internal":true,"Count Failed Values":true},{"ID":285,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":286,"Name":"internal.metrics.shuffle.read.recordsRead","Value":8,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":2935,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":50,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.write.writeTime","Value":322040790,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":5,"Completion Time":1747554906744,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":9,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (9)\n+- == Final Plan ==\n   * HashAggregate (6)\n   +- ShuffleQueryStage (5), Statistics(sizeInBytes=1600.0 B, rowCount=50)\n      +- Exchange (4)\n         +- * HashAggregate (3)\n            +- * Project (2)\n               +- * Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log (1)\n+- == Initial Plan ==\n   HashAggregate (8)\n   +- Exchange (7)\n      +- HashAggregate (3)\n         +- Project (2)\n            +- Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log (1)\n\n\n(1) Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log [codegen id : 1]\nOutput [11]: [path#1371, partitionValues#1372, size#1373L, modificationTime#1374L, dataChange#1375, stats#1394, tags#1377, deletionVector#1378, baseRowId#1379L, defaultRowCommitVersion#1380L, clusteringProvider#1381]\nArguments: [path#1371, partitionValues#1372, size#1373L, modificationTime#1374L, dataChange#1375, stats#1394, tags#1377, deletionVector#1378, baseRowId#1379L, defaultRowCommitVersion#1380L, clusteringProvider#1381], Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log MapPartitionsRDD[27] at count at NativeMethodAccessorImpl.java:0, ExistingRDD, UnknownPartitioning(0)\n\n(2) Project [codegen id : 1]\nOutput [2]: [stats#1394.numRecords AS _extract_numRecords#1430L, deletionVector#1378.cardinality AS _extract_cardinality#1431L]\nInput [11]: [path#1371, partitionValues#1372, size#1373L, modificationTime#1374L, dataChange#1375, stats#1394, tags#1377, deletionVector#1378, baseRowId#1379L, defaultRowCommitVersion#1380L, clusteringProvider#1381]\n\n(3) HashAggregate [codegen id : 1]\nInput [2]: [_extract_numRecords#1430L, _extract_cardinality#1431L]\nKeys: []\nFunctions [3]: [partial_sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), partial_count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), partial_count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)]\nAggregate Attributes [3]: [sum#1432L, count#1433L, count#1434L]\nResults [3]: [sum#1435L, count#1436L, count#1437L]\n\n(4) Exchange\nInput [3]: [sum#1435L, count#1436L, count#1437L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=251]\n\n(5) ShuffleQueryStage\nOutput [3]: [sum#1435L, count#1436L, count#1437L]\nArguments: 0\n\n(6) HashAggregate [codegen id : 2]\nInput [3]: [sum#1435L, count#1436L, count#1437L]\nKeys: []\nFunctions [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)]\nAggregate Attributes [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0)))#1417L, count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END)#1419L, count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)#1421L]\nResults [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0)))#1417L AS numLogicalRecords#1418L, count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END)#1419L AS missingNumRecords#1420L, count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)#1421L AS countNonEmptyFiles#1422L]\n\n(7) Exchange\nInput [3]: [sum#1435L, count#1436L, count#1437L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=242]\n\n(8) HashAggregate\nInput [3]: [sum#1435L, count#1436L, count#1437L]\nKeys: []\nFunctions [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)]\nAggregate Attributes [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0)))#1417L, count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END)#1419L, count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)#1421L]\nResults [3]: [sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0)))#1417L AS numLogicalRecords#1418L, count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END)#1419L AS missingNumRecords#1420L, count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)#1421L AS countNonEmptyFiles#1422L]\n\n(9) AdaptiveSparkPlan\nOutput [3]: [numLogicalRecords#1418L, missingNumRecords#1420L, countNonEmptyFiles#1422L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=251]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_sum((_extract_numRecords#1430L - coalesce(_extract_cardinality#1431L, 0))), partial_count(CASE WHEN isnull(_extract_numRecords#1430L) THEN 1 END), partial_count(CASE WHEN (_extract_numRecords#1430L > 0) THEN 1 END)])","children":[{"nodeName":"Project","simpleString":"Project [stats#1394.numRecords AS _extract_numRecords#1430L, deletionVector#1378.cardinality AS _extract_cardinality#1431L]","children":[{"nodeName":"Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log","simpleString":"Scan ExistingRDD Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log[path#1371,partitionValues#1372,size#1373L,modificationTime#1374L,dataChange#1375,stats#1394,tags#1377,deletionVector#1378,baseRowId#1379L,defaultRowCommitVersion#1380L,clusteringProvider#1381]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":239,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":235,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":236,"metricType":"timing"},{"name":"peak memory","accumulatorId":234,"metricType":"size"},{"name":"number of output rows","accumulatorId":233,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":238,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":237,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":268,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":266,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":260,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":267,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":261,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":258,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":255,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":264,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":257,"metricType":"sum"},{"name":"records read","accumulatorId":254,"metricType":"sum"},{"name":"local bytes read","accumulatorId":252,"metricType":"size"},{"name":"fetch wait time","accumulatorId":253,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":250,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":256,"metricType":"sum"},{"name":"local blocks read","accumulatorId":249,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":259,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":248,"metricType":"sum"},{"name":"data size","accumulatorId":246,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":262,"metricType":"size"},{"name":"number of partitions","accumulatorId":247,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":263,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":251,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":265,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":307,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":308,"metricType":"timing"},{"name":"peak memory","accumulatorId":306,"metricType":"size"},{"name":"number of output rows","accumulatorId":305,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":310,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":309,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":304,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":6,"Submission Time":1747554906793,"Stage Infos":[{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"44\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"48\",\"name\":\"Scan json \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[13],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"45\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":13,"Name":"FileScanRDD","Scope":"{\"id\":\"48\",\"name\":\"Scan json \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":50,"RDD Info":[{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"70\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"54\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"71\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[27],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":23,"Name":"Delta Table State #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log","Scope":"{\"id\":\"60\",\"name\":\"map\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"62\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[23],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":17,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"59\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"61\",\"name\":\"Project\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"DeserializeToObject\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"SQLExecutionRDD","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"52\",\"name\":\"MapPartitions\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":27,"Name":"Delta Table State with Stats #0 - file:/opt/spark/warehouse/invoices_bronze/_delta_log","Scope":"{\"id\":\"69\",\"name\":\"map\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":true,"Use Memory":true,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"49\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[20],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"SQLExecutionRDD","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":50,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[5],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"80\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"79\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[6],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[5,6,7],"Properties":{"spark.driver.port":"42423","spark.submit.pyFiles":"","spark.app.startTime":"1747554840211","spark.sql.catalogImplementation":"hive","spark.rdd.scope":"{\"id\":\"81\",\"name\":\"collect\"}","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.app.submitTime":"1747554753184","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"/opt/spark/spark-events","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.execution.id":"9","spark.history.fs.logDirectory":"/opt/spark/spark-events","spark.sql.warehouse.dir":"file:/opt/spark/warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"2g","spark.master":"spark://delta-streaming-spark-master:7077","spark.executor.id":"driver","spark.app.name":"InvoicesStreamMedallion","spark.executor.cores":"4","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.driver.host":"163d156376d2","spark.log.level":"INFO","spark.app.id":"app-20250518075400-0005","spark.driver.memoryOverheadFactor":"0.1","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"80\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"79\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[6],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1747554906794,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.driver.port":"42423","spark.submit.pyFiles":"","spark.app.startTime":"1747554840211","spark.sql.catalogImplementation":"hive","spark.rdd.scope":"{\"id\":\"81\",\"name\":\"collect\"}","spark.sql.parquet.fieldId.read.enabled":"true","spark.rdd.compress":"True","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.app.submitTime":"1747554753184","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"/opt/spark/spark-events","spark.serializer":"org.apache.spark.serializer.KryoSerializer","spark.sql.execution.id":"9","spark.history.fs.logDirectory":"/opt/spark/spark-events","spark.sql.warehouse.dir":"file:/opt/spark/warehouse","spark.rdd.scope.noOverride":"true","spark.executor.memory":"2g","spark.master":"spark://delta-streaming-spark-master:7077","spark.executor.id":"driver","spark.app.name":"InvoicesStreamMedallion","spark.executor.cores":"4","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.driver.host":"163d156376d2","spark.log.level":"INFO","spark.app.id":"app-20250518075400-0005","spark.driver.memoryOverheadFactor":"0.1","resource.executor.cores":"4","spark.eventLog.enabled":"true","__fetch_continuous_blocks_in_batch_enabled":"true","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false","spark.ui.showConsoleProgress":"true","spark.sql.execution.root.id":"6","spark.serializer.objectStreamReset":"100","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false"}}
{"Event":"SparkListenerTaskStart","Stage ID":7,"Stage Attempt ID":0,"Task Info":{"Task ID":59,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1747554906802,"Executor ID":"1","Host":"172.18.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":7,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":59,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1747554906802,"Executor ID":"1","Host":"172.18.0.5","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1747554906978,"Failed":false,"Killed":false,"Accumulables":[{"ID":248,"Name":"remote blocks read","Update":"26","Value":"26","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":249,"Name":"local blocks read","Update":"24","Value":"24","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":250,"Name":"remote bytes read","Update":"1508","Value":"1508","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":252,"Name":"local bytes read","Update":"1427","Value":"1427","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":253,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":254,"Name":"records read","Update":"50","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":263,"Name":"remote reqs duration","Update":"72","Value":"72","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":304,"Name":"duration","Update":"18","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":305,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"time in aggregation build","Update":"17","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":311,"Name":"internal.metrics.executorDeserializeTime","Update":103,"Value":103,"Internal":true,"Count Failed Values":true},{"ID":312,"Name":"internal.metrics.executorDeserializeCpuTime","Update":70667100,"Value":70667100,"Internal":true,"Count Failed Values":true},{"ID":313,"Name":"internal.metrics.executorRunTime","Update":62,"Value":62,"Internal":true,"Count Failed Values":true},{"ID":314,"Name":"internal.metrics.executorCpuTime","Update":43981700,"Value":43981700,"Internal":true,"Count Failed Values":true},{"ID":315,"Name":"internal.metrics.resultSize","Update":3816,"Value":3816,"Internal":true,"Count Failed Values":true},{"ID":322,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":26,"Value":26,"Internal":true,"Count Failed Values":true},{"ID":323,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":24,"Value":24,"Internal":true,"Count Failed Values":true},{"ID":324,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":1508,"Value":1508,"Internal":true,"Count Failed Values":true},{"ID":325,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":326,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":1427,"Value":1427,"Internal":true,"Count Failed Values":true},{"ID":327,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":328,"Name":"internal.metrics.shuffle.read.recordsRead","Update":50,"Value":50,"Internal":true,"Count Failed Values":true},{"ID":329,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":330,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":332,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":334,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":335,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":336,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":337,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":72,"Value":72,"Internal":true,"Count Failed Values":true},{"ID":338,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":103,"Executor Deserialize CPU Time":70667100,"Executor Run Time":62,"Executor CPU Time":43981700,"Peak Execution Memory":0,"Result Size":3816,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":26,"Local Blocks Fetched":24,"Fetch Wait Time":0,"Remote Bytes Read":1508,"Remote Bytes Read To Disk":0,"Local Bytes Read":1427,"Total Records Read":50,"Remote Requests Duration":72,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":32,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"80\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"75\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"79\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[6],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","Submission Time":1747554906794,"Completion Time":1747554906979,"Accumulables":[{"ID":248,"Name":"remote blocks read","Value":"26","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":249,"Name":"local blocks read","Value":"24","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":250,"Name":"remote bytes read","Value":"1508","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":252,"Name":"local bytes read","Value":"1427","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":253,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":254,"Name":"records read","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":263,"Name":"remote reqs duration","Value":"72","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":304,"Name":"duration","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":305,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":308,"Name":"time in aggregation build","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":311,"Name":"internal.metrics.executorDeserializeTime","Value":103,"Internal":true,"Count Failed Values":true},{"ID":312,"Name":"internal.metrics.executorDeserializeCpuTime","Value":70667100,"Internal":true,"Count Failed Values":true},{"ID":313,"Name":"internal.metrics.executorRunTime","Value":62,"Internal":true,"Count Failed Values":true},{"ID":314,"Name":"internal.metrics.executorCpuTime","Value":43981700,"Internal":true,"Count Failed Values":true},{"ID":315,"Name":"internal.metrics.resultSize","Value":3816,"Internal":true,"Count Failed Values":true},{"ID":322,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":26,"Internal":true,"Count Failed Values":true},{"ID":323,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":24,"Internal":true,"Count Failed Values":true},{"ID":324,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":1508,"Internal":true,"Count Failed Values":true},{"ID":325,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":326,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":1427,"Internal":true,"Count Failed Values":true},{"ID":327,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":328,"Name":"internal.metrics.shuffle.read.recordsRead","Value":50,"Internal":true,"Count Failed Values":true},{"ID":329,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":330,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":331,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":332,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":333,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":334,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":335,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":336,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":337,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":72,"Internal":true,"Count Failed Values":true},{"ID":338,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":6,"Completion Time":1747554906980,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"5d289b4d-1b22-457d-8828-2e74638cb532","runId":"6fe779d0-8afe-459e-a1d8-537e0391e15e","timestamp":"2025-05-18T07:55:06.941Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"01827939-abd3-4a56-a45c-fa1ec7e4733b","runId":"065116dd-65ea-4cdb-a11d-6ca354fd88a6","timestamp":"2025-05-18T07:55:06.967Z"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":9,"time":1747554907014,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":6,"rootExecutionId":6,"description":"count at NativeMethodAccessorImpl.java:0","details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:569)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.ClientServerConnection.waitForCommands(ClientServerConnection.java:182)\npy4j.ClientServerConnection.run(ClientServerConnection.java:106)\njava.base/java.lang.Thread.run(Thread.java:840)","physicalPlanDescription":"== Physical Plan ==\nLocalTableScan (1)\n\n\n(1) LocalTableScan\nOutput [1]: [count#1128L]\nArguments: [count#1128L]\n\n","sparkPlanInfo":{"nodeName":"LocalTableScan","simpleString":"LocalTableScan [count#1128L]","children":[],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":346,"metricType":"sum"}]},"time":1747554907019,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[346,1]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":6,"time":1747554907031,"errorMessage":""}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"5d289b4d-1b22-457d-8828-2e74638cb532","runId":"6fe779d0-8afe-459e-a1d8-537e0391e15e","timestamp":"2025-05-18T07:55:16.982Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"01827939-abd3-4a56-a45c-fa1ec7e4733b","runId":"065116dd-65ea-4cdb-a11d-6ca354fd88a6","timestamp":"2025-05-18T07:55:17.001Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"01827939-abd3-4a56-a45c-fa1ec7e4733b","runId":"065116dd-65ea-4cdb-a11d-6ca354fd88a6","timestamp":"2025-05-18T07:55:27.003Z"}
{"Event":"org.apache.spark.sql.streaming.StreamingQueryListener$QueryIdleEvent","id":"5d289b4d-1b22-457d-8828-2e74638cb532","runId":"6fe779d0-8afe-459e-a1d8-537e0391e15e","timestamp":"2025-05-18T07:55:26.997Z"}
{"Event":"SparkListenerApplicationEnd","Timestamp":1747554936020}
